{"searchDocs":[{"title":"About self-hosting","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/about_self_hosting","content":"About self-hosting Self-hosting means owning and administrating your own server, typically at home, to host your personal data and services yourself instead of relying exclusively on third parties. For instance, you can self-host your blog, such that it 'lives' on a machine that you have control of, instead of having it on somebody else's computer (a.k.a. FAANG or The Cloud) in exchange for money, advertisements, or private data. Self-hosting implies owning a server. A server is a computer that is typically accessible on the network 24/7, and usually does not have a screen or keyboard (it is instead controlled remotely). Contrary to a popular belief, a server is not necessarily a huge and extra-powerful machine: nowadays, a small, ~$30 ARM board is adequate for self-hosting. Self-hosting is not about making &quot;your Internet&quot; more secure and does not provide anonymity by itself. Instead, it is about being autonomous and in control of your services and data — which also means being responsible for them.","keywords":"","version":"Next"},{"title":"Installing \"custom\" apps","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/apps/custom_apps","content":"","keywords":"","version":"Next"},{"title":"Installing your very own webapp​","type":1,"pageTitle":"Installing \"custom\" apps","url":"/doc/pr-2672/en/admin/apps/custom_apps#installing-your-very-own-webapp","content":" A special application exists called My webapp.  It can be seen as &quot;an empty shell&quot; in which you can drop your own HTML, CSS, JS, etc files through SFTP or other means. It also supports PHP, and an SQL database can be initialized.  ","version":"Next","tagName":"h2"},{"title":"Adding a reverse proxy to an app that you manually installed, for example using Docker​","type":1,"pageTitle":"Installing \"custom\" apps","url":"/doc/pr-2672/en/admin/apps/custom_apps#adding-a-reverse-proxy-to-an-app-that-you-manually-installed-for-example-using-docker","content":" While YunoHost apps do not use Docker for reasons that are beyond the scope of this page, you can manually install Docker apps on your server (assuming you know what you do and won't tinker too much the base system ...). However, this is not limiter to Docker, you may have deployed &quot;manually&quot; an app using Python, Ruby or other language, and such app usually listen to a specific port.  Once your app or container is setup, you will probably need to actually expose the container on the web on a specific URL. This can be done using another special app called Redirect.  Make sure to chose the reverse proxy mode, and point it to something like http://127.0.0.1:PORT where PORT is the port of your custom app.  It will add the appropriate configuration bits in Nginx, SSOwat and a tile in the user portal.  ","version":"Next","tagName":"h2"},{"title":"Adding a custom tile in the portal pointing to an external app​","type":1,"pageTitle":"Installing \"custom\" apps","url":"/doc/pr-2672/en/admin/apps/custom_apps#adding-a-custom-tile-in-the-portal-pointing-to-an-external-app","content":" The Redirect app can also be used add a &quot;shortcut&quot; tile in the user portal that points to an app or page located on a completly different server. Make sure to use the &quot;explicit redirect&quot; mode and the URL of the external page or app.  Generally, you should refrain from manually tinkering and installing apps, except if you are sure they will not interfere with your server. YunoHost proposes two generic apps to help you out: ","version":"Next","tagName":"h2"},{"title":"YunoHost admin documentation","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/","content":"YunoHost admin documentation Here, you'll learn the basics of self-hosting, how to install YunoHost and configure it. Then you'll be able to add users, domains and apps, and ensure backups are done properly. Don't hesitate to contact the community to ask for help !","keywords":"","version":"Next"},{"title":"📦 Applications","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/apps/","content":"","keywords":"","version":"Next"},{"title":"Installing an app​","type":1,"pageTitle":"📦 Applications","url":"/doc/pr-2672/en/admin/apps/#installing-an-app","content":" Let's say you want to install a Custom Webapp. Before actually running the installation steps, YunoHost will usually have you fill in a form to properly set it up for you.  From the web interfaceFrom the command line Pre-installation form of the Custom Webapp  ","version":"Next","tagName":"h2"},{"title":"Subpaths vs. individual domains per apps​","type":1,"pageTitle":"📦 Applications","url":"/doc/pr-2672/en/admin/apps/#subpaths-vs-individual-domains-per-apps","content":" Among specific questions, forms usually ask you to choose a domain and a path onto which the app will be accessible.  In the context of YunoHost, it is quite common to have a single (or a few) domains on which several apps are installed in &quot;subpaths&quot;, so that you end up with something like this:  yolo.com ├── /blog : Wordpress (a blog) ├── /cloud : Nextcloud (a cloud service) ├── /rss : TinyTiny RSS (a RSS reader) ├── /wiki : DokuWiki (a wiki)   Alternatively, you may choose to install each (or some) apps on a dedicated domain. Beyond the aesthetic, using sub-domains instead of sub-paths allows the possibility to move a service to another server more easily. Also, some applications may need an entire domain dedicated to them, for technical reasons. The disadvantage is that you have to add a new domain each time, and therefore potentially configure additional DNS records, restart the diagnostics and install a new Let's Encrypt certificate.  This might look prettier for end users, but is generally considered more complicated and less efficient in the context of YunoHost, since you need to add a new domain each time. Nevertheless, some apps might need an entire domain dedicated to them, for technical reasons.  If all apps from the previous example were installed on a separate domain, this would give something like this:  blog.yolo.com : Wordpress (a blog) cloud.yolo.com : Nextcloud (a cloud service) rss.yolo.com : TinyTiny RSS (a RSS reader) wiki.yolo.com : DokuWiki (a wiki)   info Many applications integrate a feature that allows you to change the URL of your application. This choice between subpath and subdomain can be reversed in some cases via a simple manipulation in the administration interface.  ","version":"Next","tagName":"h3"},{"title":"User access management and public apps​","type":1,"pageTitle":"📦 Applications","url":"/doc/pr-2672/en/admin/apps/#user-access-management-and-public-apps","content":" The installation form usually asks whether or not the app should be publically accessible. If you choose to not make it public, only users logged in YunoHost will be able to reach it.  tip After installation, this can be configured via the webadmin in the Groups and permissions panel, or similarly via the command-line subcategory yunohost user permission.  ","version":"Next","tagName":"h3"},{"title":"Instructions after installation​","type":1,"pageTitle":"📦 Applications","url":"/doc/pr-2672/en/admin/apps/#instructions-after-installation","content":" Some applications need to give you instructions, URLs or credentials once they are installed. So remember to check the email of the first user account or the admin user selected before installation, if it was prompted.  ","version":"Next","tagName":"h3"},{"title":"Multi-instance applications​","type":1,"pageTitle":"📦 Applications","url":"/doc/pr-2672/en/admin/apps/#multi-instance-applications","content":" Some applications support the ability to be installed several times (at different locations) ! To do so, just go another time in Applications → + Install, and select again the application to install.  ","version":"Next","tagName":"h3"},{"title":"LDAP / SSO integration​","type":1,"pageTitle":"📦 Applications","url":"/doc/pr-2672/en/admin/apps/#ldap--sso-integration","content":" Applications that allow users to register may support integration with the LDAP / Single Sign On of YunoHost, so that users who connect to the user portal can be automatically logged in all these apps.  However, some applications do not support this as it can be either not implemented in the upstream, or the package does not work on this part yet. This information is usually available on the README of the application package.  ","version":"Next","tagName":"h2"},{"title":"Application configuration​","type":1,"pageTitle":"📦 Applications","url":"/doc/pr-2672/en/admin/apps/#application-configuration","content":" After installation, some settings handled by YunoHost can be tweaked, such as user and group permissions, application's tile and label in the SSO page, or its access URL.  From the web interfaceFrom the command line You can access the app's operations page by clicking its name in the applications list. Application operations page in the webadmin You can also delete the application from this page.  ","version":"Next","tagName":"h2"},{"title":"Configuration panels​","type":1,"pageTitle":"📦 Applications","url":"/doc/pr-2672/en/admin/apps/#configuration-panels","content":" Some apps include a configuration panel, which features actions and settings specific for each app that they usually do not handle themselves. They can also spare you the need for altering configuration files by hand.  info Configuration panels are not meant to tweak every aspects of the apps. You will surely use their own administration panels more often than YunoHost's configuration panels.  From the web interfaceFrom the command line The configuration panels are accessible in the webadmin in their operations page, trough the Config panel button. Configuration panel for My Webapp  ","version":"Next","tagName":"h3"},{"title":"Execute commands within the app​","type":1,"pageTitle":"📦 Applications","url":"/doc/pr-2672/en/admin/apps/#execute-commands-within-the-app","content":" Starting YunoHost v11.1.21.4, if you need to execute commands with the app's binary, or PHP commands, etc., you can execute the command yunohost app shell &lt;app&gt;. It will:  open a new Bash shell as the app's system useropen the app's working directory (e.g. /var/www/&lt;app&gt;)preload the environment with variables taken from the app's service, if it existsoverride php, so that it points to the PHP version used by the app  ","version":"Next","tagName":"h2"},{"title":"Applications packaging​","type":1,"pageTitle":"📦 Applications","url":"/doc/pr-2672/en/admin/apps/#applications-packaging","content":" Applications must be packaged manually by application packagers/maintainers. Apps can be integrated with YunoHost to support upgrades, backup/restore and LDAP/SSO integration among other things.  If you want to learn or contribute to app packaging, please check the contributor documentation.  ","version":"Next","tagName":"h2"},{"title":"Integration and quality levels​","type":1,"pageTitle":"📦 Applications","url":"/doc/pr-2672/en/admin/apps/#integration-and-quality-levels","content":" Automated tests are being run regularly to test the integration and quality of all apps who were declared to be working by packagers. The result is a level between 0 and 8, whose meaning is detailed on this page. Some tests results may also be available on this dashboard.  By default, only applications of sufficient quality are offered. When the quality of an application drops and until the problem is reolved, the app is hidden from the catalog to prevent its installation and its upgrades are put on hold. ","version":"Next","tagName":"h3"},{"title":"Backup methods","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/backups/backup_methods","content":"","keywords":"","version":"Next"},{"title":"BorgBackup (cf the Borg \"client\" and Borg \"server\" apps)​","type":1,"pageTitle":"Backup methods","url":"/doc/pr-2672/en/admin/backups/backup_methods#borgbackup-cf-the-borg-client-and-borg-server-apps","content":" backup of data on an external disk or on a remote Borg repositorydeduplication and compression of files, which makes it possible to keep many previous copies without too much storage overheaddata encryption, which allows you to store data with a third partyto define the frequency and type of data to be backed upa mail alert system in case of backup failure.  There are remote borg repository providers, it is also possible to create your own repository on another YunoHost with the borgserver application.  ","version":"Next","tagName":"h2"},{"title":"Restic (cf the Restic app)​","type":1,"pageTitle":"Backup methods","url":"/doc/pr-2672/en/admin/backups/backup_methods#restic-cf-the-restic-app","content":" backup of data to remote storage (support for different types of storage: currently SFTP, S3 is planned)deduplication and compression of files, which makes it possible to keep many previous copies without too much storage overheaddata encryption, which allows to store data at a third partyto define the frequency and type of data to be backed upa mail alert system in case of backup failure.  ","version":"Next","tagName":"h2"},{"title":"Archivist​","type":1,"pageTitle":"Backup methods","url":"/doc/pr-2672/en/admin/backups/backup_methods#archivist","content":" warning This application is currently broken!  based on rsync and GPGbackup of data on a remote storage (support for different types of storage)data encryption, which allows to store data at a third party  The package also allows you to finely define the frequency and type of data to be backed up and integrates an email alert system in case of backup failure.  More info on the forum. ","version":"Next","tagName":"h2"},{"title":"🚑 Backups","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/backups/","content":"","keywords":"","version":"Next"},{"title":"Manual backup​","type":1,"pageTitle":"🚑 Backups","url":"/doc/pr-2672/en/admin/backups/#manual-backup","content":" YunoHost comes with a backup system, that allows you to backup (and restore) system configurations and data (e.g. emails) and apps if they support it.  You can manage backups either from the command line (yunohost backup --help) or from the web administration (in the Backups section), though some features are not yet available in the webadmin.  The current default method consists in creating a .tar archive containing all relevant files.  ","version":"Next","tagName":"h2"},{"title":"Creating backups​","type":1,"pageTitle":"🚑 Backups","url":"/doc/pr-2672/en/admin/backups/#creating-backups","content":" From the web interfaceFrom the command line You can easily create backup archives from the webadmin by going to Backups &gt; Local storage and clicking on New backup. You will then be asked to select which configuration, data and apps you want to backup.  ","version":"Next","tagName":"h3"},{"title":"Downloading backups​","type":1,"pageTitle":"🚑 Backups","url":"/doc/pr-2672/en/admin/backups/#downloading-backups","content":" From the web interfaceWith a SFTP clientFrom the command line After creating backups, it is possible to list and inspect them using the corresponding views in the web administration interface. A button allows you to download the archive. If the archive is larger than 3GB, it may be better to proceed via SFTP. Backup &gt; Local Archives &gt; &lt;Archive name&gt; &gt; Download  caution Don't forget to store your backup in a different place to your server.  info If you want, you can connect an external disk to your server so that the archives arrive directly on it. See this guide to Adding external storage to your server  ","version":"Next","tagName":"h3"},{"title":"Testing​","type":1,"pageTitle":"🚑 Backups","url":"/doc/pr-2672/en/admin/backups/#testing","content":" You should regularly test your backups by at least listing the contents of the archives and checking the size of the associated data. It is best to practice restoring regularly.  # List the files tar -tvf /home/yunohost.backup/archives/ARCHIVE.tar | less # List database exports tar -tvf /home/yunohost.backup/archives/ARCHIVE.tar | grep &quot;(db|dump)`.sql&quot; # Check the weight ls -lh /home/yunohost.backup/archives/ARCHIVE.tar   ","version":"Next","tagName":"h3"},{"title":"Restoring backups​","type":1,"pageTitle":"🚑 Backups","url":"/doc/pr-2672/en/admin/backups/#restoring-backups","content":" info SPOILER: The larger your data volume and the more applications you have, the more complex your recovery will be.  Simple case: little data, archive already present​  From the web interfaceFrom the command line Go in Backup &gt; Local storage and select your archive. You can then select which items you want to restore, then click on 'Restore'.  To restore an app, the domain on which it was installed should already be configured (or you need to restore the corresponding system configuration). You also cannot restore an app which is already installed... which means that to restore an old version of an app, you must first uninstall it.  Uploading an archive​  In many cases, the archive is not on the server on which you want to restore it. So it has to be uploaded, which depending on its size can take more or less time.  With a SFTP clientFrom the command line Currently, the most accessible solution for uploading backups is to use the FileZilla program as explained in this page. By default, backups are to be placed in /home/yunohost.backup/archives/. ","version":"Next","tagName":"h3"},{"title":"Avoid hardware failure","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/backups/avoid_hardware_failure","content":"","keywords":"","version":"Next"},{"title":"Physically secure your server​","type":1,"pageTitle":"Avoid hardware failure","url":"/doc/pr-2672/en/admin/backups/avoid_hardware_failure#physically-secure-your-server","content":" Very often people who self-host don't have proper storage for their system. Leaving the server in several parts, in a high traffic area, accessible to children or pets, or in a poorly ventilated area can quickly turn into a disaster.  ","version":"Next","tagName":"h2"},{"title":"Secure your hard drives​","type":1,"pageTitle":"Avoid hardware failure","url":"/doc/pr-2672/en/admin/backups/avoid_hardware_failure#secure-your-hard-drives","content":" Ideally, your hard disks should be fixed to prevent vibrations which can accelerate the wear of the equipment or even reduce its performance, especially if there is another disk next to it.  ","version":"Next","tagName":"h2"},{"title":"Reduce swapiness for SD cards and SSDs​","type":1,"pageTitle":"Avoid hardware failure","url":"/doc/pr-2672/en/admin/backups/avoid_hardware_failure#reduce-swapiness-for-sd-cards-and-ssds","content":" If you use a swap file with an SSD or SD card with too much swapiness, your storage media could give up the ghost prematurely due to too many writes.  To prevent this:  cat /proc/sys/vm/swappiness   If it is above 10:  sysctl vm.swappiness=10 nano /etc/sysctl.conf   If present, change the vm.swappiness value to 10. Otherwise add the line:  vm.swappiness = 10   ","version":"Next","tagName":"h2"},{"title":"Storage redundancy​","type":1,"pageTitle":"Avoid hardware failure","url":"/doc/pr-2672/en/admin/backups/avoid_hardware_failure#storage-redundancy","content":" In order to limit hardware failures of storage media, it can be relevant to set up a cluster of mirrored disks (RAID, ZFS). The idea here is that everything that is written to one disk will be written to the other. This way, if one fails, the other continues to work and the server is still fully functional.  There are also more advanced clusters that maximize fault tolerance (failure of 2 disks like RAID6) or storage (see RAID 5).  However, these disk clustering techniques should not be considered as backups. A RAID array should be considered as a single storage medium. Indeed, if this technique prevents having to reinstall in case of a probable disk crash, it is far from zero risk.  Some examples of situations known to professional system administrators:  the disks of a cluster mounted with disks of the same brand can fail almost at the same time within a few hourswithout monitoring the health of the disks, there is a good chance that the failure of one disk in the cluster will only be noticed when a second one fails (&gt;&lt;)if you don't have a spare disk, the delay in purchasing one may result in the other disk crashinga half-functional disk that produces errors can propagate its error through the clusterthe disk connectors or the RAID controller can also produce errors or failthe more complex you make the architecture with many components, the more likely it is that one of them will fail  info If you want to set up a RAID array or use btrfs, the easiest way is to do it at installation with the YunoHost iso in expert mode (when partitioning the system). ","version":"Next","tagName":"h2"},{"title":"Custom backup methods","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/backups/custom_backup_methods","content":"Custom backup methods It is possible to create your own backup method and link it to YunoHost's backup file collection system. This can be useful if you want to use your own backup software or conduct disk mount/dismount operations for example. This operation is done with a hook and will allow you to launch a backup this way: yunohost backup create --method custom Below is a simplistic example that can be used to set up a rotational backup with different disks that are changed every week: /etc/yunohost/hooks.d/backup_method/05-custom #!/bin/bash set -euo pipefail work_dir=&quot;$2&quot; name=&quot;$3&quot; repo=&quot;$4&quot; size=&quot;$5&quot; description=&quot;$6&quot; case &quot;$1&quot; in need_mount) # Set false if your method can itself put files in good place in your archive true ;; backup) mount /dev/sda1 /mnt/hdd if [[ &quot;$(df /mnt/hdd | tail -n1 | cut -d&quot; &quot; -f1)&quot; != &quot;/dev/sda1&quot; ]] then exit 1 fi pushd &quot;$work_dir&quot; current_date=$(date +&quot;%Y-%m-%d_%H:%M&quot;) cp -a &quot;${work_dir}&quot; &quot;/mnt/hdd/${current_date}_$name&quot; popd umount /mnt/hdd ;; *) echo &quot;hook called with unknown argument \\`$1'&quot; &gt;&amp;2 exit 1 ;; esac exit 0 ","keywords":"","version":"Next"},{"title":"Snapshotting the entire filesystem","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/backups/clone_filesystem","content":"","keywords":"","version":"Next"},{"title":"Creating a snapshot​","type":1,"pageTitle":"Snapshotting the entire filesystem","url":"/doc/pr-2672/en/admin/backups/clone_filesystem#creating-a-snapshot","content":" A snapshot allows you to freeze an image of the file system. Snapshots are very useful when doing an update or testing, because they allow you to easily go back in case of a glitch. On the other hand, apart from some very high availability clusters, snapshots do not really protect you against hardware failures or disasters (cf. OVH fire in Strasbourg in 2021).  In general, snapshots are quite disk space saving, the principle is that your file system will store the differences that occurred since your snapshot. Thus, only the modifications consume space.  info Remember to delete the old snapshots to avoid wasting your storage space by storing all the differences since that date!  You can use this method with most VPS (often paying), virtual machine managers or if you have installed YunoHost with an advanced filesystem like btrfs, ceph or ZFS, you can also create snapshots via the command line  VPSVirtualBoxProxmoxBTRFSCEPHZFS Below, some documentation for the most known suppliers: DigitalOcean (EN)GandiOVHScaleway (EN)  ","version":"Next","tagName":"h2"},{"title":"Create a cold image of the file system​","type":1,"pageTitle":"Snapshotting the entire filesystem","url":"/doc/pr-2672/en/admin/backups/clone_filesystem#create-a-cold-image-of-the-file-system","content":" You can clone your media (SD card, ssd disk, VPS volume...) to create a disk image. This image before compression will be the exact size of your media, that's why this method applies rather to machines of less than 64GB.  Unless you can read a snapshot, this method requires you to stop the server while you create the image. With a VPS, you have to restart in rescue mode from your provider's interface.  With USBimagerIn command line with dd This can be done with USBimager (Note: make sure you download the 'Read-write' version! Not the 'Write-only' version!). The process then consists of the &quot;reverse&quot; of the SD card flashing process: Turn off your serverRetrieve the SD card and plug it into your computerIn USBimager, click on &quot;Read&quot; to create an image (&quot;photograph&quot;) of the SD card. You can use the resulting file to restore the whole system later. More details in USBimager documentation ","version":"Next","tagName":"h2"},{"title":"Backup strategies","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/backups/evaluate","content":"","keywords":"","version":"Next"},{"title":"What is a good backup ?​","type":1,"pageTitle":"Backup strategies","url":"/doc/pr-2672/en/admin/backups/evaluate#what-is-a-good-backup-","content":" A good backup consists of at least 3 copies of the data (including the original data), on at least 2 separate storages, in at least 2 separate locations (far enough apart) and ideally with 2 separate methods. If your backups are encrypted these rules also apply to the decryption phrase/key.  A good backup is also in many cases, a recent backup, so it takes either a lot of rigor or to automate the process.  A good backup is checked regularly to ensure the effectiveness and integrity of the data.  Finally, a good backup is one that is restorable within an acceptable timeframe for you. Remember to document your restoration method and to estimate the transfer time of a copy, especially if the Internet connections involved are not symmetrical.  info Example of a robust and comfortable combination: a remote and automatic backup with borga backup on external disk and automatic with borga regular snapshot/image (and before updates)a monitored RAID 1 array (or a commercial VPS that will also be on an array)a decryption passphrase stored on 3 media in 2 locations  ","version":"Next","tagName":"h2"},{"title":"Some possible methods​","type":1,"pageTitle":"Backup strategies","url":"/doc/pr-2672/en/admin/backups/evaluate#some-possible-methods","content":" generate an archive and download it manually (default method of YunoHost)backup automatically (recommended method)generate an archive directly on another diskmake a disk image or snapshotsave useful data via a custom method  ","version":"Next","tagName":"h2"},{"title":"Risks​","type":1,"pageTitle":"Backup strategies","url":"/doc/pr-2672/en/admin/backups/evaluate#risks","content":" Below, a list of risks sorted from the most to the least probable, whose probability remains to be adapted according to your situation (location of the server, quality of the installations, user profiles, etc.). It is up to you to put the cursor where it should be, especially considering the consequences of a data loss.  caution Keep in mind that real accidents are linked to the occurrence of 2 events simultaneously.  Lack of rigor: strategies based on manual backups require a lot of rigor in the regularityBad handling: it can happen that a backup is erased by mistake during a restoration or if you rely on a synchronization system, you could delete a file and the deletion would be synchronized instantlyCryptolocker: this is a virus that encrypts files and demands a ransomware. If your users are using nextcloud and windows, an infected windows could synchronize encrypted files and thus you lose your copy.Hardware failure: SD cards are the least reliable media over time (~2 years of life in a server), followed by SSD disks (about 3 years of life) and hard drives (3 years). Note that a new equipment has also probability to break down during the first 6 months. In all cases, your copies should not be on the same physical media.Software failure/bug: a software bug may result in data deletion or you may not know how to fix a problem and want to restore your system.Electricity or internet failure: do you have a plan if this happens? What if you are on vacation?Disaster or natural or unnatural event: a small child, a cat, lightning or a simple leak can destroy your equipment. Fires or floods can also destroy your backup copy at the other end of your home...Server compromise: a malicious person or a robot could attack your server and delete your dataMachine theft: a burglary or theft of a computer on which your password manager is located to decrypt your backupsSearch: whether you are guilty or not, a search can result in the seizure of the entire computer equipment of a place (or even several)Death/health problem: you may not be able to type your passphrase anymore  ","version":"Next","tagName":"h2"},{"title":"About Nextcloud or Thunderbird (IMAP) synchronization​","type":1,"pageTitle":"Backup strategies","url":"/doc/pr-2672/en/admin/backups/evaluate#about-nextcloud-or-thunderbird-imap-synchronization","content":" A method that allows a partial backup is to backup files and emails via synchronization software like Nextcloud client or ThunderBird. This way, you avoid the risk of hardware failure.  If this method is easy to set up, it is not without risk because of the synchronization itself. For example, if you are on Windows or Mac, you increase the risk of data loss following the encryption of files by a cryptolocker type virus. On any type of system, a false manipulation can delete all your copies on the server and on the equipment that synchronizes. This concern is aggravated by the fact that the deletion synchronization is usually rather instantaneous.  While the risk of false manipulation can be mitigated by desktop backup software such as TimeShift, the risk of false manipulation can only be mitigated by a backup on a hard drive. Only a backup on a disconnected external hard drive really protects you from ransomware. ","version":"Next","tagName":"h2"},{"title":"Migrate or merge servers","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/backups/migrate_or_merge_servers","content":"","keywords":"","version":"Next"},{"title":"Migrate a server​","type":1,"pageTitle":"Migrate or merge servers","url":"/doc/pr-2672/en/admin/backups/migrate_or_merge_servers#migrate-a-server","content":" If YunoHost's archive system is not convenient enough to migrate a server, you can also migrate from server to server with rsync.  ","version":"Next","tagName":"h2"},{"title":"Merge 2 YunoHost servers​","type":1,"pageTitle":"Migrate or merge servers","url":"/doc/pr-2672/en/admin/backups/migrate_or_merge_servers#merge-2-yunohost-servers","content":" If you merge 2 servers together, you will need to recreate the users, domains and permissions of the first server on the destination server. Then you can restore app by app.  danger There is a limitation concerning apps that have the same ID. It will not be possible to restore them easily. Also be careful not to delete the eponymous app from the destination server :/ ","version":"Next","tagName":"h2"},{"title":"Certificate","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/domains/certificate","content":"","keywords":"","version":"Next"},{"title":"Install a Let's Encrypt certificate​","type":1,"pageTitle":"Certificate","url":"/doc/pr-2672/en/admin/domains/certificate#install-a-lets-encrypt-certificate","content":" Before attempting to install a Let's Encrypt certificate, you should make sure that your DNS is correctly configured (your.domain.tld should point to your server's IP) and that your domain is accessible through HTTP from outside your local network (i.e. at least port 80 should be forwarded to your server).  From the web interfaceFrom the command line Go to the 'Domain' part of the admin interface, then in the section dedicated to your.domain.tld. You should find a 'SSL certificate' button: In the 'SSL certificate' section, you can see the status of the current certificate. If you just added the domain, it should be a self-signed certificate. If your domain is correctly configured, it is then possible to install the Let's Encrypt certificate via the green button. Once the install is made, you can check that the certificate is live via your browser by going to your domain in HTTPS. The certificate will automatically be renewed every three months.  Troubleshooting​  If due to some bad tweaking, your certificate ends up in a bad state (e.g. lost the certificate or unable to read the files), you should be able to clean the situation by regenerating a self-signed certificate:  yunohost domain cert install your.domain.tld --self-signed --force   If YunoHost thinks that your domain is badly configured despite the fact that you checked the DNS configuration and you have access in HTTP to your server from outside your local network, then you can:  add a line 127.0.0.1 your.domain.tld to the file /etc/hosts on your server;if the certificate installation still doesn't work, you can disable the checks with --no-checks after the cert install command. ","version":"Next","tagName":"h3"},{"title":"🌐 Domains","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/domains/","content":"","keywords":"","version":"Next"},{"title":"3 types of domains​","type":1,"pageTitle":"🌐 Domains","url":"/doc/pr-2672/en/admin/domains/#3-types-of-domains","content":" Yunohost's domains (the free and easy way)Your own domainsLocal domains (only reachable in your local network) In order to make self-hosting as accessible as possible, the YunoHost Project provides a free and automatically configured domain name service. By using this service, you won't have to configure DNS records yourself, which can be tedious and technical. The following (sub)domains are offered: whateveryouwant.nohost.me;whateveryouwant.noho.st;whateveryouwant.ynh.fr. In more, YunoHost uses an integrated dynamic DNS mechanism, so your server can stay reachable even if your public IP change. To get one of this domain you simply need to choose I don't have a domaine name… during the initial configuration (postinstall) or on the Add domain page. info To limit resources costs and abuses, each instance may only have one of these domains setup at any given time, however you can add as many sub-domains of it as you wish. For example, if you choose example.noho.st you can later add the domains video.example.noho.st or www.example.ynh.noho.st or any other sub-domain you may need. In this case you need to select I already have a domain name. More information on this domains  ","version":"Next","tagName":"h2"},{"title":"DNS configuration​","type":1,"pageTitle":"🌐 Domains","url":"/doc/pr-2672/en/admin/domains/#dns-configuration","content":" DNS (Domain Name System) is a system that enables computers worldwide to translate human-readable domain names (such as yolo.com) into machine-readable IP addresses (such as 11.22.33.44). For this translation (and other features) to work, DNS records need to be carefully configured.  YunoHost can generate a recommended DNS configuration for each domain, including the records required for e-mail. The recommended DNS configuration is available in the web administrator via Domains &gt; (the domain) &gt; DNS configuration, or with the command yunohost domain dns suggest the.domain.tld.  ","version":"Next","tagName":"h2"},{"title":"About Non-latin characters​","type":1,"pageTitle":"🌐 Domains","url":"/doc/pr-2672/en/admin/domains/#about-non-latin-characters","content":" If your domain has special, non-latin characters, it will be transformed by YunoHost into its internationalized version through Punycode. So when you use the command line, you have to use the punycode format return for example by yunohost domain list.  ","version":"Next","tagName":"h2"},{"title":"SSL/HTTPS certificates​","type":1,"pageTitle":"🌐 Domains","url":"/doc/pr-2672/en/admin/domains/#sslhttps-certificates","content":" Another important aspect of domain configuration is the SSL/HTTPS certificate. YunoHost is integrated with Let's Encrypt, so once your server is correctly reachable from anybody on the internet through the domain name, the administrator can request a Let's Encrypt certificate. See the documentation about certificates for more information. ","version":"Next","tagName":"h2"},{"title":"🛠️ SSH and command line","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/command_line","content":"","keywords":"","version":"Next"},{"title":"What's SSH?​","type":1,"pageTitle":"🛠️ SSH and command line","url":"/doc/pr-2672/en/admin/command_line#whats-ssh","content":" SSH stands for Secure Shell, and refers to a protocol that allows to remotely control and administer a machine using the command line interface (CLI). It is available by default in any terminal on GNU/Linux and macOS. On Windows, you may want to use MobaXterm (after launching it, click on Session then SSH).  The command line interface (CLI) is, in the computer world, the original (and more technical) way of interacting with a computer compared to graphical interface. Command line interfaces are generally said to be more complete, powerful or efficient than a graphical interface, though also more difficult to learn.  ","version":"Next","tagName":"h2"},{"title":"How to connect​","type":1,"pageTitle":"🛠️ SSH and command line","url":"/doc/pr-2672/en/admin/command_line#how-to-connect","content":" ","version":"Next","tagName":"h2"},{"title":"Credentials before running the postinstall​","type":1,"pageTitle":"🛠️ SSH and command line","url":"/doc/pr-2672/en/admin/command_line#credentials-before-running-the-postinstall","content":" If you are installing at home, the default credentials are login: root and password: yunohost (or 1234 if you flashed an armbian image)If you are installing a remote server (VPS), your provider should have communicated you the login and password (or allowed you to configure an SSH key)  ","version":"Next","tagName":"h3"},{"title":"Credentials after running the postinstall​","type":1,"pageTitle":"🛠️ SSH and command line","url":"/doc/pr-2672/en/admin/command_line#credentials-after-running-the-postinstall","content":" During the postinstall, you've been asked to choose an user and an administration password. This user account allows you to connect to the server through SSH. The password becomes also the new password for the root user. Additionally, the root SSH login becomes disabled after the postinstall and you should log in using the user account created during postinstall !. The only exception is that you may still be able to login using root from the local network - or from a direct console on the server (this is to cover the event where the LDAP server is broken and the users members of the admins group are unusables).  tip If you connected with the administration account and would like to become root for convenience (e.g. to avoid typing sudo in front of every command), you can become root using the command sudo su or sudo -i.  ","version":"Next","tagName":"h3"},{"title":"Address to use​","type":1,"pageTitle":"🛠️ SSH and command line","url":"/doc/pr-2672/en/admin/command_line#address-to-use","content":" If you are installing at home (e.g. on a Raspberry Pi or OLinuXino or old computer):  you should be able to connect to your server using yunohost.local (or yunohost-2.local, depending on how many servers are on your network).if yunohost.local and the like do not work, your need to find out the local IP of the server.if you installed a server at home but are attempting to connect from outside your local network, make sure port 22 is correctly forwarded to your server.  If your server is a remote server (VPS), your provider should have communicated you the IP address of the machine  In any cases, if you already configured a domain name pointing to the appropriate IP, it's much better to use your.domain.tld instead of the IP address.  ","version":"Next","tagName":"h3"},{"title":"Connecting​","type":1,"pageTitle":"🛠️ SSH and command line","url":"/doc/pr-2672/en/admin/command_line#connecting","content":" The SSH command typically looks like:  # before the postinstall: ssh root@11.22.33.44 # or after the postinstall: ssh username@11.22.33.44 # using the domain name instead of the IP (more convenient) ssh username@your.domain.tld # using the local domain name instead of the IP (for local access) ssh username@yunohost.local # if you changed the SSH port ssh -p 2244 username@your.domain.tld   note fail2ban will ban your IP for 10 minutes if you perform 10 failed login attempts. If you need to unban the IP, have a look at the page about Fail2Ban  ","version":"Next","tagName":"h3"},{"title":"Which other users may connect to the server?​","type":1,"pageTitle":"🛠️ SSH and command line","url":"/doc/pr-2672/en/admin/command_line#which-other-users-may-connect-to-the-server","content":" By default, only YunoHost users in the admins group can log in to YunoHost's SSH and SFTP servers. Non-admin YunoHost users can't connect via SSH for security reasons. With the permissions system it is possible to specifically grant SFTP or even SSH access to non-admin users.  caution Be careful who you give SSH access to. This increases even more the attack surface available to a malicious user.  From the web interfaceFrom the command line Go to Users &gt; Manage groups and permissions. From here, you can add SFTP or SSH permissions to any user or group. If you want to add an SSH public key to the user, you have to do it from the command line, as the web interface does not yet offer this feature.  ","version":"Next","tagName":"h2"},{"title":"Security and SSH​","type":1,"pageTitle":"🛠️ SSH and command line","url":"/doc/pr-2672/en/admin/command_line#security-and-ssh","content":" A more extensive discussion about security &amp; SSH can be found on the dedicated page.  ","version":"Next","tagName":"h2"},{"title":"The command line​","type":1,"pageTitle":"🛠️ SSH and command line","url":"/doc/pr-2672/en/admin/command_line#the-command-line","content":" info Providing a full tutorial about the command line is quite beyond the scope of the YunoHost documentation : for this, consider reading a dedicated tutorial such as this one or this one. But be reassured that you don't need to be a CLI expert to start using it !  ","version":"Next","tagName":"h2"},{"title":"The yunohost command​","type":1,"pageTitle":"🛠️ SSH and command line","url":"/doc/pr-2672/en/admin/command_line#the-yunohost-command","content":" The yunohost command can be used to administer your server and perform the various actions similarly to what you do on the webadmin. The command must be launched either from the root user or from a user member of the admins group by preceeding them with sudo. (ProTip™ : you can become root with the command sudo su as an user member of admins group).  YunoHost commands usually have this kind of structure :  yunohost app install wordpress --label Webmail ^ ^ ^ ^ | | | | category action argument options   Don't hesitate to browse and ask for more information about a given category or action using the the --help option. For instance, those commands :  yunohost --help yunohost user --help yunohost user create --help   will successively list all the categories available, then the actions available in the user category, then the usage of the action user create. You might notice that the YunoHost command tree is built with a structure similar to the YunoHost admin pages.  ","version":"Next","tagName":"h3"},{"title":"The yunopaste command​","type":1,"pageTitle":"🛠️ SSH and command line","url":"/doc/pr-2672/en/admin/command_line#the-yunopaste-command","content":" This command allow you to share with an other person the output of a command.  Example:  yunohost diagnosis show | yunopaste   ","version":"Next","tagName":"h3"},{"title":"The ynh-vpnclient-loadcubefile.sh command​","type":1,"pageTitle":"🛠️ SSH and command line","url":"/doc/pr-2672/en/admin/command_line#the-ynh-vpnclient-loadcubefilesh-command","content":" This command is only available if you have the VPN Client application installed. You can use it to load a new .cube in case you can't get to the VPN Client interface to do so.  ynh-vpnclient-loadcubefile.sh -u &lt;username&gt; -p &lt;password&gt; -c &lt;path&gt;.cube   ","version":"Next","tagName":"h3"},{"title":"Some useful commands​","type":1,"pageTitle":"🛠️ SSH and command line","url":"/doc/pr-2672/en/admin/command_line#some-useful-commands","content":" If your administration web interface indicates that the API is unreachable, try starting yunohost-api:  systemctl start yunohost-api   If you can no longer connect with an user member of admins group via SSH and via the web interface, the slapd service may be down, try restarting it:  systemctl restart slapd   If you have manually modified configurations and want to know the changes:  yunohost tools regen-conf --with-diff --dry-run  ","version":"Next","tagName":"h3"},{"title":"Include or exclude files","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/backups/include_exclude_files","content":"","keywords":"","version":"Next"},{"title":"Include files​","type":1,"pageTitle":"Include or exclude files","url":"/doc/pr-2672/en/admin/backups/include_exclude_files#include-files","content":" YunoHost usually already knows what needs to be backed up. However, if you have made manual changes, such as installing an app outside of the YunoHost application system, you may want to extend YunoHost's mechanism to specify other files to be backed up.  By default, if configurations tracked by YunoHost are changed, they will be backed up. On the other hand, a database or an app added by hand, changes on some configurations not tracked, will not be backed up.  You can create a backup hook and a restore hook to add data to backup. Here is an example:  /etc/yunohost/hooks.d/backup/99-conf_custom  #!/bin/bash # Source YNH helpers source /usr/share/yunohost/helpers ynh_backup_dest (){ YNH_CWD=&quot;${YNH_BACKUP_DIR%/}/$1&quot; mkdir -p $YNH_CWD cd &quot;$YNH_CWD&quot; } # Exit hook on subcommand error or unset variable ynh_abort_if_errors # Openvpn ynh_backup_dest &quot;conf/custom/openvpn&quot; ynh_backup &quot;/etc/sysctl.d/openvpn.conf&quot; ynh_backup &quot;/etc/openvpn&quot; ynh_backup &quot;/etc/fail2ban/jail.d/openvpn.conf&quot; ynh_backup &quot;/etc/fail2ban/filter.d/openvpn.conf&quot; # Samba ynh_backup_dest &quot;conf/custom/samba&quot; ynh_backup &quot;/etc/samba&quot; ynh_backup &quot;/var/lib/samba&quot; ynh_backup &quot;/etc/yunohost/hooks.d/post_user_create/99-samba&quot; ynh_backup &quot;/etc/yunohost/hooks.d/post_user_delete/99-samba&quot; ynh_backup --src_path=&quot;/etc/yunohost/hooks.d/post_user_update/99-samba&quot; --not_mandatory ynh_backup &quot;/etc/cron.daily/clean-trash&quot; # MISC ynh_backup_dest &quot;conf/custom/misc&quot; ynh_backup &quot;/etc/sysctl.d/noipv6.conf&quot; ynh_backup &quot;/usr/local/bin/&quot; ynh_backup &quot;/etc/yunohost/hooks.d/backup/99-conf_custom&quot; ynh_backup &quot;/etc/yunohost/hooks.d/restore/99-conf_custom&quot;   /etc/yunohost/hooks.d/restore/99-conf_custom  #!/bin/bash # Source YNH helpers source /usr/share/yunohost/helpers ynh_restore_dest (){ YNH_CWD=&quot;${YNH_BACKUP_DIR%/}/$1&quot; cd &quot;$YNH_CWD&quot; } # Exit hook on subcommand error or unset variable ynh_abort_if_errors # Openvpn app=&quot;custom_openvpn&quot; # This variable is important for the following helper ynh_install_app_dependencies &quot;openvpn openvpn-auth-ldap samba&quot; ynh_restore_dest &quot;conf/custom/openvpn&quot; ynh_restore_file &quot;/etc/sysctl.d/openvpn.conf&quot; ynh_restore_file &quot;/etc/openvpn&quot; ynh_restore_file &quot;/etc/fail2ban/jail.d/openvpn.conf&quot; ynh_restore_file &quot;/etc/fail2ban/filter.d/openvpn.conf&quot; # Samba app=&quot;custom_samba&quot; # This variable is important for the following helper ynh_install_app_dependencies &quot;samba&quot; ynh_restore_dest &quot;conf/custom/samba&quot; ynh_restore_file &quot;/etc/samba&quot; ynh_restore_file &quot;/var/lib/samba&quot; ynh_restore_file &quot;/etc/yunohost/hooks.d/post_user_create/99-samba&quot; ynh_restore_file &quot;/etc/yunohost/hooks.d/post_user_delete/99-samba&quot; ynh_restore_file --src_path=&quot;/etc/yunohost/hooks.d/post_user_update/99-samba&quot; --not_mandatory ynh_restore_file &quot;/etc/cron.daily/clean-trash&quot; chown -R openvpn:openvpn /etc/openvpn # MISC ynh_restore_dest &quot;conf/custom/misc&quot; ynh_restore_file &quot;/etc/sysctl.d/noipv6.conf&quot; ynh_restore_file &quot;/usr/local/bin/&quot; ynh_restore_file &quot;/etc/yunohost/hooks.d/backup/99-conf_custom&quot; ynh_restore_file &quot;/etc/yunohost/hooks.d/restore/99-conf_custom&quot;   ","version":"Next","tagName":"h2"},{"title":"Exclude files​","type":1,"pageTitle":"Include or exclude files","url":"/doc/pr-2672/en/admin/backups/include_exclude_files#exclude-files","content":" There is no mechanism to exclude specific files from a YunoHost backup, other than the 2 options presented below:  ","version":"Next","tagName":"h2"},{"title":"Avoid backing up certain /home folders​","type":1,"pageTitle":"Include or exclude files","url":"/doc/pr-2672/en/admin/backups/include_exclude_files#avoid-backing-up-certain-home-folders","content":" If needed, you can specify that certain user home folders not be backed up by the yunohost backup command, by creating an empty file named .nobackup inside.  Caution: this setup only works with first-level subfolders of /home, such as /home/user1 or /home/yunohost.multimedia. It does not work for other levels of subfolders, like /home/user1/bigfolder/.  ","version":"Next","tagName":"h3"},{"title":"Do not backup large amounts of data​","type":1,"pageTitle":"Include or exclude files","url":"/doc/pr-2672/en/admin/backups/include_exclude_files#do-not-backup-large-amounts-of-data","content":" Some apps like Nextcloud are potentially attached to large amounts of data. It is possible to not backup them by default. In this case, the app is said to &quot;backup only the core&quot; (of the app). During an update, apps containing a large amount of data usually make a backup without these data.  To temporarily disable backup of large data, for applications that implement this feature, you can set the BACKUP_CORE_ONLY variable. To do this, the variable must be set before the backup command:  BACKUP_CORE_ONLY=1 yunohost backup create --apps nextcloud   Be careful: you will have to backup Nextcloud users' data yourself.  If you want this behavior to be permanent:  yunohost app setting nextcloud do_not_backup_data -v 1  ","version":"Next","tagName":"h3"},{"title":"📬 Emails","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/email/","content":"","keywords":"","version":"Next"},{"title":"Making sure your setup is right​","type":1,"pageTitle":"📬 Emails","url":"/doc/pr-2672/en/admin/email/#making-sure-your-setup-is-right","content":" Email is a complicated ecosystem and quite a few details can prevent it from working properly.  To validate your setup:  if you are self-hosting at home and not using a VPN, ensure your ISP won't block port 25 ;route ports according to this documentation ;carefully configure mail DNS records according to this documentation ;test your configuration using the diagnostic features ( Webadmin → Diagnosis → Email ). You can also use mail-tester.com, a score of at least 8~9/10 is a reasonnable goal (be careful : only 3 tests per domain per day are allowed)  ","version":"Next","tagName":"h2"},{"title":"Email clients​","type":1,"pageTitle":"📬 Emails","url":"/doc/pr-2672/en/admin/email/#email-clients","content":" To interact with the email sever (read and send emails), you can either install a webclient such as Roundcube or Rainloop on your server - or configure a desktop/mobile client as described in this page.  Desktop and mobile clients have the advantage of copying your emails to the device, allowing offline viewing and relative protection against possible hardware failures of your server.  ","version":"Next","tagName":"h2"},{"title":"Configuring email aliases and auto-forwards​","type":1,"pageTitle":"📬 Emails","url":"/doc/pr-2672/en/admin/email/#configuring-email-aliases-and-auto-forwards","content":" Mail aliases and forwards can be configured for each users. For instance, the first user created on the server automatically has an alias root@the.domain.tld configured - meaning that an email sent to this address will end in the inbox of the first user. Automatic forwards may be configured, for instance if an user doesn't want to configure an additional email account and just wants to receive emails from the server on, say, his/her gmail address.  Another feature which few people know about is the use of suffixes beginning with &quot;+&quot;. For example, emails sent to johndoe+booking@the.domain.tld will automatically land in the booking dir (lowercase) of John Doe's mailbox or in John Doe's inbox if booking directory doesn't exist . It is a practical technique for example to provide an e-mail address to a website, then easily sort (via automatic filters) the mail coming from this website.  Groups also can use alias features, by default the group admins have root@&lt;domain.tld&gt; or webmaster@&lt;domain.tld&gt;. More information to use-it with the dedicated page.  ","version":"Next","tagName":"h2"},{"title":"What happens if my server becomes unavailable?​","type":1,"pageTitle":"📬 Emails","url":"/doc/pr-2672/en/admin/email/#what-happens-if-my-server-becomes-unavailable","content":" If your server becomes unavailable, emails sent to your server will stay in a pending queue on the sender's side for as long as ~5 days. The sender's host will regularly try to resend the email, until it drops it if it was unable to send it.  ","version":"Next","tagName":"h2"},{"title":"Forms to remove its IP address from the blacklist​","type":1,"pageTitle":"📬 Emails","url":"/doc/pr-2672/en/admin/email/#forms-to-remove-its-ip-address-from-the-blacklist","content":" It is possible that the emails sent from your YunoHost instance are considered as spam by the big email services. Is it possible that the IP address from your server have been previously been used to sent spam or that these email services consider your server as a spam sender. To ensure that your servers’ IP address isn't on these blacklists and to remove it from them, follow this link.  ","version":"Next","tagName":"h2"},{"title":"Migrating email from an email provider to a YunoHost instance​","type":1,"pageTitle":"📬 Emails","url":"/doc/pr-2672/en/admin/email/#migrating-email-from-an-email-provider-to-a-yunohost-instance","content":" See this page.  ","version":"Next","tagName":"h2"},{"title":"Configuring SMTP relay​","type":1,"pageTitle":"📬 Emails","url":"/doc/pr-2672/en/admin/email/#configuring-smtp-relay","content":" See this page. ","version":"Next","tagName":"h2"},{"title":"Configure email clients","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/email/clients","content":"","keywords":"","version":"Next"},{"title":"Generic settings​","type":1,"pageTitle":"Configure email clients","url":"/doc/pr-2672/en/admin/email/clients#generic-settings","content":" Here are the element you should enter to manually configure your mail client (domain.tld refers to what's after the @ in your email address, and username what's before @).  Protocol\tPort\tEncryption\tAuthentication\tUsernameIMAP\t993\tSSL/TLS\tNormal password\tusername (without the @domain.tld) SMTP\t587\tSTARTTLS\tNormal password\tusername (without the @domain.tld)  ","version":"Next","tagName":"h3"},{"title":"Client by client​","type":1,"pageTitle":"Configure email clients","url":"/doc/pr-2672/en/admin/email/clients#client-by-client","content":" Mozilla ThunderbirdK-9 Mail (Thunderbird Mobile)Dekko Configure Thunderbird Desktop (on a desktop computer)​ To manually configure a new account in Thunderbird Desktop, add the account information, then click on 'Configure manually'. For the incoming server, use IMAP with port 993 and SSL/TLS.For outgoing server, use port 587 with STARTTLS.Select 'Normal Password' for the the authentication method of both. You may need to accept the certificate exceptions for fetching mails and after you send your first mail. Don't forget to remove the dot before the domain name. Manage alias mails ","version":"Next","tagName":"h3"},{"title":"Migrate emails to YunoHost","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/email/migration","content":"","keywords":"","version":"Next"},{"title":"ImapSync​","type":1,"pageTitle":"Migrate emails to YunoHost","url":"/doc/pr-2672/en/admin/email/migration#imapsync","content":" ImapSync site  Install ImapSync on your client computer by following this guide:  sudo dnf install imapsync # Under Fedora   Transfer emails from one server to another:  imapsync --host1 &lt;domain/IP&gt; --port1 993 --ssl1 --user1 &lt;user&gt; --password1 &lt;password&gt; \\ --host2 &lt;domain/IP&gt; --port2 993 --ssl2 --user2 &lt;user&gt; --password2 &lt;password&gt;   Note that transfer settings --port 993 and --ssl are specific to YunoHost email server.  ","version":"Next","tagName":"h3"},{"title":"Larch​","type":1,"pageTitle":"Migrate emails to YunoHost","url":"/doc/pr-2672/en/admin/email/migration#larch","content":" Larch site  After beforehand installed gem, install larch on your client computer:  sudo gem install larch   Transfer emails from one server to another:  larch -a -f imaps://server_of_origin.org -t imaps://server_of_destination.org   For other types of transfer refer to Larch documentation. ","version":"Next","tagName":"h3"},{"title":"Advices and guidelines","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/guidelines","content":"","keywords":"","version":"Next"},{"title":"Do not break YunoHost​","type":1,"pageTitle":"Advices and guidelines","url":"/doc/pr-2672/en/admin/get_started/guidelines#do-not-break-yunohost","content":" To put it another way: your server is either a production server (meant to work) or a test server on which you allow yourself to experiment.  If your goal is to run a production server:  be aware that servers are fragile system. Stay cautious, methodical and patient;limit experimentations and customizations (for instance of config file);do not install dozens of apps just to see how they look;use non-official apps with caution, and do not use apps that are still 'in progress', 'not working' or level 0;if something gets broken, think twice about fixing it by yourself if you don't know what you are doing. (For instance, do not attempt to recreate yourself the admin user just because it mysteriously disappeared...)  ","version":"Next","tagName":"h2"},{"title":"Keep it simple!​","type":1,"pageTitle":"Advices and guidelines","url":"/doc/pr-2672/en/admin/get_started/guidelines#keep-it-simple","content":" YunoHost is designed to work with general and simple use cases in mind. Deviating from those conditions will make things harder and you will need technical knowledge to make it work. For instance:  do not try to run YunoHost in a context where you cannot have control over ports 80 and 443 (or no internet at all);do not try to host five servers behind the same internet connection if you are not already an advanced user;do not fall into nerd whims such as willing to replace NGINX with Apache (or run both at the same time);do not try to use custom SSL certificates if you don't really need them;...  Keep things as simple as you can!  ","version":"Next","tagName":"h2"},{"title":"Do not reinstall every day​","type":1,"pageTitle":"Advices and guidelines","url":"/doc/pr-2672/en/admin/get_started/guidelines#do-not-reinstall-every-day","content":" Some people tend to fall into &quot;the reinstallation spiral&quot; - where each time something breaks in the server and it is not obvious how to fix it, or because the server became &quot;dirty&quot;, one ends up reinstalling the whole server from scratch because it looks like an &quot;easy&quot; and quick solution to clean the table.  Please don't do this. Reinstalling is a heavy operation and is not a good long-term strategy for fixing problems. You will get tired and won't learn anything. Forget the dream of having a &quot;clean&quot; server. A real-life server always end up being a bit &quot;dirty&quot;. Also, you need to (progressively) learn how to solve issues when you encounter them. Reach for help with detailed symptoms of what you are trying to do and what is happening, and fix the issues. Over time, you will get a much better control over your server than just blindly reinstalling every time.  ","version":"Next","tagName":"h2"},{"title":"Do backups​","type":1,"pageTitle":"Advices and guidelines","url":"/doc/pr-2672/en/admin/get_started/guidelines#do-backups","content":" If you host services and data that are important for your users, it is important that you setup a backup policy. Backups can be easily created from the webadmin - you can download it from the webadmin or via your favorite FTP client, such as FileZilla or your own terminal. You should perform backup regularly and keep them in a safe and different physical location from your server. More info on the backup documentation.  ","version":"Next","tagName":"h2"},{"title":"Check root’s email​","type":1,"pageTitle":"Advices and guidelines","url":"/doc/pr-2672/en/admin/get_started/guidelines#check-roots-email","content":" As an administrator, you should configure an email client to check emails sent to root@your.domain.tld (which should be an alias to the first user your added) or otherwise forward them to another address that you actively check. Those mails may contain information on what is happening on your server such as automated periodic tasks.  ","version":"Next","tagName":"h2"},{"title":"YunoHost is free software, maintained by volunteers​","type":1,"pageTitle":"Advices and guidelines","url":"/doc/pr-2672/en/admin/get_started/guidelines#yunohost-is-free-software-maintained-by-volunteers","content":" Finally, keep in mind that YunoHost is a free software maintained by volunteers - and that the goal of YunoHost (to democratize self-hosting) is not an easy one! It is provided without any warranty. The team of volunteers does its best to maintain and provide the best possible experience - yet features, applications and YunoHost as a whole are far from being perfect and you will experience small and big shortcomings at some points. When this happens, kindly reach for help on the chat or forum, or report the issue! :)  If you like YunoHost and want to see the project being kept alive and make progress, feel free to leave a thank you note and to donate to the project and talk about it around you!  Last but not least, since YunoHost is a free software project, you are legitimate and welcomed to come and contribute to the project, be it on the technical aspects (i.e. code) and less-technical aspects (such as contributing to this documentation! ;)) ","version":"Next","tagName":"h2"},{"title":"Install on...","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/install_on","content":"Install on... Select the hardware on which you want install YunoHost: On a Raspberry Pi Our preferred baked boards On an ARM board Looks like a Raspberry Pi, isn't quite one On a remote server Cloud machines: VPS or dedicated servers On a regular computer An old computer or a huge x86 rack server In a virtual machine For testing and debugging purposes On top of Debian If you can't use preinstalled images On WSL Experimental, for testing purposes","keywords":"","version":"Next"},{"title":"On top of Debian","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/install_on/on_top_of_debian","content":"","keywords":"","version":"Next"},{"title":" Get Debian​","type":1,"pageTitle":"On top of Debian","url":"/doc/pr-2672/en/admin/get_started/install_on/on_top_of_debian#-get-debian","content":" You should download the version Bookworm (Debian 12) and select the architecture for your PC.  When in doubt, select amd64, or i386 for a pre-2010 PC.   Debian Download page  Alternatively, you can browse the Debian archive for the latest 12.x version, select your architecture, the select iso-cd and download the netinst iso.  Installation​  You might want to wipe the hard drive before starting the Debian installer.  Burn the iso to your USB key, for example using Etcher.  Debian installer will ask for a hostname and a domain name. You can use yunohost and yunohost.local. It is not that important since the YunoHost Installer will overwrite those anyway.  Debian will ask for a root password, which should be reaonably complex as it is your primary defense to possible attacks.  The installer will also ask for a user account and another password.  warning IMPORTANT: this username should be DIFFERENT from the first YunoHost user which you will choose during YunoHost's posinstall… For example, you can name it debian. Be sure to also use a long complex password.  When the install asks where to install and how to create disk partitions, select the option to use the whole disk, unless you know what you're doing.  We recommend not to separate the /home, /var or /tmp partitions. Use the option to “keep all files in one partition”.If you don't know what you're doing, don't encrypt the disk (Decryption at power-on will be an issue)  The installer will ask about mirrors. Select a country and server close to your location, or use the default options.  The installer will ask which desktop environment you want. This is generally useless and might waste resources.  Unselect all desktop environmentKeep “standard system utilities” checked  After installing Debian​  Remove the installation media (unplug the USB stick)RebootLogin as rootInstall curl by typing apt install curl  ","version":"Next","tagName":"h2"},{"title":" Run the install script​","type":1,"pageTitle":"On top of Debian","url":"/doc/pr-2672/en/admin/get_started/install_on/on_top_of_debian#-run-the-install-script","content":" Open a command line prompt on your server (either directly or through SSH)Make sure you are root (or type sudo -i to become root)Run the following command:  curl https://install.yunohost.org | bash   warning You might need to first install curl and ca-certificates by running: apt install curl ca-certificates   danger Always ensure there's an s at the end of https.  note For advanced users concerned with the curl | bash approach: consider reading &quot;Is curl|bash insecure?&quot; on Sandstom's blog, and possibly this discussion on Hacker News.  ","version":"Next","tagName":"h2"},{"title":" Proceed with the initial configuration​","type":1,"pageTitle":"On top of Debian","url":"/doc/pr-2672/en/admin/get_started/install_on/on_top_of_debian#-proceed-with-the-initial-configuration","content":" tip If you are in the process of restoring a server using a YunoHost backup, you should skip this step and instead restore the backup instead of the postinstall step.  note This documentation assumes you're on the same local network as your YunoHost installation.Find out its IP address before continuing. For a VPS, please use the public IP address instead of the local domain or address.  From the web interfaceFrom the command line warning During the first visit, you will very likely encounter a security warning related to the certificate used by the server. For now, your server uses a self-signed certificate. You will later be able to add a certificate automatically recognized by web browsers as described in the certificate documentation. For now, you should add a security exception to accept the current certificate. (Though, PLEASE, do not take the habit of blindly accepting this kind of security alert!) You should then land on this page: Preview of the Web initial configuration page  ","version":"Next","tagName":"h2"},{"title":" Main domain​","type":1,"pageTitle":"On top of Debian","url":"/doc/pr-2672/en/admin/get_started/install_on/on_top_of_debian#-main-domain","content":" WSL specific configuration You will have to choose a fake domain, since it will not be accessible from outside. For example, ynh.wsl. The tricky part is advertising this domain to your host. Alter your C:\\Windows\\System32\\drivers\\etc\\hosts file. You should have a line starting by ::1, update it or add it if needed to get: ::1 ynh.wsl localhost If you want to create subdomains, do not forget to add them in the hosts file too: ::1 ynh.wsl subdomain.ynh.wsl localhost   This will be the domain used by your server's users to access the authentication portal. You can later add other domains, and change which one is the main domain if needed.  If you're new to self-hosting and do not already have a domain name, we recommend using a .nohost.me / .noho.st / .ynh.fr (e.g. homersimpson.nohost.me). Provided that it's not already taken, the domain will be configured automatically and you won't need any further configuration step. Please note that the downside is that you won't have full-control over the DNS configuration.If you already own a domain name, you probably want to use it here. You will later need to configure DNS records as explained here.  tip Yes, you have to configure a domain name. If you don't have any domain name and don't want a .nohost.me / .noho.st / .ynh.fr either, you can set up a dummy domain such as yolo.test and tweak your local /etc/hosts file such that this dummy domain points to the appropriate IP, as explained here.  ","version":"Next","tagName":"h3"},{"title":" First user​","type":1,"pageTitle":"On top of Debian","url":"/doc/pr-2672/en/admin/get_started/install_on/on_top_of_debian#-first-user","content":" The first user is now created at this stage. You should pick a username and a reasonably complex password. (We cannot stress enough that the password should be robust!) This user will be added to the Admins group, and will therefore be able to access the user portal, the web admin interface, and connect via SSH or SFTP. Admins will also receive emails sent to root@yourdomain.tld and admin@yourdomain.tld: these emails may be used to send technical informations or alerts. You can later add additional users, which you can also add to the Admins group.  This user replaces the old admin user, which some old documentation page may still refer to. In which case: just replace admin with your username.  ","version":"Next","tagName":"h3"},{"title":" Run the initial diagnosis​","type":1,"pageTitle":"On top of Debian","url":"/doc/pr-2672/en/admin/get_started/install_on/on_top_of_debian#-run-the-initial-diagnosis","content":" Once the postinstall is done, you should be able to actually log in the web admin interface using the credentials of the first user you just created.  The diagnosis system is meant to provide an easy way to validate that all critical aspects of your server are properly configured - and guide you in how to fix issues. The diagnosis will run twice a day and send an alert if issues are detected.  tip Don't run away ! The first time you run the diagnosis, it is quite expected to see a bunch of yellow/red alerts because you typically need to configure DNS records (if not using a .nohost.me/noho.st/ynh.fr domain), add a swapfile if not enough ram as well as port forwarding on your home's router.  tip If an alert is not relevant (for example because you don't intend on using a specific feature), it is perfectly fine to flag the issue as 'ignored' by going in the webadmin &gt; Diagnosis, and clicking the ignore button for this specifc issue.  warning Especially, installations on WSL or virtual machines will likely not be reachable from outside without further network configuration on Virtualbox and your machine.  (Recommended) From the web interfaceFrom the command line To run a diagnosis, go on Web Admin in the Diagnosis section. Click Run initial diagnosis and you should get a screen like this: Preview of the diagnostic panel  ","version":"Next","tagName":"h2"},{"title":" Get a Let's Encrypt certificate​","type":1,"pageTitle":"On top of Debian","url":"/doc/pr-2672/en/admin/get_started/install_on/on_top_of_debian#-get-a-lets-encrypt-certificate","content":" Once you configured DNS records and port forwarding (if needed), you should be able to install a Let's Encrypt certificate. This will get rid of the spooky security warning from earlier for new visitors.  For more detailed instructions, or to lean more about SSL/TLS certificates, see the corresponding page here.  From the web interfaceFrom the command line Go in Domains &gt; Click on your domain &gt; SSL Certificate Preview of the diagnostic panel  ","version":"Next","tagName":"h2"},{"title":"🎉 Congratz!​","type":1,"pageTitle":"On top of Debian","url":"/doc/pr-2672/en/admin/get_started/install_on/on_top_of_debian#-congratz","content":" You now have a pretty well configured server. If you're new to YunoHost, we recommend to have a look at the guided tour. You should also be able to install your favourite applications. Don't forget to plan backups ! ","version":"Next","tagName":"h2"},{"title":"On a Raspberry Pi","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/install_on/raspberry_pi","content":"","keywords":"","version":"Next"},{"title":" Pre-requisites​","type":1,"pageTitle":"On a Raspberry Pi","url":"/doc/pr-2672/en/admin/get_started/install_on/raspberry_pi#-pre-requisites","content":" A Raspberry Pi 3, 4 or 5 A power supply (either an adapter or a USB cable) for your board;A microSD card: 16GB capacity (at least), class &quot;A1&quot; highly recommended (such as this SanDisk A1 card);An ethernet cable (RJ-45) to connect your server to your router. A reasonable ISP, preferably with a good and unlimited upstream bandwidthA computer to read this guide, flash the image and access your server.  warning Support for Raspberry Pi 2 was dropped. If you really want to install YunoHost on a Pi 2, download and install &quot;Raspberry Pi OS (32-bit)&quot; from the official websiteand then follow the instructions to install YunoHost on Debian.  ","version":"Next","tagName":"h2"},{"title":" Download the YunoHost image​","type":1,"pageTitle":"On a Raspberry Pi","url":"/doc/pr-2672/en/admin/get_started/install_on/raspberry_pi#-download-the-yunohost-image","content":" note If you wish to check the validity of our signed images, you can download our public key.    ","version":"Next","tagName":"h2"},{"title":" Flash the YunoHost image​","type":1,"pageTitle":"On a Raspberry Pi","url":"/doc/pr-2672/en/admin/get_started/install_on/raspberry_pi#-flash-the-yunohost-image","content":" Now that you downloaded the image of YunoHost, you should flash it on a microSD card  With Etcher (recommended)With USBimagerWith dd Download Etcher for your operating system and install it. Plug your SD card, select your image and click &quot;Flash&quot;  ","version":"Next","tagName":"h2"},{"title":" Power up the board​","type":1,"pageTitle":"On a Raspberry Pi","url":"/doc/pr-2672/en/admin/get_started/install_on/raspberry_pi#-power-up-the-board","content":" Put the SD card in your boardConnect your board to your home router via Ethernet For advanced users requiring WiFi instead, please follow the official documentation. If you want to follow the initial boot, connect a screen and keyboard on your board.Power up the board  ","version":"Next","tagName":"h2"},{"title":" Proceed with the initial configuration​","type":1,"pageTitle":"On a Raspberry Pi","url":"/doc/pr-2672/en/admin/get_started/install_on/raspberry_pi#-proceed-with-the-initial-configuration","content":" tip If you are in the process of restoring a server using a YunoHost backup, you should skip this step and instead restore the backup instead of the postinstall step.  note This documentation assumes you're on the same local network as your YunoHost installation.Find out its IP address before continuing. For a VPS, please use the public IP address instead of the local domain or address.  From the web interfaceFrom the command line warning During the first visit, you will very likely encounter a security warning related to the certificate used by the server. For now, your server uses a self-signed certificate. You will later be able to add a certificate automatically recognized by web browsers as described in the certificate documentation. For now, you should add a security exception to accept the current certificate. (Though, PLEASE, do not take the habit of blindly accepting this kind of security alert!) You should then land on this page: Preview of the Web initial configuration page  ","version":"Next","tagName":"h2"},{"title":" Main domain​","type":1,"pageTitle":"On a Raspberry Pi","url":"/doc/pr-2672/en/admin/get_started/install_on/raspberry_pi#-main-domain","content":" WSL specific configuration You will have to choose a fake domain, since it will not be accessible from outside. For example, ynh.wsl. The tricky part is advertising this domain to your host. Alter your C:\\Windows\\System32\\drivers\\etc\\hosts file. You should have a line starting by ::1, update it or add it if needed to get: ::1 ynh.wsl localhost If you want to create subdomains, do not forget to add them in the hosts file too: ::1 ynh.wsl subdomain.ynh.wsl localhost   This will be the domain used by your server's users to access the authentication portal. You can later add other domains, and change which one is the main domain if needed.  If you're new to self-hosting and do not already have a domain name, we recommend using a .nohost.me / .noho.st / .ynh.fr (e.g. homersimpson.nohost.me). Provided that it's not already taken, the domain will be configured automatically and you won't need any further configuration step. Please note that the downside is that you won't have full-control over the DNS configuration.If you already own a domain name, you probably want to use it here. You will later need to configure DNS records as explained here.  tip Yes, you have to configure a domain name. If you don't have any domain name and don't want a .nohost.me / .noho.st / .ynh.fr either, you can set up a dummy domain such as yolo.test and tweak your local /etc/hosts file such that this dummy domain points to the appropriate IP, as explained here.  ","version":"Next","tagName":"h3"},{"title":" First user​","type":1,"pageTitle":"On a Raspberry Pi","url":"/doc/pr-2672/en/admin/get_started/install_on/raspberry_pi#-first-user","content":" The first user is now created at this stage. You should pick a username and a reasonably complex password. (We cannot stress enough that the password should be robust!) This user will be added to the Admins group, and will therefore be able to access the user portal, the web admin interface, and connect via SSH or SFTP. Admins will also receive emails sent to root@yourdomain.tld and admin@yourdomain.tld: these emails may be used to send technical informations or alerts. You can later add additional users, which you can also add to the Admins group.  This user replaces the old admin user, which some old documentation page may still refer to. In which case: just replace admin with your username.  ","version":"Next","tagName":"h3"},{"title":" Run the initial diagnosis​","type":1,"pageTitle":"On a Raspberry Pi","url":"/doc/pr-2672/en/admin/get_started/install_on/raspberry_pi#-run-the-initial-diagnosis","content":" Once the postinstall is done, you should be able to actually log in the web admin interface using the credentials of the first user you just created.  The diagnosis system is meant to provide an easy way to validate that all critical aspects of your server are properly configured - and guide you in how to fix issues. The diagnosis will run twice a day and send an alert if issues are detected.  tip Don't run away ! The first time you run the diagnosis, it is quite expected to see a bunch of yellow/red alerts because you typically need to configure DNS records (if not using a .nohost.me/noho.st/ynh.fr domain), add a swapfile if not enough ram as well as port forwarding on your home's router.  tip If an alert is not relevant (for example because you don't intend on using a specific feature), it is perfectly fine to flag the issue as 'ignored' by going in the webadmin &gt; Diagnosis, and clicking the ignore button for this specifc issue.  warning Especially, installations on WSL or virtual machines will likely not be reachable from outside without further network configuration on Virtualbox and your machine.  (Recommended) From the web interfaceFrom the command line To run a diagnosis, go on Web Admin in the Diagnosis section. Click Run initial diagnosis and you should get a screen like this: Preview of the diagnostic panel  ","version":"Next","tagName":"h2"},{"title":" Get a Let's Encrypt certificate​","type":1,"pageTitle":"On a Raspberry Pi","url":"/doc/pr-2672/en/admin/get_started/install_on/raspberry_pi#-get-a-lets-encrypt-certificate","content":" Once you configured DNS records and port forwarding (if needed), you should be able to install a Let's Encrypt certificate. This will get rid of the spooky security warning from earlier for new visitors.  For more detailed instructions, or to lean more about SSL/TLS certificates, see the corresponding page here.  From the web interfaceFrom the command line Go in Domains &gt; Click on your domain &gt; SSL Certificate Preview of the diagnostic panel  ","version":"Next","tagName":"h2"},{"title":"🎉 Congratz!​","type":1,"pageTitle":"On a Raspberry Pi","url":"/doc/pr-2672/en/admin/get_started/install_on/raspberry_pi#-congratz","content":" You now have a pretty well configured server. If you're new to YunoHost, we recommend to have a look at the guided tour. You should also be able to install your favourite applications. Don't forget to plan backups ! ","version":"Next","tagName":"h2"},{"title":"On a regular computer","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/install_on/regular_computer","content":"","keywords":"","version":"Next"},{"title":" Pre-requisites​","type":1,"pageTitle":"On a regular computer","url":"/doc/pr-2672/en/admin/get_started/install_on/regular_computer#-pre-requisites","content":" A x86-compatible hardware dedicated to YunoHost with at least 512MB of RAM and 16GB of disk a laptop, nettop, netbook, desktop,… A 1GB+ USB keyA reasonable ISP, preferably with a good and unlimited upstream bandwidthAn ethernet cable (RJ-45) to connect your server to your router.A computer to read this guide, flash the image and access your server.  ","version":"Next","tagName":"h2"},{"title":" Download the YunoHost image​","type":1,"pageTitle":"On a regular computer","url":"/doc/pr-2672/en/admin/get_started/install_on/regular_computer#-download-the-yunohost-image","content":" warning If your host OS is 32 bits, be sure to download the 32-bit image.  note If you wish to check the validity of our signed images, you can download our public key.    ","version":"Next","tagName":"h2"},{"title":" Flash the YunoHost image​","type":1,"pageTitle":"On a regular computer","url":"/doc/pr-2672/en/admin/get_started/install_on/regular_computer#-flash-the-yunohost-image","content":" Flash the image on the USB key or CD/DVD.  With Etcher (recommended)With USBimagerWith ddBurning a CD/DVDUsing Ventoy Download Etcher for your operating system and install it. Plug your USB key, select your image and click &quot;Flash&quot;  ","version":"Next","tagName":"h2"},{"title":" Boot the machine on your USB stick​","type":1,"pageTitle":"On a regular computer","url":"/doc/pr-2672/en/admin/get_started/install_on/regular_computer#-boot-the-machine-on-your-usb-stick","content":" Connect your computer to your home router via EthernetBoot up your server with the USB stick or a CD-ROM inserted, and select it as bootable device. Depending on your hardware, you will need to press one of the following keys:&lt;F9&gt;, &lt;F10&gt;, &lt;F11&gt;, &lt;F12&gt;, &lt;DEL&gt;, &lt;ESC&gt; or &lt;Alt&gt;.N.B. : if the server was previously installed with a recent version of Windows (8+), you first need to tell Windows, to &quot;actually reboot&quot;. This can be done somewhere in &quot;Advanced startup options&quot;.  tip If you can't boot the YunoHost image, try using Ventoy (select &quot;Ventoy&quot; in the section &quot;Flash the YunoHost image&quot; above).  ","version":"Next","tagName":"h2"},{"title":" Launch the graphical install​","type":1,"pageTitle":"On a regular computer","url":"/doc/pr-2672/en/admin/get_started/install_on/regular_computer#-launch-the-graphical-install","content":" You should see a screen like this:  Preview of the ISO menu  Classic installation on a whole diskInstallation in expert mode danger Once you have validated the keyboard layout, the installation will be launched and will completely erase the data on your hard disk! Select Graphical installSelect your language, your location, your keyboard layout, and eventually your timezone.The installer will then download and install all required packages.  tip If the YunoHost installer fails and you can't solve the issue, know that it's also possible to install Debian and then install YunoHost on top. See the specific instructions.  ","version":"Next","tagName":"h2"},{"title":" Proceed with the initial configuration​","type":1,"pageTitle":"On a regular computer","url":"/doc/pr-2672/en/admin/get_started/install_on/regular_computer#-proceed-with-the-initial-configuration","content":" tip If you are in the process of restoring a server using a YunoHost backup, you should skip this step and instead restore the backup instead of the postinstall step.  note This documentation assumes you're on the same local network as your YunoHost installation.Find out its IP address before continuing. For a VPS, please use the public IP address instead of the local domain or address.  From the web interfaceFrom the command line warning During the first visit, you will very likely encounter a security warning related to the certificate used by the server. For now, your server uses a self-signed certificate. You will later be able to add a certificate automatically recognized by web browsers as described in the certificate documentation. For now, you should add a security exception to accept the current certificate. (Though, PLEASE, do not take the habit of blindly accepting this kind of security alert!) You should then land on this page: Preview of the Web initial configuration page  ","version":"Next","tagName":"h2"},{"title":" Main domain​","type":1,"pageTitle":"On a regular computer","url":"/doc/pr-2672/en/admin/get_started/install_on/regular_computer#-main-domain","content":" WSL specific configuration You will have to choose a fake domain, since it will not be accessible from outside. For example, ynh.wsl. The tricky part is advertising this domain to your host. Alter your C:\\Windows\\System32\\drivers\\etc\\hosts file. You should have a line starting by ::1, update it or add it if needed to get: ::1 ynh.wsl localhost If you want to create subdomains, do not forget to add them in the hosts file too: ::1 ynh.wsl subdomain.ynh.wsl localhost   This will be the domain used by your server's users to access the authentication portal. You can later add other domains, and change which one is the main domain if needed.  If you're new to self-hosting and do not already have a domain name, we recommend using a .nohost.me / .noho.st / .ynh.fr (e.g. homersimpson.nohost.me). Provided that it's not already taken, the domain will be configured automatically and you won't need any further configuration step. Please note that the downside is that you won't have full-control over the DNS configuration.If you already own a domain name, you probably want to use it here. You will later need to configure DNS records as explained here.  tip Yes, you have to configure a domain name. If you don't have any domain name and don't want a .nohost.me / .noho.st / .ynh.fr either, you can set up a dummy domain such as yolo.test and tweak your local /etc/hosts file such that this dummy domain points to the appropriate IP, as explained here.  ","version":"Next","tagName":"h3"},{"title":" First user​","type":1,"pageTitle":"On a regular computer","url":"/doc/pr-2672/en/admin/get_started/install_on/regular_computer#-first-user","content":" The first user is now created at this stage. You should pick a username and a reasonably complex password. (We cannot stress enough that the password should be robust!) This user will be added to the Admins group, and will therefore be able to access the user portal, the web admin interface, and connect via SSH or SFTP. Admins will also receive emails sent to root@yourdomain.tld and admin@yourdomain.tld: these emails may be used to send technical informations or alerts. You can later add additional users, which you can also add to the Admins group.  This user replaces the old admin user, which some old documentation page may still refer to. In which case: just replace admin with your username.  ","version":"Next","tagName":"h3"},{"title":" Run the initial diagnosis​","type":1,"pageTitle":"On a regular computer","url":"/doc/pr-2672/en/admin/get_started/install_on/regular_computer#-run-the-initial-diagnosis","content":" Once the postinstall is done, you should be able to actually log in the web admin interface using the credentials of the first user you just created.  The diagnosis system is meant to provide an easy way to validate that all critical aspects of your server are properly configured - and guide you in how to fix issues. The diagnosis will run twice a day and send an alert if issues are detected.  tip Don't run away ! The first time you run the diagnosis, it is quite expected to see a bunch of yellow/red alerts because you typically need to configure DNS records (if not using a .nohost.me/noho.st/ynh.fr domain), add a swapfile if not enough ram as well as port forwarding on your home's router.  tip If an alert is not relevant (for example because you don't intend on using a specific feature), it is perfectly fine to flag the issue as 'ignored' by going in the webadmin &gt; Diagnosis, and clicking the ignore button for this specifc issue.  warning Especially, installations on WSL or virtual machines will likely not be reachable from outside without further network configuration on Virtualbox and your machine.  (Recommended) From the web interfaceFrom the command line To run a diagnosis, go on Web Admin in the Diagnosis section. Click Run initial diagnosis and you should get a screen like this: Preview of the diagnostic panel  ","version":"Next","tagName":"h2"},{"title":" Get a Let's Encrypt certificate​","type":1,"pageTitle":"On a regular computer","url":"/doc/pr-2672/en/admin/get_started/install_on/regular_computer#-get-a-lets-encrypt-certificate","content":" Once you configured DNS records and port forwarding (if needed), you should be able to install a Let's Encrypt certificate. This will get rid of the spooky security warning from earlier for new visitors.  For more detailed instructions, or to lean more about SSL/TLS certificates, see the corresponding page here.  From the web interfaceFrom the command line Go in Domains &gt; Click on your domain &gt; SSL Certificate Preview of the diagnostic panel  ","version":"Next","tagName":"h2"},{"title":"🎉 Congratz!​","type":1,"pageTitle":"On a regular computer","url":"/doc/pr-2672/en/admin/get_started/install_on/regular_computer#-congratz","content":" You now have a pretty well configured server. If you're new to YunoHost, we recommend to have a look at the guided tour. You should also be able to install your favourite applications. Don't forget to plan backups ! ","version":"Next","tagName":"h2"},{"title":"On an ARM board","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/install_on/arm_board","content":"","keywords":"","version":"Next"},{"title":" Pre-requisites​","type":1,"pageTitle":"On an ARM board","url":"/doc/pr-2672/en/admin/get_started/install_on/arm_board#-pre-requisites","content":" An ARM board with at least 512MB RAMA power supply (either an adapter or a USB cable) for your board;A microSD card: 16GB capacity (at least), class &quot;A1&quot; highly recommended (such as this SanDisk A1 card);A reasonable ISP, preferably with a good and unlimited upstream bandwidthAn ethernet cable (RJ-45) to connect your server to your router.A computer to read this guide, flash the image and access your server.  warning Each ARM board is different and there might be specific instructions for your board. Please follow the Armbian documentation first!  ","version":"Next","tagName":"h2"},{"title":" Download the Armbian image​","type":1,"pageTitle":"On an ARM board","url":"/doc/pr-2672/en/admin/get_started/install_on/arm_board#-download-the-armbian-image","content":" You should download the Armbian Bookworm (Debian 12) image from your vendor's or Armbian's website.   Armbian Download page    ","version":"Next","tagName":"h2"},{"title":" Flash the Armbian image​","type":1,"pageTitle":"On an ARM board","url":"/doc/pr-2672/en/admin/get_started/install_on/arm_board#-flash-the-armbian-image","content":" Now that you downloaded the image of Armbian, you should flash it on a microSD card  With Etcher (recommended)With USBimagerWith dd Download Etcher for your operating system and install it. Plug your SD card, select your image and click &quot;Flash&quot;  ","version":"Next","tagName":"h2"},{"title":" Power up the board​","type":1,"pageTitle":"On an ARM board","url":"/doc/pr-2672/en/admin/get_started/install_on/arm_board#-power-up-the-board","content":" Put the SD card in your boardConnect your board to your home router via Ethernet For advanced users requiring WiFi instead, please follow the official documentation. If you want to follow the initial boot, connect a screen and keyboard on your board.Power up the board  ","version":"Next","tagName":"h2"},{"title":" Connect to the board​","type":1,"pageTitle":"On an ARM board","url":"/doc/pr-2672/en/admin/get_started/install_on/arm_board#-connect-to-the-board","content":" Next you need to find the local IP address of your server to connect as root user via SSH with the temporary password 1234 (see the Armbian doc).  ssh root@192.168.x.xxx   ","version":"Next","tagName":"h2"},{"title":" Run the install script​","type":1,"pageTitle":"On an ARM board","url":"/doc/pr-2672/en/admin/get_started/install_on/arm_board#-run-the-install-script","content":" Open a command line prompt on your server (either directly or through SSH)Make sure you are root (or type sudo -i to become root)Run the following command:  curl https://install.yunohost.org | bash   warning You might need to first install curl and ca-certificates by running: apt install curl ca-certificates   danger Always ensure there's an s at the end of https.  note For advanced users concerned with the curl | bash approach: consider reading &quot;Is curl|bash insecure?&quot; on Sandstom's blog, and possibly this discussion on Hacker News.  ","version":"Next","tagName":"h2"},{"title":" Proceed with the initial configuration​","type":1,"pageTitle":"On an ARM board","url":"/doc/pr-2672/en/admin/get_started/install_on/arm_board#-proceed-with-the-initial-configuration","content":" tip If you are in the process of restoring a server using a YunoHost backup, you should skip this step and instead restore the backup instead of the postinstall step.  note This documentation assumes you're on the same local network as your YunoHost installation.Find out its IP address before continuing. For a VPS, please use the public IP address instead of the local domain or address.  From the web interfaceFrom the command line warning During the first visit, you will very likely encounter a security warning related to the certificate used by the server. For now, your server uses a self-signed certificate. You will later be able to add a certificate automatically recognized by web browsers as described in the certificate documentation. For now, you should add a security exception to accept the current certificate. (Though, PLEASE, do not take the habit of blindly accepting this kind of security alert!) You should then land on this page: Preview of the Web initial configuration page  ","version":"Next","tagName":"h2"},{"title":" Main domain​","type":1,"pageTitle":"On an ARM board","url":"/doc/pr-2672/en/admin/get_started/install_on/arm_board#-main-domain","content":" WSL specific configuration You will have to choose a fake domain, since it will not be accessible from outside. For example, ynh.wsl. The tricky part is advertising this domain to your host. Alter your C:\\Windows\\System32\\drivers\\etc\\hosts file. You should have a line starting by ::1, update it or add it if needed to get: ::1 ynh.wsl localhost If you want to create subdomains, do not forget to add them in the hosts file too: ::1 ynh.wsl subdomain.ynh.wsl localhost   This will be the domain used by your server's users to access the authentication portal. You can later add other domains, and change which one is the main domain if needed.  If you're new to self-hosting and do not already have a domain name, we recommend using a .nohost.me / .noho.st / .ynh.fr (e.g. homersimpson.nohost.me). Provided that it's not already taken, the domain will be configured automatically and you won't need any further configuration step. Please note that the downside is that you won't have full-control over the DNS configuration.If you already own a domain name, you probably want to use it here. You will later need to configure DNS records as explained here.  tip Yes, you have to configure a domain name. If you don't have any domain name and don't want a .nohost.me / .noho.st / .ynh.fr either, you can set up a dummy domain such as yolo.test and tweak your local /etc/hosts file such that this dummy domain points to the appropriate IP, as explained here.  ","version":"Next","tagName":"h3"},{"title":" First user​","type":1,"pageTitle":"On an ARM board","url":"/doc/pr-2672/en/admin/get_started/install_on/arm_board#-first-user","content":" The first user is now created at this stage. You should pick a username and a reasonably complex password. (We cannot stress enough that the password should be robust!) This user will be added to the Admins group, and will therefore be able to access the user portal, the web admin interface, and connect via SSH or SFTP. Admins will also receive emails sent to root@yourdomain.tld and admin@yourdomain.tld: these emails may be used to send technical informations or alerts. You can later add additional users, which you can also add to the Admins group.  This user replaces the old admin user, which some old documentation page may still refer to. In which case: just replace admin with your username.  ","version":"Next","tagName":"h3"},{"title":" Run the initial diagnosis​","type":1,"pageTitle":"On an ARM board","url":"/doc/pr-2672/en/admin/get_started/install_on/arm_board#-run-the-initial-diagnosis","content":" Once the postinstall is done, you should be able to actually log in the web admin interface using the credentials of the first user you just created.  The diagnosis system is meant to provide an easy way to validate that all critical aspects of your server are properly configured - and guide you in how to fix issues. The diagnosis will run twice a day and send an alert if issues are detected.  tip Don't run away ! The first time you run the diagnosis, it is quite expected to see a bunch of yellow/red alerts because you typically need to configure DNS records (if not using a .nohost.me/noho.st/ynh.fr domain), add a swapfile if not enough ram as well as port forwarding on your home's router.  tip If an alert is not relevant (for example because you don't intend on using a specific feature), it is perfectly fine to flag the issue as 'ignored' by going in the webadmin &gt; Diagnosis, and clicking the ignore button for this specifc issue.  warning Especially, installations on WSL or virtual machines will likely not be reachable from outside without further network configuration on Virtualbox and your machine.  (Recommended) From the web interfaceFrom the command line To run a diagnosis, go on Web Admin in the Diagnosis section. Click Run initial diagnosis and you should get a screen like this: Preview of the diagnostic panel  ","version":"Next","tagName":"h2"},{"title":" Get a Let's Encrypt certificate​","type":1,"pageTitle":"On an ARM board","url":"/doc/pr-2672/en/admin/get_started/install_on/arm_board#-get-a-lets-encrypt-certificate","content":" Once you configured DNS records and port forwarding (if needed), you should be able to install a Let's Encrypt certificate. This will get rid of the spooky security warning from earlier for new visitors.  For more detailed instructions, or to lean more about SSL/TLS certificates, see the corresponding page here.  From the web interfaceFrom the command line Go in Domains &gt; Click on your domain &gt; SSL Certificate Preview of the diagnostic panel  ","version":"Next","tagName":"h2"},{"title":"🎉 Congratz!​","type":1,"pageTitle":"On an ARM board","url":"/doc/pr-2672/en/admin/get_started/install_on/arm_board#-congratz","content":" You now have a pretty well configured server. If you're new to YunoHost, we recommend to have a look at the guided tour. You should also be able to install your favourite applications. Don't forget to plan backups ! ","version":"Next","tagName":"h2"},{"title":"On a remote server","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/install_on/remote_server","content":"","keywords":"","version":"Next"},{"title":" Pre-requisites​","type":1,"pageTitle":"On a remote server","url":"/doc/pr-2672/en/admin/get_started/install_on/remote_server#-pre-requisites","content":" A dedicated or virtual private server with Debian 12 (Bookworm) (with kernel &gt;= 6.1) preinstalled, 512MB RAM and 16GB capacity (at least)A computer or a smartphone to read this guide and access your server.  ","version":"Next","tagName":"h2"},{"title":" Connect to the server​","type":1,"pageTitle":"On a remote server","url":"/doc/pr-2672/en/admin/get_started/install_on/remote_server#-connect-to-the-server","content":" You will need to connect to your server via ssh.  ","version":"Next","tagName":"h2"},{"title":" Run the install script​","type":1,"pageTitle":"On a remote server","url":"/doc/pr-2672/en/admin/get_started/install_on/remote_server#-run-the-install-script","content":" Open a command line prompt on your server (either directly or through SSH)Make sure you are root (or type sudo -i to become root)Run the following command:  curl https://install.yunohost.org | bash   warning You might need to first install curl and ca-certificates by running: apt install curl ca-certificates   danger Always ensure there's an s at the end of https.  note For advanced users concerned with the curl | bash approach: consider reading &quot;Is curl|bash insecure?&quot; on Sandstom's blog, and possibly this discussion on Hacker News.  ","version":"Next","tagName":"h2"},{"title":" Proceed with the initial configuration​","type":1,"pageTitle":"On a remote server","url":"/doc/pr-2672/en/admin/get_started/install_on/remote_server#-proceed-with-the-initial-configuration","content":" tip If you are in the process of restoring a server using a YunoHost backup, you should skip this step and instead restore the backup instead of the postinstall step.  note This documentation assumes you're on the same local network as your YunoHost installation.Find out its IP address before continuing. For a VPS, please use the public IP address instead of the local domain or address.  From the web interfaceFrom the command line warning During the first visit, you will very likely encounter a security warning related to the certificate used by the server. For now, your server uses a self-signed certificate. You will later be able to add a certificate automatically recognized by web browsers as described in the certificate documentation. For now, you should add a security exception to accept the current certificate. (Though, PLEASE, do not take the habit of blindly accepting this kind of security alert!) You should then land on this page: Preview of the Web initial configuration page  ","version":"Next","tagName":"h2"},{"title":" Main domain​","type":1,"pageTitle":"On a remote server","url":"/doc/pr-2672/en/admin/get_started/install_on/remote_server#-main-domain","content":" WSL specific configuration You will have to choose a fake domain, since it will not be accessible from outside. For example, ynh.wsl. The tricky part is advertising this domain to your host. Alter your C:\\Windows\\System32\\drivers\\etc\\hosts file. You should have a line starting by ::1, update it or add it if needed to get: ::1 ynh.wsl localhost If you want to create subdomains, do not forget to add them in the hosts file too: ::1 ynh.wsl subdomain.ynh.wsl localhost   This will be the domain used by your server's users to access the authentication portal. You can later add other domains, and change which one is the main domain if needed.  If you're new to self-hosting and do not already have a domain name, we recommend using a .nohost.me / .noho.st / .ynh.fr (e.g. homersimpson.nohost.me). Provided that it's not already taken, the domain will be configured automatically and you won't need any further configuration step. Please note that the downside is that you won't have full-control over the DNS configuration.If you already own a domain name, you probably want to use it here. You will later need to configure DNS records as explained here.  tip Yes, you have to configure a domain name. If you don't have any domain name and don't want a .nohost.me / .noho.st / .ynh.fr either, you can set up a dummy domain such as yolo.test and tweak your local /etc/hosts file such that this dummy domain points to the appropriate IP, as explained here.  ","version":"Next","tagName":"h3"},{"title":" First user​","type":1,"pageTitle":"On a remote server","url":"/doc/pr-2672/en/admin/get_started/install_on/remote_server#-first-user","content":" The first user is now created at this stage. You should pick a username and a reasonably complex password. (We cannot stress enough that the password should be robust!) This user will be added to the Admins group, and will therefore be able to access the user portal, the web admin interface, and connect via SSH or SFTP. Admins will also receive emails sent to root@yourdomain.tld and admin@yourdomain.tld: these emails may be used to send technical informations or alerts. You can later add additional users, which you can also add to the Admins group.  This user replaces the old admin user, which some old documentation page may still refer to. In which case: just replace admin with your username.  ","version":"Next","tagName":"h3"},{"title":" Run the initial diagnosis​","type":1,"pageTitle":"On a remote server","url":"/doc/pr-2672/en/admin/get_started/install_on/remote_server#-run-the-initial-diagnosis","content":" Once the postinstall is done, you should be able to actually log in the web admin interface using the credentials of the first user you just created.  The diagnosis system is meant to provide an easy way to validate that all critical aspects of your server are properly configured - and guide you in how to fix issues. The diagnosis will run twice a day and send an alert if issues are detected.  tip Don't run away ! The first time you run the diagnosis, it is quite expected to see a bunch of yellow/red alerts because you typically need to configure DNS records (if not using a .nohost.me/noho.st/ynh.fr domain), add a swapfile if not enough ram as well as port forwarding on your home's router.  tip If an alert is not relevant (for example because you don't intend on using a specific feature), it is perfectly fine to flag the issue as 'ignored' by going in the webadmin &gt; Diagnosis, and clicking the ignore button for this specifc issue.  warning Especially, installations on WSL or virtual machines will likely not be reachable from outside without further network configuration on Virtualbox and your machine.  (Recommended) From the web interfaceFrom the command line To run a diagnosis, go on Web Admin in the Diagnosis section. Click Run initial diagnosis and you should get a screen like this: Preview of the diagnostic panel  ","version":"Next","tagName":"h2"},{"title":" Get a Let's Encrypt certificate​","type":1,"pageTitle":"On a remote server","url":"/doc/pr-2672/en/admin/get_started/install_on/remote_server#-get-a-lets-encrypt-certificate","content":" Once you configured DNS records and port forwarding (if needed), you should be able to install a Let's Encrypt certificate. This will get rid of the spooky security warning from earlier for new visitors.  For more detailed instructions, or to lean more about SSL/TLS certificates, see the corresponding page here.  From the web interfaceFrom the command line Go in Domains &gt; Click on your domain &gt; SSL Certificate Preview of the diagnostic panel  ","version":"Next","tagName":"h2"},{"title":"🎉 Congratz!​","type":1,"pageTitle":"On a remote server","url":"/doc/pr-2672/en/admin/get_started/install_on/remote_server#-congratz","content":" You now have a pretty well configured server. If you're new to YunoHost, we recommend to have a look at the guided tour. You should also be able to install your favourite applications. Don't forget to plan backups ! ","version":"Next","tagName":"h2"},{"title":"In a virtual machine","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/install_on/virtualbox","content":"","keywords":"","version":"Next"},{"title":" Pre-requisites​","type":1,"pageTitle":"In a virtual machine","url":"/doc/pr-2672/en/admin/get_started/install_on/virtualbox#-pre-requisites","content":" An x86 computer with VirtualBox installed and enough RAM capacity to be able to run a small virtual machine with 1024MB RAM and 8GB capacity (at least)  ","version":"Next","tagName":"h2"},{"title":" Download the YunoHost image​","type":1,"pageTitle":"In a virtual machine","url":"/doc/pr-2672/en/admin/get_started/install_on/virtualbox#-download-the-yunohost-image","content":" warning If your host OS is 32 bits, be sure to download the 32-bit image.  note If you wish to check the validity of our signed images, you can download our public key.    ","version":"Next","tagName":"h2"},{"title":"Create a new virtual machine​","type":1,"pageTitle":"In a virtual machine","url":"/doc/pr-2672/en/admin/get_started/install_on/virtualbox#create-a-new-virtual-machine","content":"   warning It's okay if you can only have 32-bit versions, just be sure that you downloaded the 32-bit image previously.  ","version":"Next","tagName":"h2"},{"title":"Tweak network settings​","type":1,"pageTitle":"In a virtual machine","url":"/doc/pr-2672/en/admin/get_started/install_on/virtualbox#tweak-network-settings","content":" warning This step is important to properly expose the virtual machine on the network  Go to Settings &gt; Network:  Select Bridged adapterSelect your interface's name:wlan0 if you are connected wirelessly, or eth0 otherwise.    ","version":"Next","tagName":"h2"},{"title":" Boot up the virtual machine​","type":1,"pageTitle":"In a virtual machine","url":"/doc/pr-2672/en/admin/get_started/install_on/virtualbox#-boot-up-the-virtual-machine","content":" Start the virtual machine after selecting the YunoHost image.    warning If you encounter the error &quot;VT-x is not available&quot;, you probably need to enable Virtualization in the BIOS of your computer.  ","version":"Next","tagName":"h2"},{"title":" Launch the graphical install​","type":1,"pageTitle":"In a virtual machine","url":"/doc/pr-2672/en/admin/get_started/install_on/virtualbox#-launch-the-graphical-install","content":" You should see a screen like this:  Preview of the ISO menu  Classic installation on a whole diskInstallation in expert mode danger Once you have validated the keyboard layout, the installation will be launched and will completely erase the data on your hard disk! Select Graphical installSelect your language, your location, your keyboard layout, and eventually your timezone.The installer will then download and install all required packages.  tip If the YunoHost installer fails and you can't solve the issue, know that it's also possible to install Debian and then install YunoHost on top. See these instructions.  ","version":"Next","tagName":"h2"},{"title":" Proceed with the initial configuration​","type":1,"pageTitle":"In a virtual machine","url":"/doc/pr-2672/en/admin/get_started/install_on/virtualbox#-proceed-with-the-initial-configuration","content":" tip If you are in the process of restoring a server using a YunoHost backup, you should skip this step and instead restore the backup instead of the postinstall step.  note This documentation assumes you're on the same local network as your YunoHost installation.Find out its IP address before continuing. For a VPS, please use the public IP address instead of the local domain or address.  From the web interfaceFrom the command line warning During the first visit, you will very likely encounter a security warning related to the certificate used by the server. For now, your server uses a self-signed certificate. You will later be able to add a certificate automatically recognized by web browsers as described in the certificate documentation. For now, you should add a security exception to accept the current certificate. (Though, PLEASE, do not take the habit of blindly accepting this kind of security alert!) You should then land on this page: Preview of the Web initial configuration page  ","version":"Next","tagName":"h2"},{"title":" Main domain​","type":1,"pageTitle":"In a virtual machine","url":"/doc/pr-2672/en/admin/get_started/install_on/virtualbox#-main-domain","content":" WSL specific configuration You will have to choose a fake domain, since it will not be accessible from outside. For example, ynh.wsl. The tricky part is advertising this domain to your host. Alter your C:\\Windows\\System32\\drivers\\etc\\hosts file. You should have a line starting by ::1, update it or add it if needed to get: ::1 ynh.wsl localhost If you want to create subdomains, do not forget to add them in the hosts file too: ::1 ynh.wsl subdomain.ynh.wsl localhost   This will be the domain used by your server's users to access the authentication portal. You can later add other domains, and change which one is the main domain if needed.  If you're new to self-hosting and do not already have a domain name, we recommend using a .nohost.me / .noho.st / .ynh.fr (e.g. homersimpson.nohost.me). Provided that it's not already taken, the domain will be configured automatically and you won't need any further configuration step. Please note that the downside is that you won't have full-control over the DNS configuration.If you already own a domain name, you probably want to use it here. You will later need to configure DNS records as explained here.  tip Yes, you have to configure a domain name. If you don't have any domain name and don't want a .nohost.me / .noho.st / .ynh.fr either, you can set up a dummy domain such as yolo.test and tweak your local /etc/hosts file such that this dummy domain points to the appropriate IP, as explained here.  ","version":"Next","tagName":"h3"},{"title":" First user​","type":1,"pageTitle":"In a virtual machine","url":"/doc/pr-2672/en/admin/get_started/install_on/virtualbox#-first-user","content":" The first user is now created at this stage. You should pick a username and a reasonably complex password. (We cannot stress enough that the password should be robust!) This user will be added to the Admins group, and will therefore be able to access the user portal, the web admin interface, and connect via SSH or SFTP. Admins will also receive emails sent to root@yourdomain.tld and admin@yourdomain.tld: these emails may be used to send technical informations or alerts. You can later add additional users, which you can also add to the Admins group.  This user replaces the old admin user, which some old documentation page may still refer to. In which case: just replace admin with your username.  ","version":"Next","tagName":"h3"},{"title":" Run the initial diagnosis​","type":1,"pageTitle":"In a virtual machine","url":"/doc/pr-2672/en/admin/get_started/install_on/virtualbox#-run-the-initial-diagnosis","content":" Once the postinstall is done, you should be able to actually log in the web admin interface using the credentials of the first user you just created.  The diagnosis system is meant to provide an easy way to validate that all critical aspects of your server are properly configured - and guide you in how to fix issues. The diagnosis will run twice a day and send an alert if issues are detected.  tip Don't run away ! The first time you run the diagnosis, it is quite expected to see a bunch of yellow/red alerts because you typically need to configure DNS records (if not using a .nohost.me/noho.st/ynh.fr domain), add a swapfile if not enough ram as well as port forwarding on your home's router.  tip If an alert is not relevant (for example because you don't intend on using a specific feature), it is perfectly fine to flag the issue as 'ignored' by going in the webadmin &gt; Diagnosis, and clicking the ignore button for this specifc issue.  warning Especially, installations on WSL or virtual machines will likely not be reachable from outside without further network configuration on Virtualbox and your machine.  (Recommended) From the web interfaceFrom the command line To run a diagnosis, go on Web Admin in the Diagnosis section. Click Run initial diagnosis and you should get a screen like this: Preview of the diagnostic panel  ","version":"Next","tagName":"h2"},{"title":" Get a Let's Encrypt certificate​","type":1,"pageTitle":"In a virtual machine","url":"/doc/pr-2672/en/admin/get_started/install_on/virtualbox#-get-a-lets-encrypt-certificate","content":" Once you configured DNS records and port forwarding (if needed), you should be able to install a Let's Encrypt certificate. This will get rid of the spooky security warning from earlier for new visitors.  For more detailed instructions, or to lean more about SSL/TLS certificates, see the corresponding page here.  From the web interfaceFrom the command line Go in Domains &gt; Click on your domain &gt; SSL Certificate Preview of the diagnostic panel  ","version":"Next","tagName":"h2"},{"title":"🎉 Congratz!​","type":1,"pageTitle":"In a virtual machine","url":"/doc/pr-2672/en/admin/get_started/install_on/virtualbox#-congratz","content":" You now have a pretty well configured server. If you're new to YunoHost, we recommend to have a look at the guided tour. You should also be able to install your favourite applications. Don't forget to plan backups ! ","version":"Next","tagName":"h2"},{"title":"On WSL","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/install_on/wsl","content":"","keywords":"","version":"Next"},{"title":" Pre-requisites​","type":1,"pageTitle":"On WSL","url":"/doc/pr-2672/en/admin/get_started/install_on/wsl#-pre-requisites","content":" Windows 10 and aboveAdministration rightsWindows Subsystem for Linux, installed from the Optional Features menu of WindowsRecommended: Windows Terminal (Preview) app, installed from the Microsoft Store. Much better than the standard Terminal, as it offers shortcuts to the WSL distros.  ","version":"Next","tagName":"h2"},{"title":"Introduction​","type":1,"pageTitle":"On WSL","url":"/doc/pr-2672/en/admin/get_started/install_on/wsl#introduction","content":" WSL is a nice feature of Windows 10, making Linux pseudo-distributions available through command line. Let's say pseudo, because even though they are not really like virtual machines, they rely on virtualization capacities that make their integration with Windows almost seamless. Docker for Windows can now rely on WSL instead of Hyper-V, for example.  warning Bear in mind, this setup itself is not a container of any kind. If something breaks, there is no rollback capability. You may need to delete the Debian distro altogether and restore it whole.  ","version":"Next","tagName":"h2"},{"title":"Install Debian​","type":1,"pageTitle":"On WSL","url":"/doc/pr-2672/en/admin/get_started/install_on/wsl#install-debian","content":" Let's install YunoHost into its own distro, not altering the default one. In a PowerShell terminal:  # Let's go in your home directory and prepare the working directories cd ~ mkdir -p WSL\\YunoHost # Download the Debian appx package and unzip it curl.exe -L -o debian.zip https://aka.ms/wsl-debian-gnulinux Expand-Archive .\\debian.zip -DestinationPath .\\debian # Import the Debian base into a new distro wsl --import YunoHost ~\\WSL\\YunoHost ~\\debian\\install.tar.gz --version 2 # Cleanup rmdir .\\debian -R   You can now access it: run wsl.exe -d YunoHost  It is under Debian 9 Stretch, so let's upgrade it:  # In WSL sudo sed -i 's/stretch/bookworm/g' /etc/apt/sources.list` sudo apt update sudo apt upgrade # optional sudo apt full-upgrade # wget needed for later setup sudo apt install wget -y   ","version":"Next","tagName":"h2"},{"title":"Prevent WSL from tweaking configuration files​","type":1,"pageTitle":"On WSL","url":"/doc/pr-2672/en/admin/get_started/install_on/wsl#prevent-wsl-from-tweaking-configuration-files","content":" Edit /etc/wsl.conf and put the following code in it:  [network] generateHosts = false generateResolvConf = false   ","version":"Next","tagName":"h2"},{"title":"Force the use of iptables-legacy​","type":1,"pageTitle":"On WSL","url":"/doc/pr-2672/en/admin/get_started/install_on/wsl#force-the-use-of-iptables-legacy","content":" FIXME YunoHost now uses nftables, these instructions might be out of date.  Somehow the YunoHost post-installation does not like nf_tables, the new software replacing iptables. We can still explicitely use the good ol' iptables though:  # In WSL sudo update-alternatives --set iptables /usr/sbin/iptables-legacy sudo update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy   ","version":"Next","tagName":"h2"},{"title":"Install Systemd​","type":1,"pageTitle":"On WSL","url":"/doc/pr-2672/en/admin/get_started/install_on/wsl#install-systemd","content":" Debian on WSL does not have systemd, a service configuration software. This is a key element for YunoHost, and for any decent Debian distro (seriously MS, what the heck). Let's install it:  Install dotNET runtime: # In WSL wget https://packages.microsoft.com/config/debian/12/packages-microsoft-prod.deb -O packages-microsoft-prod.deb sudo dpkg -i packages-microsoft-prod.deb sudo apt update sudo apt install -y apt-transport-https sudo apt update sudo apt install -y dotnet-sdk-3.1 Install Genie: # In WSL # Add their repository echo &quot;deb [trusted=yes] https://wsl-translinux.arkane-systems.net/apt/ /&quot; &gt; /etc/apt/sources.list.d/wsl-translinux.list # Install Genie sudo apt update sudo apt install -y systemd-genie   ","version":"Next","tagName":"h2"},{"title":"Install YunoHost​","type":1,"pageTitle":"On WSL","url":"/doc/pr-2672/en/admin/get_started/install_on/wsl#install-yunohost","content":" # In WSL # Let's switch to the root user, if you were not already sudo su # Initialize the Genie bottle to have systemd running genie -s # Your hostname should have been appended with &quot;-wsl&quot;   ","version":"Next","tagName":"h2"},{"title":" Run the install script​","type":1,"pageTitle":"On WSL","url":"/doc/pr-2672/en/admin/get_started/install_on/wsl#-run-the-install-script","content":" Open a command line prompt on your server (either directly or through SSH)Make sure you are root (or type sudo -i to become root)Run the following command:  curl https://install.yunohost.org | bash   warning You might need to first install curl and ca-certificates by running: apt install curl ca-certificates   danger Always ensure there's an s at the end of https.  note For advanced users concerned with the curl | bash approach: consider reading &quot;Is curl|bash insecure?&quot; on Sandstom's blog, and possibly this discussion on Hacker News.  ","version":"Next","tagName":"h2"},{"title":"Access the command line​","type":1,"pageTitle":"On WSL","url":"/doc/pr-2672/en/admin/get_started/install_on/wsl#access-the-command-line","content":" Always call genie -s while starting your distro.  wsl -d YunoHost -e genie -s   ","version":"Next","tagName":"h3"},{"title":"Backup and restore the distro​","type":1,"pageTitle":"On WSL","url":"/doc/pr-2672/en/admin/get_started/install_on/wsl#backup-and-restore-the-distro","content":" ","version":"Next","tagName":"h2"},{"title":"Make your first distro backup​","type":1,"pageTitle":"On WSL","url":"/doc/pr-2672/en/admin/get_started/install_on/wsl#make-your-first-distro-backup","content":" As said before, there is no rollback capability. So let's export your fresh distro. In PowerShell:  cd ~ wsl --export YunoHost .\\WSL\\YunoHost.tar.gz   ","version":"Next","tagName":"h3"},{"title":"In case of crash, delete and restore the whole distro​","type":1,"pageTitle":"On WSL","url":"/doc/pr-2672/en/admin/get_started/install_on/wsl#in-case-of-crash-delete-and-restore-the-whole-distro","content":" cd ~ wsl --unregister YunoHost wsl --import YunoHost .\\WSL\\YunoHost .\\WSL\\YunoHost.tar.gz --version 2   ","version":"Next","tagName":"h3"},{"title":" Proceed with the initial configuration​","type":1,"pageTitle":"On WSL","url":"/doc/pr-2672/en/admin/get_started/install_on/wsl#-proceed-with-the-initial-configuration","content":" tip If you are in the process of restoring a server using a YunoHost backup, you should skip this step and instead restore the backup instead of the postinstall step.  note This documentation assumes you're on the same local network as your YunoHost installation.Find out its IP address before continuing. For a VPS, please use the public IP address instead of the local domain or address.  From the web interfaceFrom the command line warning During the first visit, you will very likely encounter a security warning related to the certificate used by the server. For now, your server uses a self-signed certificate. You will later be able to add a certificate automatically recognized by web browsers as described in the certificate documentation. For now, you should add a security exception to accept the current certificate. (Though, PLEASE, do not take the habit of blindly accepting this kind of security alert!) You should then land on this page: Preview of the Web initial configuration page  ","version":"Next","tagName":"h2"},{"title":" Main domain​","type":1,"pageTitle":"On WSL","url":"/doc/pr-2672/en/admin/get_started/install_on/wsl#-main-domain","content":" WSL specific configuration You will have to choose a fake domain, since it will not be accessible from outside. For example, ynh.wsl. The tricky part is advertising this domain to your host. Alter your C:\\Windows\\System32\\drivers\\etc\\hosts file. You should have a line starting by ::1, update it or add it if needed to get: ::1 ynh.wsl localhost If you want to create subdomains, do not forget to add them in the hosts file too: ::1 ynh.wsl subdomain.ynh.wsl localhost   This will be the domain used by your server's users to access the authentication portal. You can later add other domains, and change which one is the main domain if needed.  If you're new to self-hosting and do not already have a domain name, we recommend using a .nohost.me / .noho.st / .ynh.fr (e.g. homersimpson.nohost.me). Provided that it's not already taken, the domain will be configured automatically and you won't need any further configuration step. Please note that the downside is that you won't have full-control over the DNS configuration.If you already own a domain name, you probably want to use it here. You will later need to configure DNS records as explained here.  tip Yes, you have to configure a domain name. If you don't have any domain name and don't want a .nohost.me / .noho.st / .ynh.fr either, you can set up a dummy domain such as yolo.test and tweak your local /etc/hosts file such that this dummy domain points to the appropriate IP, as explained here.  ","version":"Next","tagName":"h3"},{"title":" First user​","type":1,"pageTitle":"On WSL","url":"/doc/pr-2672/en/admin/get_started/install_on/wsl#-first-user","content":" The first user is now created at this stage. You should pick a username and a reasonably complex password. (We cannot stress enough that the password should be robust!) This user will be added to the Admins group, and will therefore be able to access the user portal, the web admin interface, and connect via SSH or SFTP. Admins will also receive emails sent to root@yourdomain.tld and admin@yourdomain.tld: these emails may be used to send technical informations or alerts. You can later add additional users, which you can also add to the Admins group.  This user replaces the old admin user, which some old documentation page may still refer to. In which case: just replace admin with your username.  ","version":"Next","tagName":"h3"},{"title":" Run the initial diagnosis​","type":1,"pageTitle":"On WSL","url":"/doc/pr-2672/en/admin/get_started/install_on/wsl#-run-the-initial-diagnosis","content":" Once the postinstall is done, you should be able to actually log in the web admin interface using the credentials of the first user you just created.  The diagnosis system is meant to provide an easy way to validate that all critical aspects of your server are properly configured - and guide you in how to fix issues. The diagnosis will run twice a day and send an alert if issues are detected.  tip Don't run away ! The first time you run the diagnosis, it is quite expected to see a bunch of yellow/red alerts because you typically need to configure DNS records (if not using a .nohost.me/noho.st/ynh.fr domain), add a swapfile if not enough ram as well as port forwarding on your home's router.  tip If an alert is not relevant (for example because you don't intend on using a specific feature), it is perfectly fine to flag the issue as 'ignored' by going in the webadmin &gt; Diagnosis, and clicking the ignore button for this specifc issue.  warning Especially, installations on WSL or virtual machines will likely not be reachable from outside without further network configuration on Virtualbox and your machine.  (Recommended) From the web interfaceFrom the command line To run a diagnosis, go on Web Admin in the Diagnosis section. Click Run initial diagnosis and you should get a screen like this: Preview of the diagnostic panel  ","version":"Next","tagName":"h2"},{"title":" Get a Let's Encrypt certificate​","type":1,"pageTitle":"On WSL","url":"/doc/pr-2672/en/admin/get_started/install_on/wsl#-get-a-lets-encrypt-certificate","content":" Once you configured DNS records and port forwarding (if needed), you should be able to install a Let's Encrypt certificate. This will get rid of the spooky security warning from earlier for new visitors.  For more detailed instructions, or to lean more about SSL/TLS certificates, see the corresponding page here.  From the web interfaceFrom the command line Go in Domains &gt; Click on your domain &gt; SSL Certificate Preview of the diagnostic panel  ","version":"Next","tagName":"h2"},{"title":"🎉 Congratz!​","type":1,"pageTitle":"On WSL","url":"/doc/pr-2672/en/admin/get_started/install_on/wsl#-congratz","content":" You now have a pretty well configured server. If you're new to YunoHost, we recommend to have a look at the guided tour. You should also be able to install your favourite applications. Don't forget to plan backups ! ","version":"Next","tagName":"h2"},{"title":"Choose your self-hosting mode","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/methods","content":"","keywords":"","version":"Next"},{"title":"At home, for instance on an ARM board or an old computer​","type":1,"pageTitle":"Choose your self-hosting mode","url":"/doc/pr-2672/en/admin/get_started/methods#at-home-for-instance-on-an-arm-board-or-an-old-computer","content":" You can host yourself at home with an ARM board or a re-purposed regular computer, connected to your home router/box.  Pros: you will have physical control of the machine and only need to buy the hardware;Cons: you will have to manually configure your internet box and might be limited by your ISP.  ","version":"Next","tagName":"h2"},{"title":"At home, behind a VPN​","type":1,"pageTitle":"Choose your self-hosting mode","url":"/doc/pr-2672/en/admin/get_started/methods#at-home-behind-a-vpn","content":" A VPN is an encrypted tunnel between two machines. In practice, it makes it &quot;as if&quot; you were directly, locally, connected to your server machine, but actually from somewhere else on the Internet. This allows you to still host yourself at home, while bypassing possible limitations of your ISP. See also the Internet Cube project and the FFDN.  Pros: you will have physical control of the machine, and the VPN hides your traffic from your ISP and allows you to bypass its limitations;Cons: you will have to pay a monthly subscription for the VPN.  ","version":"Next","tagName":"h2"},{"title":"On a remote server (VPS or dedicated server)​","type":1,"pageTitle":"Choose your self-hosting mode","url":"/doc/pr-2672/en/admin/get_started/methods#on-a-remote-server-vps-or-dedicated-server","content":" You can rent a virtual private server or a dedicated machine from associative or commercial &quot;Cloud&quot; providers.  Pros: your server and its internet connectivity will be fast;Cons: you will have to pay a monthly subscription and won't have physical control of your server.  ","version":"Next","tagName":"h2"},{"title":"Summary​","type":1,"pageTitle":"Choose your self-hosting mode","url":"/doc/pr-2672/en/admin/get_started/methods#summary","content":"   \tAt home (e.g. ARM board, old computer)\tAt home behind a VPN\tOn a remote server (VPS or dedicated)Hardware cost\tAbout 50€ (e.g. a Raspberry Pi)\tNone Monthly cost\tNegligible (electricity)\tAround 5€ (VPN)\tStarting at ~3€ (VPS) Physical control of the machine\tYes\tYes\tNo Manual port routing required\tYes\tNo\tNo Possible ISP limitations\tYes (see here)\tBypassed by VPN\tTypically no Internet connectivity\tDepends on home connectivity\tTypically pretty good ","version":"Next","tagName":"h2"},{"title":"DNS zone configuration","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/post_install/dns_config","content":"","keywords":"","version":"Next"},{"title":"Recommended DNS configuration​","type":1,"pageTitle":"DNS zone configuration","url":"/doc/pr-2672/en/admin/get_started/post_install/dns_config#recommended-dns-configuration","content":" NB: Examples here use the placeholder your.domain.tld, you have to replace it with your real domain, such as www.yunohost.org.  YunoHost provides a recommended DNS configuration, available via:  the webadmin, in Domain &gt; your.domain.tld &gt; DNS configuration;or the command line, yunohost domain dns suggest your.domain.tld  For specific needs or specific setups, and if you know what you're doing, you might want or have to tweak these, or add additional ones (e.g. to handle subdomains).  The recommended configuration typically looks like this:  # # Basic ipv4/ipv6 records # @ 3600 IN A 111.222.33.44 * 3600 IN A 111.222.33.44 # (If your server is IPv6 capable, there are some AAAA records) @ 3600 IN AAAA 2222:444:8888:3333:bbbb:5555:3333:1111 * 3600 IN AAAA 2222:444:8888:3333:bbbb:5555:3333:1111 # # XMPP # _xmpp-client._tcp 3600 IN SRV 0 5 5222 your.domain.tld. _xmpp-server._tcp 3600 IN SRV 0 5 5269 your.domain.tld. muc 3600 IN CNAME @ pubsub 3600 IN CNAME @ vjud 3600 IN CNAME @ xmpp-upload 3600 IN CNAME @ # # Mail (MX, SPF, DKIM and DMARC) # @ 3600 IN MX 10 your.domain.tld. @ 3600 IN TXT &quot;v=spf1 a mx -all&quot; mail._domainkey 3600 IN TXT &quot;v=DKIM1; k=rsa; p=someHuuuuuuugeKey&quot; _dmarc 3600 IN TXT &quot;v=DMARC1; p=none&quot;   Though it might be easier to understand it if displayed like this:  Type\tName\tValueA\t@\t111.222.333.444 (your IPv4) A\t*\t111.222.333.444 (your IPv4) AAAA\t@\t2222:444:8888:3333:bbbb:5555:3333:1111 (your IPv6) AAAA\t*\t2222:444:8888:3333:bbbb:5555:3333:1111 (your IPv6) SRV\t_xmpp-client._tcp\t0 5 5222 your.domain.tld. SRV\t_xmpp-server._tcp\t0 5 5269 your.domain.tld. CNAME\tmuc\t@ CNAME\tpubsub\t@ CNAME\tvjud\t@ CNAME\txmpp-upload\t@ MX\t@\tyour.domain.tld. (and priority: 10) TXT\t@\t&quot;v=spf1 a mx -all&quot; TXT\tmail._domainkey\t&quot;v=DKIM1; k=rsa; p=someHuuuuuuugeKey&quot; TXT\t_dmarc\t&quot;v=DMARC1; p=none&quot;  ","version":"Next","tagName":"h2"},{"title":"A few notes about this table​","type":1,"pageTitle":"DNS zone configuration","url":"/doc/pr-2672/en/admin/get_started/post_install/dns_config#a-few-notes-about-this-table","content":" Not all these lines are absolutely necessary. For a minimal setup, you only need the records in bold.The dot at the end of your.domain.tld. is important ;);@ corresponds to your.domain.tld, and e.g. muc corresponds to muc.your.domain.tld;These are example values ! See your generated conf for the actual values you should use;We recommend a TTL of 3600 (1 hour). But you can use something else if you know what you're doing;Don't put an IPv6 record if you're not sure IPv6 really works on your server! You might have issues with Let's Encrypt if it doesn't.If you're using the domain provider Namecheap the SRV DNS entries are formatted as Service: _xmpp-client Protocol: _tcp Priority: 0 Weight: 5 Port: 5222 Target: your.domain.tld  ","version":"Next","tagName":"h3"},{"title":"Reverse DNS​","type":1,"pageTitle":"DNS zone configuration","url":"/doc/pr-2672/en/admin/get_started/post_install/dns_config#reverse-dns","content":" If your ISP or VPS provider let you define a Reverse DNS lookup for your public IPv4 and/or IPv6 addresses, you must configure it. It will prevent you to be marked as spam by anti-spam filters.  N.B.: the reverse DNS configuration happens on your Internet Service Provider or VPS provider. It is not handled by your domain's registrar.  If your public IPv4 address is 111.222.333.444 and your DNS domain is domain.tld, you should get following answer when using nslookupcommand tool:  nslookup 111.222.333.444 444.333.222.111.in-addr.arpa name = domain.tld.   The diagnosis system available in the webadmin performs this checks automatically (in section Email).  ","version":"Next","tagName":"h3"},{"title":"Dynamic IP​","type":1,"pageTitle":"DNS zone configuration","url":"/doc/pr-2672/en/admin/get_started/post_install/dns_config#dynamic-ip","content":" If your global IP address is constantly changing, follow this tutorial. ","version":"Next","tagName":"h3"},{"title":"Find your server's local IP","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/post_install/find_ip","content":"","keywords":"","version":"Next"},{"title":"What is a local IP ?​","type":1,"pageTitle":"Find your server's local IP","url":"/doc/pr-2672/en/admin/get_started/post_install/find_ip#what-is-a-local-ip-","content":" The local IP is the address used to refer to your server inside the local network (typically your home) where multiple devices are connected to a router (your internet box). The local IP typically looks like 192.168.x.y (or sometimes 10.0.x.y or 172.16.x.y)  ","version":"Next","tagName":"h2"},{"title":"How to find it ?​","type":1,"pageTitle":"Find your server's local IP","url":"/doc/pr-2672/en/admin/get_started/post_install/find_ip#how-to-find-it-","content":" Any of these tricks should allow you to find the local IP of your server:  With AngryIP (Recommended)With your internet router / boxWith arp-scanWith a direct access on the server You can use the AngryIP software to achieve that. You just need to scan these local ip ranges in this order until you find the active IP corresponding to your server: 192.168.0.0 -&gt; 192.168.0.255192.168.1.0 -&gt; 192.168.1.255192.168.2.0 -&gt; 192.168.255.25510.0.0.0 -&gt; 10.0.255.255172.16.0.0 -&gt; 172.31.255.255 tip you can order by ping like on this screenshot to easily see effectively-used IP.your server should typically be displayed as listening on port 80 and 443in case of doubt, just type https://192.168.x.y in your browser to check if it's a YunoHost or not.  ","version":"Next","tagName":"h2"},{"title":"I still can't find my local IP​","type":1,"pageTitle":"Find your server's local IP","url":"/doc/pr-2672/en/admin/get_started/post_install/find_ip#i-still-cant-find-my-local-ip","content":" If you are unable to find your server using any of the previous tricks, maybe your server did not boot correctly:  Make sure that your server is properly plugged in;If you're using an SD card, make sure the connector is not too dusty;Plug a screen on your server and try to reboot to check that it's properly booting;Make sure that your ethernet cable is working and properly plugged in; ","version":"Next","tagName":"h2"},{"title":"Configure port-forwarding","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/post_install/port_forwarding","content":"","keywords":"","version":"Next"},{"title":"0. Diagnose ports opened​","type":1,"pageTitle":"Configure port-forwarding","url":"/doc/pr-2672/en/admin/get_started/post_install/port_forwarding#0-diagnose-ports-opened","content":" The new diagnosis tool introduced in 3.8 can be used to diagnose that ports are correctly exposed.  ","version":"Next","tagName":"h3"},{"title":"1. Access your box/router administration interface​","type":1,"pageTitle":"Configure port-forwarding","url":"/doc/pr-2672/en/admin/get_started/post_install/port_forwarding#1-access-your-boxrouter-administration-interface","content":" Your box/router admin interface is usually reachable via http://192.168.0.1 or http://192.168.1.1. Then, you will probably need to authenticate yourself the credentials given by your internet server provider.  ","version":"Next","tagName":"h3"},{"title":"2. Find the local IP of your server​","type":1,"pageTitle":"Configure port-forwarding","url":"/doc/pr-2672/en/admin/get_started/post_install/port_forwarding#2-find-the-local-ip-of-your-server","content":" Identify the local IP of your server, either:  from your box/router interface, which might list devices connectedfrom the YunoHost webadmin, in 'Diagnosis', section 'Internet connectivity', click on 'Details' on the IPv4 report.from the command line in your server, by running hostname -I  A local IP address typically looks like 192.168.xx.yy, or 10.0.xx.yy.  The local IP address needs to be static, so that the port forwards that you are going to configure in the next step will always reach your server. You should go into your box/router and make sure that the local IP address of your server is static instead of dynamic.  ","version":"Next","tagName":"h3"},{"title":"3. Forwarding ports​","type":1,"pageTitle":"Configure port-forwarding","url":"/doc/pr-2672/en/admin/get_started/post_install/port_forwarding#3-forwarding-ports","content":" In your router admin interface, look for something like 'router configuration' or 'port forwarding'. The naming differs among the various kinds of boxes.  Opening the ports listed below is necessary for the various services available in YunoHost to work. For each of them, the 'TCP' forwarding is needed. Some interfaces refer to 'external' and 'internal' ports: these are the same in our case.  Web: 80 (HTTP), 443 (HTTPS)SSH: 22XMPP: 5222 (clients), 5269 (servers)Email: 25, 587 (SMTP), 993 (IMAP)  If you use both a modem and a router, then you need to do the following:  first on the modem (the box closest to the internet) create rules to forward the above ports to your router;then on the router (the box between the modem and your devices) create rules to forward the above ports to the static IP address for your server.  warning Some internet service providers block port 25 (mail SMTP) by default to fight spam. Some other ISP don't allow to use port 80/443 (web) freely, though it's less likely. Depending on the ISP, it might be possible to open them in the admin interface... Check this page for more info.  ","version":"Next","tagName":"h3"},{"title":"Automatic port forwarding / UPnP​","type":1,"pageTitle":"Configure port-forwarding","url":"/doc/pr-2672/en/admin/get_started/post_install/port_forwarding#automatic-port-forwarding--upnp","content":" A technology called UPnP is available on some internet boxes / routers and allows to automatically forward ports by the machine who needs them. If UPnP is enabled in your local network, then running this command should automatically open the port for you:  sudo yunohost firewall reload  ","version":"Next","tagName":"h2"},{"title":"Free (France)","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/providers/isp/free","content":"Free (France)","keywords":"","version":"Next"},{"title":"Orange (France)","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/providers/isp/orange","content":"Orange (France)","keywords":"","version":"Next"},{"title":"Internet service providers","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/providers/isp/","content":"Internet service providers AfricaAsiaEuropeNorth AmericaSouth AmericaOceania Belgium (nl)Belgium (fr)FinlandFranceHungaryIrelandSwedenSwitzerlandUK Service provider\tBox/ router\tuPnP beschikbaar\tPoort 25 openen mogelijk\tHairpinning\tReverse DNS\tvaste IPProximus\tBBox2\tja (geactiveerd)\tja\tnee\tnee\tnee BBox3\tja (geactiveerd)\tja\tnee\tnee\tnee Scarlet\tBBox2\tja (geactiveerd)\tja\tnee\tnee\tnee caution Proximus zou niet openstaan voor self-hosting. Het openen van de poorten zou moeilijker zijn om SPAM te voorkomen. Het loont de moeite om een vpn te gebruiken.","keywords":"","version":"Next"},{"title":"SFR (France)","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/providers/isp/sfr","content":"SFR (France)","keywords":"","version":"Next"},{"title":"Registrars","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/providers/registrar/","content":"Registrars Since version 4.3, YunoHost includes a mechanism to interface your server with your DNS registrar API, with the purpose of simplifying and automatizing DNS records registration and maintenance. The procedure requires an initial configuration where you need to generate an API key on your registrar's interface. Not all registrars are supported. So far, the community tested and validated the interface with Gandi and OVH, which are recommended. The interface with other registrars may work, but is still considered experimental until we gather feedback from the community. The list below can help you to choose a registrar if you plan to buy a domain name to use it with YunoHost. Registrar\tCompatibility\tEasy to obtain an API key\tHowtoGandi\t✘ (broken)\t✘\tObtain an API key See bug here OVH\t✔ (tested)\t✘\tObtain an API key Configure manually Namecheap\t✘ (in lexicon but untested)\t✘✘✘ API not available without 50$ on the account\tObtain an API key","keywords":"","version":"Next"},{"title":"Obtaining an API key from Gandi","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/providers/registrar/gandi","content":"Obtaining an API key from Gandi This page is meant to guide you in obtaining an API key from Gandi in order to configure YunoHost's automatic DNS configuration mecanism caution DO NOT share your API tokens with anybody! A malicious attacker obtaining your tokens could take over your domain, and possibly your server! Go to https://account.gandi.net/You should land on this page. Then click on 'Security'In the next page, click on '(re)Generate the API key'.","keywords":"","version":"Next"},{"title":"Obtaining an API key from OVH","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/providers/registrar/ovh/autodns","content":"Obtaining an API key from OVH This page is meant to guide you in obtaining an API key from OVH in order to configure YunoHost's automatic DNS configuration mecanism info DO NOT share your API tokens with anybody! A malicious attacker obtaining your tokens could take over your domain, and possibly your server! Go to the OVH token request page Fill the form with the required informations as shown below: Account ID or email address: This is your usual OVH loginPassword: This is your usual OVH passwordScript Name: for example YunoHost Auto DNSScript description: for example YunoHost Auto DNSValidity: UnlimitedRights: use the + button to add the following lines GET : /domain/zone/*POST : /domain/zone/*PUT : /domain/zone/*DELETE : /domain/zone/* You will obtain three tokens (an application key, a secret application key, and a consumer key) which should be used in YunoHost's configuration","keywords":"","version":"Next"},{"title":"Obtaining an API key from Namecheap","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/providers/registrar/namecheap","content":"Obtaining an API key from Namecheap See the API Documentation for reference. Login to your Namecheap account. Go to the Profile &gt; Tools menu. Scroll down to the Business &amp; Dev Tools section. Click on MANAGE next to Namecheap API Access. Toggle ON/OFF, read our Terms of Service, enter your account password. After enabling API access, you will be allotted an APIKey. Your Namecheap account username will act as API username. Your access to the API is authenticated using these elements.","keywords":"","version":"Next"},{"title":"DNS Configuration with OVH","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/providers/registrar/ovh/manualdns","content":"","keywords":"","version":"Next"},{"title":"Dynamic IP​","type":1,"pageTitle":"DNS Configuration with OVH","url":"/doc/pr-2672/en/admin/get_started/providers/registrar/ovh/manualdns#dynamic-ip","content":" General tutorial on dynamic IP.  You should follow this part if you have a dynamic IP.  Find out if your ISP provides you with a dynamic IP address here.  Let's create a DynHost id.  Follow this tutorial to install ddclient. ddclient will take care of telling OVH that the IP has changed. Then OVH will update the IP.  You need to add in the configuration file:  your login and password DynHostyour domain name  You should also check out OVH's guide on DynHost. ","version":"Next","tagName":"h3"},{"title":"Server providers","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/providers/servers","content":"","keywords":"","version":"Next"},{"title":"Pre-installed YunoHost Offers​","type":1,"pageTitle":"Server providers","url":"/doc/pr-2672/en/admin/get_started/providers/servers#pre-installed-yunohost-offers","content":" Alsace Réseau Neutre (VPS) FFDN CHATONSECOWAN (VPS)Hosterfy (VPS)Scaleway Dedibox (dedicated server)Numericoop (VPS) CHATONS  ","version":"Next","tagName":"h2"},{"title":"YunoHost IT outsourcing​","type":1,"pageTitle":"Server providers","url":"/doc/pr-2672/en/admin/get_started/providers/servers#yunohost-it-outsourcing","content":" ReflexLibre (France only) CHATONSNumericoop (France only) CHATONSLibrezo (France only) ","version":"Next","tagName":"h2"},{"title":"Why should you (not?) host yourself ?","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/why_should_you_not_host_yourself","content":"","keywords":"","version":"Next"},{"title":"Why should you host yourself ?​","type":1,"pageTitle":"Why should you (not?) host yourself ?","url":"/doc/pr-2672/en/admin/get_started/why_should_you_not_host_yourself#why-should-you-host-yourself-","content":" You believe in a free, open and decentralized internet. In a centralized internet, private companies and government can spy, analyze and influence people by dictating how they connect with each other, and by filtering content. YunoHost is developed by a community who believe in an open and decentralized internet, and we hope that you do, too! You want to have control of your data and services. Your pictures, chat messages, browsing history, and that text you are writing for school, have nothing to do on somebody else's server (a.k.a. The Cloud). They are part of your private life, but also part of your family's life, your friend's life, and so on. These data should be managed by you, not a random company in the US who wants your data to analyze them and sell the results. You want to learn about how computers and the Internet work. Operating your own server is a pretty good context to understand the basic mechanisms at the heart of operating systems and the Internet. You might have to deal with command line interface, network architecture, DNS configuration, SSH, and so on. You want to explore new possibilities and customize things. Ever dreamed of running a Minecraft server for you friends, or a persistent IRC or XMPP client? With your very own server, you can manually install and run virtually any program you want, and customize every bit.  ","version":"Next","tagName":"h2"},{"title":"Why should you not host yourself ?​","type":1,"pageTitle":"Why should you (not?) host yourself ?","url":"/doc/pr-2672/en/admin/get_started/why_should_you_not_host_yourself#why-should-you-not-host-yourself-","content":" Self-hosting requires some work and patience. Hosting yourself is a bit like growing your own garden or vegetables: it requires work and patience. While YunoHost aims to do all the hard work for you, self-hosting still requires that you take time to learn and configure a few things to setup your server properly. You will also need to perform maintenance tasks (such as upgrades) from time to time, or to ask for support if some things break. With great servers comes great responsibilities. Operating a server means that you are responsible for the data you are hosting. Nobody will be able to recover them for you if they get lost. YunoHost provides backup features, which you should use regularly to backup the configurations and data you care about. You should also keep an eye on security news and recommendations so that your server or critical data don't get compromised. Quality and performance probably won't be as good as premium services. YunoHost (and most of the applications packaged for it) are free and open-source software, developed by communities of people in their free time and on the basis of best effort. There is no absolute guarantee that software will work in every possible circumstance. The performance of your self-hosted server is also related to its CPU and RAM, and to the available internet connectivity. ","version":"Next","tagName":"h2"},{"title":"🐞 Troubleshooting","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/troubleshooting/","content":"🐞 Troubleshooting This section contains specific tips to troubleshoot common issues. If you are looking for help, consider having a look at the forum, the support chat room and the 'Help' page.","keywords":"","version":"Next"},{"title":"VPN providers","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/providers/vpn/","content":"","keywords":"","version":"Next"},{"title":"English-speaking sites​","type":1,"pageTitle":"VPN providers","url":"/doc/pr-2672/en/admin/get_started/providers/vpn/#english-speaking-sites","content":" VPN provider\tVPNClient compatibility\tIPv6\trDNS IPv4\trDNS IPv6\tPrice\tMembership\tNet NeutralityNeutrinet\t✔ (.cube + internetcube)\t✔\t✔\t✔\t~10€¹/month or 30€/year\tincluded\tFFDN Non Profit  ¹ Pay what you want  info If you try an other VPN provider that include public dedicated ipv4 and port forwarding, feel free to contribute to this documentation. We need people to test specific offers of those commercial providers: ✘ VPN area does not allow forwarding port 80. Running a webserver is against their TOS.Trust zonePureVPNRapidVPN  ","version":"Next","tagName":"h2"},{"title":"French-speaking sites​","type":1,"pageTitle":"VPN providers","url":"/doc/pr-2672/en/admin/get_started/providers/vpn/#french-speaking-sites","content":" Fournisseurs\tCompatibilité VPNClient\tIPv6\trDNS IPv4\trDNS IPv6\tPrix\tAdhésion\tNeutralité du netAquilenet\t✔ (.cube)\t✔\t✔\t✔\t3 à 5 / mois\t~15€¹ /an\tFFDN Non Profit Alsace Réseau Neutre\t✔ (.cube + internetcube)\t✔\t✔\t✔\t4 € (ou Ğ1) / mois\t15€ / an\tFFDN Non Profit Baionet\t✘ (wireguard)\t?\t?\t?\t2,5 € ou 5 € / mois\t5€ ou 40€ / an\tFFDN Non Profit FAImaison\t✔ (.cube)\t✘\t✔\t✘\tPrix libre\t8 ou 16€ / an\tFFDN Non Profit French Data Network\t✔ (.cube)\t✔\t✔\t✔\t6,5€ à 23€ / mois\t15 ou 30€ / an\tFFDN Non Profit Franciliens\t✔ (.cube + internetcube)\t✔\t✔\t✔\t4€ à 23€ / mois\t15€ / an\tFFDN Non Profit Grifon\t✔ (manuelle) + L2TP/IPSec\t✔\t✔\t✔\t5€ / mois\t15€ / an\tFFDN Non Profit Igwan.net\t✘ (L2TP/IPSec)\t?\t?\t?\t4 ou 8€ / mois\t? / an\tFFDN Non Profit Illyse\t✔ (manuelle)\t✔\t✔\t✔\t6 ou 8€ / mois\t20€ / an\tFFDN Non Profit ILOTH\t✔ (.cube)\t✘\t✔\t✘\t80€ / an\t5 à 100€ / an\tFFDN Non Profit Milkywan\t✔ (manuelle)\t✔\t✔\t✔\t5 € / mois\tincluse Mycélium\t✔ (manuelle)\t✘\t✘\t✘\tPrix libre\tincluse Réservé aux nordistes(FR 59)\tFFDN Non Profit Neutrinet\t✔ (.cube + internetcube)\t✔\t✔\t?\t~8 €¹ / mois\tincluse\tFFDN Non Profit Rézine\t✔ (manuelle)\t✔\t✔\t✔\t5 à 10€ / mois\tPrix libre\tFFDN Non Profit Swiss Neutral Network\t✔ (.cube)\t✔\t✔\t✔\t30.- CHF/mois\t50.- CHF / an Réservé aux suisses\tFFDN Non Profit Tetaneutral\t✘ (wireguard)\t?\t?\t?\t5€¹ / mois\t5 à 100€¹ / an\tFFDN Non Profit Touraine Data Network\t✔ (.cube + internetcube)\t✔\t?\t?\t5€ / mois\t10 à 20€ / an\tFFDN Non Profit  ¹ Prix libre  ","version":"Next","tagName":"h2"},{"title":"German-speaking sites​","type":1,"pageTitle":"VPN providers","url":"/doc/pr-2672/en/admin/get_started/providers/vpn/#german-speaking-sites","content":" VPN provider\tVPNClient compatibility\tIPv6\trDNS IPv4\trDNS IPv6\tPrice\tMembership\tNet NeutralityIn-Berlin\t✔ (manuelle)\t✔\t✔\t✔\t9 or 14€ / month\t20€ / an\tNon Profit ","version":"Next","tagName":"h2"},{"title":"Advantage of a VPN for self-hosting","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/get_started/providers/vpn/vpn_advantage","content":"","keywords":"","version":"Next"},{"title":"Advantages​","type":1,"pageTitle":"Advantage of a VPN for self-hosting","url":"/doc/pr-2672/en/admin/get_started/providers/vpn/vpn_advantage#advantages","content":" ","version":"Next","tagName":"h2"},{"title":"Plug & Play​","type":1,"pageTitle":"Advantage of a VPN for self-hosting","url":"/doc/pr-2672/en/admin/get_started/providers/vpn/vpn_advantage#plug--play","content":" By setting up a VPN on your server, you'll be able to make it accessible to the rest of the Internet without having to change the configuration of the router you connect it to. This can be really handy if you are going on vacation, moving or have an Internet disconnection, as you will be able to easily connect it to someone you trust without having to configure the router of the person who is helping you.  In the same way, you save yourself the trouble of opening your router's ports and bypassing hairpinning.  ","version":"Next","tagName":"h3"},{"title":"No micro DNS outages​","type":1,"pageTitle":"Advantage of a VPN for self-hosting","url":"/doc/pr-2672/en/admin/get_started/providers/vpn/vpn_advantage#no-micro-dns-outages","content":" If your Internet connection does not have a fixed public IP, you will be forced to set up a dynamic domain name (Dynamic DNS). This solution may be acceptable, but the DNS will only be updated at regular intervals (every two minutes if it is a noho.st or nohost.me domain name). So there is a chance that this will cause some display errors in the browser from time to time, or even that another site will be displayed (the risks are however reduced because the practice of self-hosting is not widespread).  With a neutral VPN, this problem is circumvented because the VPN can be compared to a Virtual Internet connection, which has its own fixed IPv4 address, so no need to update the domain name.  ","version":"Next","tagName":"h3"},{"title":"The case of email​","type":1,"pageTitle":"Advantage of a VPN for self-hosting","url":"/doc/pr-2672/en/admin/get_started/providers/vpn/vpn_advantage#the-case-of-email","content":" Email is one of the most complex protocols to self-host, usually it is what a user self-hosts last. Indeed, it is very easy to find yourself in a situation where emails sent by the server are refused by the recipient SMTP servers.  To avoid this you need to:  configure the reverse DNS of the server's Internet connection (or VPN)a fixed IPv4that this IPv4 is removable from all blacklists (notably the IP must not be on the DUL)to be able to open port 25 (as well as the other SMTP ports)  Unfortunately, none of the most common French ISPs respect all these points.  To overcome this, the use of a VPN respecting these points can be an alternative.  ","version":"Next","tagName":"h3"},{"title":"Trust​","type":1,"pageTitle":"Advantage of a VPN for self-hosting","url":"/doc/pr-2672/en/admin/get_started/providers/vpn/vpn_advantage#trust","content":" Finally, if you do not want the content of your server's communications to be spied on by equipment present on your ISP's network, you can use a VPN to encrypt your communications and deport your trust to a VPN provider. Remember, since 2015, the government officially deploys black boxes at the large network operators whose objective is to tap all French digital communications to preserve the scientific, economic and industrial interests of France.  ","version":"Next","tagName":"h3"},{"title":"Disadvantages​","type":1,"pageTitle":"Advantage of a VPN for self-hosting","url":"/doc/pr-2672/en/admin/get_started/providers/vpn/vpn_advantage#disadvantages","content":" ","version":"Next","tagName":"h2"},{"title":"Cost​","type":1,"pageTitle":"Advantage of a VPN for self-hosting","url":"/doc/pr-2672/en/admin/get_started/providers/vpn/vpn_advantage#cost","content":" A neutral VPN has a cost since the operator who provides it must run a server and use bandwidth. The prices of the FFDN's associative VPNs are around 6 € per month.  ","version":"Next","tagName":"h3"},{"title":"Packet path​","type":1,"pageTitle":"Advantage of a VPN for self-hosting","url":"/doc/pr-2672/en/admin/get_started/providers/vpn/vpn_advantage#packet-path","content":" When you set up a VPN on your server, if you don't set up any particular configuration, the transfer of a file from a computer on the local network to the server using the VPN, will go through the end of the VPN i.e. through the server of the VPN provider.  To solve this problem, there are two solutions:  transform the server into a router and connect the home equipments to it, these equipments will then benefit from the VPN confidentiality too.use the YunoHost server as a DNS resolver when you are at home, in order to redirect the server's domain names to the local IP rather than the public IP. This operation can be done either on each equipment or on the router (if the latter allows it). ","version":"Next","tagName":"h3"},{"title":"Unblacklisting forms","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/troubleshooting/blacklist_forms","content":"","keywords":"","version":"Next"},{"title":"Test your server​","type":1,"pageTitle":"Unblacklisting forms","url":"/doc/pr-2672/en/admin/troubleshooting/blacklist_forms#test-your-server","content":" To check your Email deliverability, YunoHost provide some tests avilables in the Diagnosis tool. This tools evalutes a lot of configuration and ip reputation points. It gives you also an indicator if some mails are blocked inside the mail queue (waiting to be sent). all the points evaluated by the well known mail-tester.com except for mail content (usefull if you prepare a newsletter).  However, if you have a doubt on the internal diagnosis results, you could check on external tools:  by sending an emails : Mail testerby providing the public ip : MultiRBL Valli or Whatismyip  ","version":"Next","tagName":"h2"},{"title":"Check your mail logs​","type":1,"pageTitle":"Unblacklisting forms","url":"/doc/pr-2672/en/admin/troubleshooting/blacklist_forms#check-your-mail-logs","content":" This command can help you to summarize which emails has been refused by other SMTP server and why.  cat /var/log/mail.log | grep &quot;deferred&quot; | sed -E &quot;s/(:[0-9][0-9]).+&lt;/\\1\\t/g&quot; | sed -E &quot;s/&gt;.+dsn/\\terror/g&quot; | sed -E &quot;s/, status=deferred \\(/ /g&quot; | sed -E &quot;s/\\)$//g&quot;   See the list of SMTP return code from wikipedia.  ","version":"Next","tagName":"h2"},{"title":"Untestable email providers​","type":1,"pageTitle":"Unblacklisting forms","url":"/doc/pr-2672/en/admin/troubleshooting/blacklist_forms#untestable-email-providers","content":" YunoHost is only able to test generic blacklist using the DNS RBL mechanism. However, Gmail, Microsoft, Yahoo or Free maintains their own blacklisting mechanism, so in some situation you may need to contact their teams through dedicated forms or use dedicated tools.  ","version":"Next","tagName":"h2"},{"title":"Microsoft​","type":1,"pageTitle":"Unblacklisting forms","url":"/doc/pr-2672/en/admin/troubleshooting/blacklist_forms#microsoft","content":" No way to test easily IP reputationMicrosoft guide for postmasterInformation about SMTP return code from MicrosoftReputation Management tools : Junk Email Reporting Program (JMRP)Smart Network Data Services (SNDS) Get support form for deliverability issues (Sadly you need a Microsoft account :/ )  ","version":"Next","tagName":"h3"},{"title":"Gmail​","type":1,"pageTitle":"Unblacklisting forms","url":"/doc/pr-2672/en/admin/troubleshooting/blacklist_forms#gmail","content":" No way to test easily IP reputationGoogle guide for postmasterInformation about SMTP return code from GoogleReputation Management tools : Google Postmaster ToolsGet support form for deliverability issues  ","version":"Next","tagName":"h3"},{"title":"Yahoo​","type":1,"pageTitle":"Unblacklisting forms","url":"/doc/pr-2672/en/admin/troubleshooting/blacklist_forms#yahoo","content":" No way to test easily IP reputationYahoo guide for postmasterInformation about SMTP return code from YahooReputation Management tools : Complaint Feedback LoopGet support form for deliverability issues  ","version":"Next","tagName":"h3"},{"title":"Free​","type":1,"pageTitle":"Unblacklisting forms","url":"/doc/pr-2672/en/admin/troubleshooting/blacklist_forms#free","content":" You can find a tool to test your IP, advices, explanation of error code and a way to contact Free on this page  ","version":"Next","tagName":"h3"},{"title":"Get alert about emails sent without SPF or DKIM​","type":1,"pageTitle":"Unblacklisting forms","url":"/doc/pr-2672/en/admin/troubleshooting/blacklist_forms#get-alert-about-emails-sent-without-spf-or-dkim","content":" If you use your own domains and think that some mails are sent by unauthorized servers (so without SPF/DKIM), you get report about this mail with.  _dmarc.DOMAIN 3600 IN TXT &quot;v=DMARC1; p=none; fo=1; rua=mailto:example@domain.tld!10m&quot;  ","version":"Next","tagName":"h2"},{"title":"Changing the administration password","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/troubleshooting/change_admin_password","content":"","keywords":"","version":"Next"},{"title":"Using the web administration interface​","type":1,"pageTitle":"Changing the administration password","url":"/doc/pr-2672/en/admin/troubleshooting/change_admin_password#using-the-web-administration-interface","content":" First, connect to your web administration.  Then go to Tools &gt; Change administration password.  ","version":"Next","tagName":"h2"},{"title":"Using the command line interface​","type":1,"pageTitle":"Changing the administration password","url":"/doc/pr-2672/en/admin/troubleshooting/change_admin_password#using-the-command-line-interface","content":" yunohost tools rootpw  ","version":"Next","tagName":"h2"},{"title":"Execute the basic-space-cleanup tool","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/troubleshooting/cleanup","content":"These are a few guidelines on how to perform some cleanup on the server, for instance when storage space becomes a bit short. Execute the basic-space-cleanup tool One may use the following command, to perform basic space cleanup (apt, journalctl, logs, ...) :sudo yunohost tools basic-space-cleanup Additional steps may be needed, to address current shortcomings : see a logs cleanup issue for instance.","keywords":"","version":"Next"},{"title":"IP address unban","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/troubleshooting/fail2ban","content":"","keywords":"","version":"Next"},{"title":"Unban an IP address​","type":1,"pageTitle":"IP address unban","url":"/doc/pr-2672/en/admin/troubleshooting/fail2ban#unban-an-ip-address","content":" To unblock an IP address, you must first access your server by some means (for example from another IP address or from another internet connection than the banned one).  Then, look at the Fail2Ban’s log to identify in which jail the IP address has been banned:  sudo tail /var/log/fail2ban.log 2019-01-07 16:24:47 fail2ban.filter [1837]: INFO [sshd] Found 11.22.33.44 2019-01-07 16:24:49 fail2ban.filter [1837]: INFO [sshd] Found 11.22.33.44 2019-01-07 16:24:51 fail2ban.filter [1837]: INFO [sshd] Found 11.22.33.44 2019-01-07 16:24:54 fail2ban.filter [1837]: INFO [sshd] Found 11.22.33.44 2019-01-07 16:24:57 fail2ban.filter [1837]: INFO [sshd] Found 11.22.33.44 2019-01-07 16:24:57 fail2ban.actions [1837]: NOTICE [sshd] Ban 11.22.33.44 2019-01-07 16:24:57 fail2ban.filter [1837]: NOTICE [recidive] Ban 11.22.33.44   Here, the 11.22.33.44 IP address has been banned in the sshd and recidive jails.  Then deban the IP address with the following commands:  sudo fail2ban-client set sshd unbanip 11.22.33.44 sudo fail2ban-client set recidive unbanip 11.22.33.44   ","version":"Next","tagName":"h2"},{"title":"Whitelist an IP address​","type":1,"pageTitle":"IP address unban","url":"/doc/pr-2672/en/admin/troubleshooting/fail2ban#whitelist-an-ip-address","content":" If you don’t want a &quot;legitimate&quot; IP address to be blocked by YunoHost anymore, then you have to fill it in the whitelist of the jail configuration file.  When updating the Fail2Ban software, the original /etc/fail2ban/jail.conf file is overwritten. So it is on a new dedicated file that we will store the changes. They will thus be preserved over time.  Start by creating the new jail configuration file which will be called yunohost-whitelist.conf: sudo touch /etc/fail2ban/jail.d/yunohost-whitelist.conf Edit this new file with your favorite editor: sudo nano /etc/fail2ban/jail.d/yunohost-whitelist.conf Paste the following content into the file and adapt the IP address XXX.XXX.XXX.XXX: [DEFAULT] ignoreip = 127.0.0.1/8 XXX.XXX.XXX.XXX #&lt;= the IP address (you can put more than one, separated by a space) that you want to whitelist Save the file and reload the Fail2Ban configuration: sudo fail2ban-client reload   Congratulations, no more risks of banning yourself from your own YunoHost server! ","version":"Next","tagName":"h2"},{"title":"Setting up IPv6","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/troubleshooting/ipv6","content":"","keywords":"","version":"Next"},{"title":"With a VPS from OVH​","type":1,"pageTitle":"Setting up IPv6","url":"/doc/pr-2672/en/admin/troubleshooting/ipv6#with-a-vps-from-ovh","content":" OVH gives one IPv4 address and one IPv6 address for VPS but by default, only IPv4 is OK. Please check The OVH documentation.  ","version":"Next","tagName":"h2"},{"title":"Configure the DNS server​","type":1,"pageTitle":"Setting up IPv6","url":"/doc/pr-2672/en/admin/troubleshooting/ipv6#configure-the-dns-server","content":" Also check the documentation for subdomains.  ","version":"Next","tagName":"h3"},{"title":"Configure the server​","type":1,"pageTitle":"Setting up IPv6","url":"/doc/pr-2672/en/admin/troubleshooting/ipv6#configure-the-server","content":" On the OVH panel, you will copy 3 elements:  the IPv6 addressthe IPv6 gateway addressthe IPv6 prefix. On OVH's VPS SSD, prefixes are /128 because you have only one IPv6 address.  On your VPS, create a backup of the network configuration with : cp /etc/network/interfaces ~/interfaces in home directory. Then, you can edit the configuration file (/etc/network/interfaces) with the following.  note In this example, it is assumed that your network interface is eth0. If it's different (check with ip a) you need to adapt the example below.  iface eth0 inet6 static address &lt;your IPv6 address&gt; netmask &lt;your IPv6 prefix&gt; post-up /sbin/ip -6 route add &lt;the IPv6 gateway&gt; dev eth0 post-up /sbin/ip -6 route add default via &lt;the IPv6 gateway&gt; dev eth0 pre-down /sbin/ip -6 route del default via &lt;the IPv6 gateway&gt; dev eth0 pre-down /sbin/ip -6 route del &lt;the IPv6 gateway&gt; dev eth0   Now, save the file and restart the network service with : service networking restart. (TODO : ideally we should find a way to validate the content of the configuration, otherwise it could fuck up the network stack and get disconnected from the VPS ?)  Check your configuration with these commands :  ip a to display network interfaces and addresseshostname -I to display the system IP addressestry to ping an IPv6 server (for example you can use ping6 ip6.yunohost.org)try to ping your server from your PC (assuming your PC has IPv6 enabled)  If it's ok, it's ok ! ","version":"Next","tagName":"h3"},{"title":"Get access back into YunoHost","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/troubleshooting/noaccess","content":"","keywords":"","version":"Next"},{"title":"You have access to the server with its local IP address, but not its domain name​","type":1,"pageTitle":"Get access back into YunoHost","url":"/doc/pr-2672/en/admin/troubleshooting/noaccess#you-have-access-to-the-server-with-its-local-ip-address-but-not-its-domain-name","content":" ","version":"Next","tagName":"h2"},{"title":"If you are self-hosted at home: fix ports forwarding​","type":1,"pageTitle":"Get access back into YunoHost","url":"/doc/pr-2672/en/admin/troubleshooting/noaccess#if-you-are-self-hosted-at-home-fix-ports-forwarding","content":" Check that you are getting access to the server by using its public IP (you can find at https://ip.yunohost.org. If this does not work:  Make sure you have set up forwardingSome ISP routers do not support hairpinning, which prevents you from reaching your server by its domain name from within your local network. If so, you can use a cellular connection, or tweak your hosts file on your computer to make it bind your domain name to the local IP address instead of the public one.  ","version":"Next","tagName":"h3"},{"title":"Configure DNS records​","type":1,"pageTitle":"Get access back into YunoHost","url":"/doc/pr-2672/en/admin/troubleshooting/noaccess#configure-dns-records","content":" tip This is not a problem if you are using a domain from nohost.me, noho.st or ynh.fr)  You have to configure your DNS records (at least A records, and AAAA if you have an IPv6 connection).  You can check that the DNS records are correct by comparing the results given by this service with the IP given by our service.  ","version":"Next","tagName":"h3"},{"title":"Other probable causes​","type":1,"pageTitle":"Get access back into YunoHost","url":"/doc/pr-2672/en/admin/troubleshooting/noaccess#other-probable-causes","content":" You domain noho.st, nohost.me, or ynh.fr is unreachable following a failure on YunoHost's infrastructure. Check the forum for announcements or people posting about the same issue.Your domain name may be expired. Check that on your registrar's client panel, or by using the command whois yourdomain.tld.You have a dynamic IP address. In that case, you need to set up a script or a client that takes care of regularly update it. Refer to the page on DNS with a dynamic IP to see how. You can also use a domain nohost.me, noho.st or ynh.fr that includes this features.  ","version":"Next","tagName":"h3"},{"title":"You are getting a certificate error that prevents you from reaching the webadmin​","type":1,"pageTitle":"Get access back into YunoHost","url":"/doc/pr-2672/en/admin/troubleshooting/noaccess#you-are-getting-a-certificate-error-that-prevents-you-from-reaching-the-webadmin","content":" A certificate error may be displayed if you have made a typo in the address bar of your browser. If you have just installed your server, or just installed a new domain, it uses a self-signed certificate. In that case, it is possible and understandable to add a temporary security exception so that you can install a Let's Encrypt certificate, provided you have a secure Internet connection.  ","version":"Next","tagName":"h2"},{"title":"You have access via SSH but not via the webadmin, or inversely​","type":1,"pageTitle":"Get access back into YunoHost","url":"/doc/pr-2672/en/admin/troubleshooting/noaccess#you-have-access-via-ssh-but-not-via-the-webadmin-or-inversely","content":" ","version":"Next","tagName":"h2"},{"title":"You are trying to log in with SSH as root instead of admin user​","type":1,"pageTitle":"Get access back into YunoHost","url":"/doc/pr-2672/en/admin/troubleshooting/noaccess#you-are-trying-to-log-in-with-ssh-as-root-instead-of-admin-user","content":" By default, SSH connection has to be made as admin. It possible to log into the server as root only from the local network of the server. If your server is a VPS, the web console or VNC provided by VPS providers may work.  If you are running yunohost commands in the CLI as admin, you have to call them with sudo before (for example sudo yunohost user list). You can also become root by running sudo su.  ","version":"Next","tagName":"h3"},{"title":"You have been temporarily banned​","type":1,"pageTitle":"Get access back into YunoHost","url":"/doc/pr-2672/en/admin/troubleshooting/noaccess#you-have-been-temporarily-banned","content":" Your YunoHost server includes a service, Fail2ban, which automatically bans IPs that fail several times in a row to log in. In some cases it can be software (e.g. Nextcloud client) that are confifured with an old password, or a user who has the same IP as you have.  If you have been banned while trying to access a web page, and only web pages are unreachable, you may have access to your server via SSH. Similarly, if you have been banned from SSH, webadmin access may work.  If you have been banned from both SSH and webadmin, you can try to reach your server through another IP address. For example through the cellular network of your phone, a VPN, Tor, or another proxy.  See also : unban an IP on Fail2Ban  note Ban are usually 10 to 12-minute-long, and on IPv4 only.  ","version":"Next","tagName":"h3"},{"title":"NGINX web server is broken​","type":1,"pageTitle":"Get access back into YunoHost","url":"/doc/pr-2672/en/admin/troubleshooting/noaccess#nginx-web-server-is-broken","content":" Maybe the NGINX web server is out of order. You can check that trough SSH with the command yunohost service status nginx. If it is failing, check that its configuration is correct by running nginx -t. If it is indeed broken, it may be due to the installation or removal of a low-quality app... If you need support, ask for it.  The NGINX or SSH servers may have been killed due to a lack of storage space, RAM, or swap.  Try restarting the service with systemctl restart nginx.You can check used storage with df -h. If one of your partitions is full, you need to identify what fills it and make room. You can use ncdu command (install it with apt install ncdu) to browse from the root directory: ncdu /You can check RAM and swap usage with free -h. Depending on the result, it may be necessary to optimize your server to use less RAM (removal of heavy or unused apps...), add more RAM or add a swap file.  ","version":"Next","tagName":"h3"},{"title":"Your server is reachable by IPv6, but not IPv4, or inversely​","type":1,"pageTitle":"Get access back into YunoHost","url":"/doc/pr-2672/en/admin/troubleshooting/noaccess#your-server-is-reachable-by-ipv6-but-not-ipv4-or-inversely","content":" You can check that by pinging it:  ping -4 yourdomain.tld # or its IPv4 ping -6 yourdomain.tld # or its IPv6   If one of the two is working, use it to connect by SSH or the webadmin.  If none are working, you need to resolv your connection issue. In some cases, an update of your router may have enabled IPv6 and DNS configuration may be disrupted.  ","version":"Next","tagName":"h3"},{"title":"Webadmin is working, but some web apps are returning 502 errors​","type":1,"pageTitle":"Get access back into YunoHost","url":"/doc/pr-2672/en/admin/troubleshooting/noaccess#webadmin-is-working-but-some-web-apps-are-returning-502-errors","content":" It is highly probable that the underlying service for these apps is failing (e.g. PHP apps requiring php7.0-fpm or php7.3-fpm). You can then try to restart the services, and/or ask for help  ","version":"Next","tagName":"h2"},{"title":"You have lost your admin password, or the password is seemingly wrong​","type":1,"pageTitle":"Get access back into YunoHost","url":"/doc/pr-2672/en/admin/troubleshooting/noaccess#you-have-lost-your-admin-password-or-the-password-is-seemingly-wrong","content":" If you can reach the webadmin login page (force reload with CTRL + F5 to be sure), and you cannot log in, your password is probably wrong.  If yoy are sure of your passord, it may be due to the slapd service failing. If that's the case, log into the server by SSH as root.  If your server is at home, you most likely have access to the local network. From this network, you can follow the SSH instructions`.If your server is a VPS, your provider may offer a web console.  Once logged in, you have to check the state of the service with yunohost service status slapd and/or reset your admin password with yunohost tools adminpw.  If this is still failing, on a VPS you may be able to reboot in rescue mode. Do not hesitate to ask for help  warning To be completed  ","version":"Next","tagName":"h2"},{"title":"Your VPN expired or does not connect any more​","type":1,"pageTitle":"Get access back into YunoHost","url":"/doc/pr-2672/en/admin/troubleshooting/noaccess#your-vpn-expired-or-does-not-connect-any-more","content":" If you have a VPN with fixed IP, maybe it has expired, or the provider's infrastructure is failing.  In that case, contact your VPN provider to renew it and update the parameters of the VPN Client app.  Meanwhile, try reaching your server if it is at home, by:  its local IP, retrievable from your router configuration panel or sudo arp-scan --localreaching it at yunohost.local, or yunohost-2.local, etc. depending on how many YunoHost servers are on your network.  warning To be completed  ","version":"Next","tagName":"h2"},{"title":"Your server does not boot​","type":1,"pageTitle":"Get access back into YunoHost","url":"/doc/pr-2672/en/admin/troubleshooting/noaccess#your-server-does-not-boot","content":" In some cases your server may be stuck at boot. It may come from a new, buggy, kernel. Try changing to another kernel on the boot screen (via VNC for VPS).  If you are in &quot;rescue&quot; mode with grub, it may be due a misconfiguration of grub, or a corrupted drive.  In that case, access the storage drive from another system (your provider's &quot;rescue&quot; mode, live USB drive, read the SD or drive on another computer) and try to check partitions integrity with smartctl, fsck, and mount.  If disks are corrupted or hard to mount, you have to save your data and maybe reformat, reinstall, and/or change the drive. If you succeed in mounting the drive, you can use systemd-nspawn to access its database.  Otherwise, run grub-update, grub-install again with chroot or with systemd-nspawn.  ","version":"Next","tagName":"h2"},{"title":"VNC or screen access does not work​","type":1,"pageTitle":"Get access back into YunoHost","url":"/doc/pr-2672/en/admin/troubleshooting/noaccess#vnc-or-screen-access-does-not-work","content":" It may be due hardware issue on your server, or with the hypervisor if it is on a VPS.  If you are renting your server, contact the support of your provider. Otherwise, try fixing your machine by replacing failing components. ","version":"Next","tagName":"h2"},{"title":"Custom certificates","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/tutorials/certificate_custom","content":"","keywords":"","version":"Next"},{"title":"Adding a signed certificate by an authority (other than Let's Encrypt)​","type":1,"pageTitle":"Custom certificates","url":"/doc/pr-2672/en/admin/tutorials/certificate_custom#adding-a-signed-certificate-by-an-authority-other-than-lets-encrypt","content":" After the certificate creation with your registration authority, you must have a private key, the key file, and a public certificate, the crt file.  warning Note that the key file is very sensitive, it is strictly personal and must be very well secured.  These two files should be copied to the server, if they are not already there.  scp CERTIFICATE.crt admin@DOMAIN.TLD:ssl.crt scp KEY.key admin@DOMAIN.TLD:ssl.key   From Windows, scp can be used with Putty, by downloading the tool pscp  pscp -P 22 CERTIFICATE.crt admin@DOMAIN.TLD:ssl.crt pscp -P 22 KEY.key admin@DOMAIN.TLD:ssl.key   As soon as the files are on the server, the rest of the work will be done on it. In ssh or locally. First, create a folder to store the obtained certificates.  sudo mkdir /etc/yunohost/certs/DOMAIN.TLD/ae_certs sudo mv ssl.key ssl.crt /etc/yunohost/certs/DOMAIN.TLD/ae_certs/   Then, go to the parent folder to continue.  cd /etc/yunohost/certs/DOMAIN.TLD/   As a caution, back up the certificates of origin from YunoHost.  sudo mkdir yunohost_self_signed sudo mv *.pem *.cnf yunohost_self_signed/   Depending on the registration authority, intermediate and root certificates must be obtained.  StartSSL​  sudo wget http://www.startssl.com/certs/ca.pem -O ae_certs/ca.pem sudo wget http://www.startssl.com/certs/sub.class1.server.ca.pem -O ae_certs/intermediate_ca.pem   Gandi​  sudo wget https://www.gandi.net/static/CAs/GandiStandardSSLCA2.pem -O ae_certs/intermediate_ca.pem   RapidSSL​  sudo wget https://knowledge.rapidssl.com/library/VERISIGN/INTERNATIONAL_AFFILIATES/RapidSSL/AR1548/RapidSSLCABundle.txt -O ae_certs/intermediate_ca.pem   Cacert​  sudo wget http://www.cacert.org/certs/root.crt -O ae_certs/ca.pem sudo wget http://www.cacert.org/certs/class3.crt -O ae_certs/intermediate_ca.pem   Intermediate and root certificates must be combined with the obtained certificate to create a unified certificate chain.  cat ae_certs/ssl.crt ae_certs/intermediate_ca.pem ae_certs/ca.pem | sudo tee crt.pem   The private key must be converted to .pem format.  sudo openssl rsa -in ae_certs/ssl.key -out key.pem -outform PEM   To ensure the certificates syntax, check the files contents.  cat crt.pem key.pem   The certificates and private key should look like this:  -----BEGIN CERTIFICATE----- MIICVDCCAb0CAQEwDQYJKoZIhvcNAQEEBQAwdDELMAkGA1UEBhMCRlIxFTATBgNV BAgTDENvcnNlIGR1IFN1ZDEQMA4GA1UEBxMHQWphY2NpbzEMMAoGA1UEChMDTExC MREwDwYDVQQLEwhCVFMgSU5GTzEbMBkGA1UEAxMSc2VydmV1ci5idHNpbmZvLmZy MB4XDTA0MDIwODE2MjQyNloXDTA0MDMwOTE2MjQyNlowcTELMAkGA1UEBhMCRlIx FTATBgNVBAgTDENvcnNlIGR1IFN1ZDEQMA4GA1UEBxMHQWphY2NpbzEMMAoGA1UE ChMDTExCMREwDwYDVQQLEwhCVFMgSU5GTzEYMBYGA1UEAxMPcHJvZi5idHNpbmZv LmZyMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDSUagxPSv3LtgDV5sygt12 kSbN/NWP0QUiPlksOkF2NkPfwW/mf55dD1hSndlOM/5kLbSBo5ieE3TgikF0Iktj BWm5xSqewM5QDYzXFt031DrPX63Fvo+tCKTQoVItdEuJPMahVsXnDyYHeUURRWLW wc0BzEgFZGGw7wiMF6wt5QIDAQABMA0GCSqGSIb3DQEBBAUAA4GBALD640iwKPMf pqdYtfvmLnA7CiEuao60i/pzVJE2LIXXXbwYjNAM+7Lov+dFT+b5FcOUGqLymSG3 kSK6OOauBHItgiGI7C87u4EJaHDvGIUxHxQQGsUM0SCIIVGK7Lwm+8e9I2X0G2GP 9t/rrbdGzXXOCl3up99naL5XAzCIp6r5 -----END CERTIFICATE-----   Finally, secure your certificate files.  sudo chown root:ssl-cert crt.pem key.pem sudo chmod 640 crt.pem key.pem sudo chown root:root -R ae_certs sudo chmod 600 -R ae_certs   Now the certificates (two files with the extension .pem) must be copied in /etc/yunohost/certs/DOMAIN.TLD.  cp ae_certs/*.pem ./   Reload NGINX configuration to take into account the new certificate.  sudo service nginx reload   Your certificate is ready. However, you can ensure that it is in place by testing the certificate using the geocerts. ","version":"Next","tagName":"h3"},{"title":"DNS with a dynamic IP","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/tutorials/domains/dns_dynamicip","content":"","keywords":"","version":"Next"},{"title":"Registrars​","type":1,"pageTitle":"DNS with a dynamic IP","url":"/doc/pr-2672/en/admin/tutorials/domains/dns_dynamicip#registrars","content":" Here are some examples of registrars, companies where you can buy domain names:  OVHGoDaddyGandiNamecheapBookMyName  If you own a domain name at OVH, you may go to step 4 and follow this tutorial, given that OVH proposes a DynDNS service.  1. Create an account to a Dynamic DNS service​  Here are sites which offer a DynDNS service free of charge:  DNSexitNo-IPChangeIPDynDNS.it (in italian, paid plan)DynDNS with your own domainDuck DNSydns.io  Register to one of them. It should provide you with one (or more) IP address to reach the service, and a login (that you may be able to self-define).  2. Move the DNS zones​  Copy the DNS zones, except for the NS fields, from the registrar where you bought your domain name from to the dynamic DNS service you registrer at in step 1.  3. Switch the management of your domain name to the dynamic DNS server​  This step consists in declaring to your registrar that the DNS service will now be managed by the DynDNS service provider.  For this, first declare in the NS field(s) the IP address provided by the DynDNS service.  Then, remove any other item in the DNS zones (except the previous NS fields), from the registrar.  4. Configure the client​  This client could be your ISP-box, or a package installed on your server, such as ddclient. Here, we will use the client provided by the box, which is the more easy way.  Enter the login of the dynamic DNS and its public IP address in your box (interface details may vary by ISP).    You're good to go ! ","version":"Next","tagName":"h3"},{"title":"Local network access to your server","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/tutorials/domains/dns_local_network","content":"","keywords":"","version":"Next"},{"title":"Find the local IP address of your server​","type":1,"pageTitle":"Local network access to your server","url":"/doc/pr-2672/en/admin/tutorials/domains/dns_local_network#find-the-local-ip-address-of-your-server","content":" First you need to find out the local IP of your server  either using the tricks listed hereor if in the webadmin, in the Diagnosis section, under Internet Connectivity, IPv4, click on 'Details' and you should find an entry for 'Local IP'or using the command line on the server : hostname -I  ","version":"Next","tagName":"h3"},{"title":"Configure DNS on your Internet router​","type":1,"pageTitle":"Local network access to your server","url":"/doc/pr-2672/en/admin/tutorials/domains/dns_local_network#configure-dns-on-your-internet-router","content":" The goal here is to create a network wide redirection handled by your router. The idea is to create a DNS redirection to your server's IP. You should access your router's configuration and look for DNS configuration, then add a redirection to your server's IP (e.g. redirect yunohost.local to 192.168.1.21).  ","version":"Next","tagName":"h2"},{"title":"SFR Box​","type":1,"pageTitle":"Local network access to your server","url":"/doc/pr-2672/en/admin/tutorials/domains/dns_local_network#sfr-box","content":" If you haven't found your server private IP, you may find it using the SFR box admin panel: Go to Network tab &gt; General    Configure SFR box's DNS​  Go to Network tab &gt; DNS and add your domain name to the box's DNS.    ","version":"Next","tagName":"h3"},{"title":"Configure hosts file on client workstation​","type":1,"pageTitle":"Local network access to your server","url":"/doc/pr-2672/en/admin/tutorials/domains/dns_local_network#configure-hosts-file-on-client-workstation","content":" Modifying hosts file should be done only if you cannot alter your box's DNS or router, because hosts file will only impact the workstation where the file was modified.  Windows hosts file is located at:%SystemRoot%\\system32\\drivers\\etc\\ You MUST activate hidden and system file display to see the hosts file. UNIX systems (GNU/Linux, macOS) hosts file is located at:/etc/hosts You MUST have root privileges to modify the file.  Add a line at the end of the file containing your server private IP followed by a space and your domain name  192.168.1.62 domain.tld  ","version":"Next","tagName":"h2"},{"title":"Nohost.me domains","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/tutorials/domains/dns_nohost_me","content":"","keywords":"","version":"Next"},{"title":"Subdomains​","type":1,"pageTitle":"Nohost.me domains","url":"/doc/pr-2672/en/admin/tutorials/domains/dns_nohost_me#subdomains","content":" The nohost.me, noho.st and ynh.fr domain service allows the creation of subdomains.  YunoHost allows the installation of applications on subdomains (for example, having the Nextcloud application accessible from the cloud.mydomain.org address), this feature is also allowed with the nohost.me, noho.st and ynh.fr domains and so it is possible to have a subdomain such as my.application.mydomain.nohost.me. To create a subdomain on nohost.me, noho.st and ynh.fr, you just have to add the subdomain to YunoHost like any other domains.  ","version":"Next","tagName":"h3"},{"title":"Adding a nohost.me, noho.st or ynh.fr domain after the post-installation​","type":1,"pageTitle":"Nohost.me domains","url":"/doc/pr-2672/en/admin/tutorials/domains/dns_nohost_me#adding-a-nohostme-nohost-or-ynhfr-domain-after-the-post-installation","content":" If you already did the postinstall and want to add an automatic domain, you may do so from the &quot;Domains&quot; web interface, selecting the option &quot;I don't have a domain name...&quot;  Alternatively, the following commands can be used.  # Add the domain yunohost domain add whateveryouwant.nohost.me # Subscribe/register to the dyndns service yunohost dyndns subscribe -d whateveryouwant.nohost.me # [ wait ~ 30 seconds ] # Update the DNS conf yunohost dyndns update # Set it as the main domain yunohost domain main-domain -n whateveryouwant.nohost.me   ","version":"Next","tagName":"h3"},{"title":"Retrieve a nohost.me, noho.st or ynh.fr domain​","type":1,"pageTitle":"Nohost.me domains","url":"/doc/pr-2672/en/admin/tutorials/domains/dns_nohost_me#retrieve-a-nohostme-nohost-or-ynhfr-domain","content":" If you reinstall your server and want to use a domain already used previously, you must request a domain reset on the forum in the dedicated thread.  ","version":"Next","tagName":"h3"},{"title":"Change a nohost.me, noho.st or ynh.fr domain​","type":1,"pageTitle":"Nohost.me domains","url":"/doc/pr-2672/en/admin/tutorials/domains/dns_nohost_me#change-a-nohostme-nohost-or-ynhfr-domain","content":" If you wish to use a different automatic domain, you first have to remove your present domain registration. This is done in 3 steps:  Remove the domain from your instance (via webadmin or the yunohost domain remove in the CLI).Ask for registration removal in the dedicated forum thread.Remove automatic domain configuration files on your server, via CLI only: sudo rm /etc/cron.d/yunohost-dyndns &amp;&amp; sudo rm -r /etc/yunohost/dyndns  You may then add a new domain. ","version":"Next","tagName":"h3"},{"title":"DNS and subdomains for the applications","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/tutorials/domains/dns_subdomains","content":"","keywords":"","version":"Next"},{"title":"Subdomains​","type":1,"pageTitle":"DNS and subdomains for the applications","url":"/doc/pr-2672/en/admin/tutorials/domains/dns_subdomains#subdomains","content":" YunoHost allows the use of subdomains. If one owns a domain name mydomain.com, one first needs to create the subdomains in the DNS configuration (with one's registrar like Gandi).  ","version":"Next","tagName":"h3"},{"title":"Configuration example with Gandi​","type":1,"pageTitle":"DNS and subdomains for the applications","url":"/doc/pr-2672/en/admin/tutorials/domains/dns_subdomains#configuration-example-with-gandi","content":" The DNS configuration needs an A record with an IPv4 address, an AAAA record with an IPv6 address, and various CNAME records, one for each desired subdomain.  If your DNS configuration looks like:  @ A XYZ.XYZ.XYZ.XYZ @ AAAA 1234:1234:1234:FFAA:FFAA:FFAA:FFAA:AAFF * CNAME mydomain.com. agenda CNAME mydomain.com. blog CNAME mydomain.com. rss CNAME mydomain.com.   then you can access agenda.mydomain.com, blog.mydomain.com and rss.mydomain.com subdomains.  ","version":"Next","tagName":"h3"},{"title":"Install an application on a subdomain​","type":1,"pageTitle":"DNS and subdomains for the applications","url":"/doc/pr-2672/en/admin/tutorials/domains/dns_subdomains#install-an-application-on-a-subdomain","content":" To install an application on a subdomain in YunoHost, for example blog.mydomain.com, the configuration is done in the administration panel. One first add the subdomain to the available domains list. The creation of a subdomain in YunoHost will create the corresponding configuration files for NGINX (the web server used in YunoHost).  Then, in the applications&gt;install panel, one follows the classic installation process by choosing the desired subdomain as domain (for example blog.mydomain.com). One needs to choose the path / (in place of /wordpress for example). A warning message will appear telling that it won't be possible to install other application to this subdomain. After validation, the installation starts.  The application is then available at blog.mydomain.com (and not mydomain.com/wordpress).  ","version":"Next","tagName":"h3"},{"title":"Moving an application to a subdomain​","type":1,"pageTitle":"DNS and subdomains for the applications","url":"/doc/pr-2672/en/admin/tutorials/domains/dns_subdomains#moving-an-application-to-a-subdomain","content":" What happens if the application is already installed? For example, one wants to move mydomain.com/wordpress to blog.mydomain.com. It depends on the application. Some applications allow the change of domain. In that case, one can proceed to the change through the administration panel: Applications &gt; the_app_name &gt; change URL. If the application doesn't allow URL change, then there is no easy way to do it. The best solution is to reinstall the application.  ","version":"Next","tagName":"h3"},{"title":"Reinstalling an application​","type":1,"pageTitle":"DNS and subdomains for the applications","url":"/doc/pr-2672/en/admin/tutorials/domains/dns_subdomains#reinstalling-an-application","content":" First, save the application data through the backup process. Then uninstall the application with the administration panel. Then reinstall the application to the desired domain. Finally, restore the backup. ","version":"Next","tagName":"h3"},{"title":"Configure SMTP relay","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/tutorials/email_configure_relay","content":"","keywords":"","version":"Next"},{"title":"What is an SMTP relay?​","type":1,"pageTitle":"Configure SMTP relay","url":"/doc/pr-2672/en/admin/tutorials/email_configure_relay#what-is-an-smtp-relay","content":" An SMTP relay is basically a third party hosted SMTP server that will send emails on behalf of your own SMTP server (Postfix service on YunoHost). Once setup correctly on YunoHost, its operation is transparent, both for you and for your correspondents: they will see emails as coming from your YunoHost main URL, but all the sending will be delegated to the SMTP relay you have chosen and configured.  ","version":"Next","tagName":"h2"},{"title":" Disadvantages of SMTP relays​","type":1,"pageTitle":"Configure SMTP relay","url":"/doc/pr-2672/en/admin/tutorials/email_configure_relay#-disadvantages-of-smtp-relays","content":" It's important to note that using an SMTP relay has to be seen as a (big) compromise in the world of self-hosting. Indeed, when using an SMTP relay, not only a third party sends emails on your behalf, but it has full access to the content of all the emails you'll send and can also possibly modify them (For example, by default, MailJet rewrites the html hyperlinks contained in your emails, in order to track the activity of your correspondents). Be also aware that an SMTP relay is setup for your whole YunoHost server: you can't choose which emails or which users go through it because all future emails will.  Beyond the privacy considerations above, an SMTP relay can impose technical limitations that one would not have if port 25 was open. For example, with most relays, if a user of your YunoHost server declares an external &quot;forwarding address&quot; in order to automatically forward messages received on your YunoHost server to another mailbox, such forwarding will not work for emails originating from outside your server, without any warning. Indeed, relays generally require that the messages they forward have a sender address from your domain (to fight spam and preserve the reputation of their services), which is not the case for an &quot;automatic forward&quot; where the original sender of the mail is kept; the message is then blocked by the relay (which, normally, warns your YunoHost admin, but only afterwards)  ","version":"Next","tagName":"h2"},{"title":"How to use an SMTP relay with YunoHost?​","type":1,"pageTitle":"Configure SMTP relay","url":"/doc/pr-2672/en/admin/tutorials/email_configure_relay#how-to-use-an-smtp-relay-with-yunohost","content":" YunoHost has a built-in SMTP relay configuration, available from version 4.1. That configuration is not yet available from the admin web interface, though. You will have to use the command line interface.  ","version":"Next","tagName":"h2"},{"title":"Step 1: Register with an SMTP relay provider​","type":1,"pageTitle":"Configure SMTP relay","url":"/doc/pr-2672/en/admin/tutorials/email_configure_relay#step-1-register-with-an-smtp-relay-provider","content":" Many providers exist. Some have free plans with or without limitations, it's up to you. As written above, you have to be careful with your choice as you will basically handover all your emails to that third party. Whether you can trust it or not, that's your call!  ","version":"Next","tagName":"h3"},{"title":"Step 2: Setup your DNS records correctly​","type":1,"pageTitle":"Configure SMTP relay","url":"/doc/pr-2672/en/admin/tutorials/email_configure_relay#step-2-setup-your-dns-records-correctly","content":" Once registered, the SMTP relay provider will usually ask you to modify your DNS. Standard procedure is to add a DKIM key and a SPF key to your DNS records. The way to modify these records and the value of the keys you'll have to add depend both on your domain name provider and SMTP relay provider.  Usually, the SMTP relay provider will provide you with a guide on how to modify these records, together with an automatic check tool that will tell you when your DNS have been setup correctly. That step is mandatory to prove &quot;the world&quot; that you, owner of your domain name, did explicitly authorize your SMTP relay provider to send emails on your behalf.  Please note that modifying your DNS records could sometimes take over 24h to take effect, so be patient!  warning From now on, a non trusty SMTP relay provider could send emails from your main domain without telling you.  ","version":"Next","tagName":"h3"},{"title":"Step 3: Setup YunoHost correctly​","type":1,"pageTitle":"Configure SMTP relay","url":"/doc/pr-2672/en/admin/tutorials/email_configure_relay#step-3-setup-yunohost-correctly","content":" It can be configured either from the webadmin or the command line.  From the web interfaceFrom the command line Go to your web admin, in Tools &gt; Yunohost Settings and Email. Now set all options requests : SMTP relay host : SMTP server url.SMTP relay port : Port use with the distant server.SMTP relay user : Login or identification mail server.SMTP relay password : Your SMTP relay password. warning Password with # char won't works properly due to postfix limitation (it's possible other chars are forbidden, don't hesitate to report it to update this doc).  Your SMTP relay is now configured!  warning From now on, a non trusty SMTP relay provider could read or use the data of all the emails you send without telling you (but still won't be able to read nor to use the data from emails you receive).  Relay all emails, even those from domains managed by YunoHost​  If you have plenty of trust in your SMTP relay, have a second IMAP server that you wish or are forced to use instead of the YunoHost one, you can choose to relay all emails even those from domain names managed by YunoHost by commenting the following two lines in /etc/postfix/main.cf :  #virtual_mailbox_domains = ldap:/etc/postfix/ldap-domains.cf #virtual_alias_maps = ldap:/etc/postfix/ldap-aliases.cf,ldap:/etc/postfix/ldap-groups.cf   ","version":"Next","tagName":"h3"},{"title":"Step 4: Check your setup​","type":1,"pageTitle":"Configure SMTP relay","url":"/doc/pr-2672/en/admin/tutorials/email_configure_relay#step-4-check-your-setup","content":" You can check your setup by sending emails and try if everything works. Some of the SMTP relay will give you insights about the emails you send so that can also be a good way to check that everythings works as needed. Of course, you can always have a try with mail-tester.com to check for any problem or discrepancy. ","version":"Next","tagName":"h3"},{"title":"Exchange files with your server using a graphical interface","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/tutorials/filezilla","content":"","keywords":"","version":"Next"},{"title":"Download and install FileZilla​","type":1,"pageTitle":"Exchange files with your server using a graphical interface","url":"/doc/pr-2672/en/admin/tutorials/filezilla#download-and-install-filezilla","content":" Get the client from the download page. It should automatically detect the version needed for your computer. Otherwise, follow the instructions to install the client  Install the program and run Filezilla.  ","version":"Next","tagName":"h2"},{"title":"Configuration​","type":1,"pageTitle":"Exchange files with your server using a graphical interface","url":"/doc/pr-2672/en/admin/tutorials/filezilla#configuration","content":" Click the Site Manager icon in the upper left to begin. Click New Site and give a name the server you will be using : Family here. Fill the settings as on the screenshot (replace the server address with your own and leave the port field empty unless you changed your SSH port number, in which case use this port number), and click on Connect. (N.B. : if you want to interact with the custom webapp files, you should use a different user than admin. Refer to the custom webapp documentation.) You will get a warning as you connect for the first time to the server. You can ignore it safely the first time you get it. Filezilla is now asking the admin password to connect to your server. Once bookmarked, your server will be backup up and you will get this screen.  ","version":"Next","tagName":"h2"},{"title":"Usage​","type":1,"pageTitle":"Exchange files with your server using a graphical interface","url":"/doc/pr-2672/en/admin/tutorials/filezilla#usage","content":" Connect to the Site created previously. Your passwork might be asked again The left panel corresponds to your computer. The right panel corresponds to your remote YunoHost server. You can browse folders and drag-and-drop files between the two panels. In the right panel, you can browse to /home/yunohost.backup/archives/ to find backup archives. warning Be sure to download both the .tar.gz and .json files.    Sources  Official documentationGeneral tutorial about using FileZilla  ","version":"Next","tagName":"h2"},{"title":"Alternatives to Filezilla​","type":1,"pageTitle":"Exchange files with your server using a graphical interface","url":"/doc/pr-2672/en/admin/tutorials/filezilla#alternatives-to-filezilla","content":" ","version":"Next","tagName":"h2"},{"title":"GNU/Linux​","type":1,"pageTitle":"Exchange files with your server using a graphical interface","url":"/doc/pr-2672/en/admin/tutorials/filezilla#gnulinux","content":" From any recent GNU/Linux, you should be able to use the file manager to reach your server.  Nautilus from Gnome3 and Dolphin from KDE have features similar to FileZilla, out of the box.  Nautilus ConnectDolphinTutorial for Nautilus and SFTP  ","version":"Next","tagName":"h3"},{"title":"Windows​","type":1,"pageTitle":"Exchange files with your server using a graphical interface","url":"/doc/pr-2672/en/admin/tutorials/filezilla#windows","content":" WinSCP is also a nice candidate for Windows  ","version":"Next","tagName":"h3"},{"title":"macOS​","type":1,"pageTitle":"Exchange files with your server using a graphical interface","url":"/doc/pr-2672/en/admin/tutorials/filezilla#macos","content":" Cyberduck is a free software available on macOS ","version":"Next","tagName":"h3"},{"title":"Moving an app folder to a different storage","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/tutorials/moving_app_folder","content":"Moving an app folder to a different storage Applications folder are (usually) located in /var/www/$appname If an application folder is expected to get bigger because of the amount of data it contains, it might be relevant to move it to another storage (like an external hard drive). Here's a summary of how to do this the application wordpress. Here, is is assumed thatyou already mounted the external hard-drive. 1. Move the entire wordpress folder to an external hard drive​ mv /var/www/wordpress /media/externalharddrive/ 2. Create a symbolic link​ So that programs looking for files in /var/www/wordpress will actually take them from the harddrive ln -s /media/externalharddrive/wordpress /var/www/wordpress 3. Tweak permissions (maybe?)​ After this, note that you may need to tweak the permissions of /media/externalharddrive so that www-data (or the user corresponding to the app) is able to read through the folder... Something like : chgrp www-data /media/externalharddrive chmod g+rx /media/externalharddrive (but it depends on your exact setup... Please update this doc page if you figure out what to do exactly)","keywords":"","version":"Next"},{"title":"Adding an external storage to your server","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/tutorials/external_storage","content":"","keywords":"","version":"Next"},{"title":"Introduction​","type":1,"pageTitle":"Adding an external storage to your server","url":"/doc/pr-2672/en/admin/tutorials/external_storage#introduction","content":" Apart from the monitoring system that ensures that your system's partitions are not too small, YunoHost does not currently deal with the organisation of your partitions and disks.  If you are hosting on an ARM card with an SD card or on a server with a small SSD drive, you may, for reasons of reliability or lack of space, want to add a drive or drives to your server.  warning If you have no space left on your server at all, you can now type apt clean to try and save some space while you clean up or follow the steps below.  Below you will find explanations on how to move your data to a hard disk in a correct way with a minimum of impact on the functioning of YunoHost. This operation can be done during installation or, afterwards, when your storage needs have increased or when you no longer trust your SD card.  tip The method presented here will first mount the single partition of the hard disk, then use one or more sub-folders of this disk to create different mount points on your system tree. This method is preferable to the use of symbolic links, as the latter may interfere with some applications including the YunoHost backup system. You could also choose to mount partitions rather than subfolders, but it is sometimes difficult to estimate the weight of a folder in advance.  ","version":"Next","tagName":"h2"},{"title":" Prerequisites​","type":1,"pageTitle":"Adding an external storage to your server","url":"/doc/pr-2672/en/admin/tutorials/external_storage#-prerequisites","content":" Have some time at a moment when your server users can accept a shutdown. The steps to be performed, even if they are relatively simple, can sometimes seem technical and require in any case to take your time. Know how to connect as root on your system, for example via SSH. (Note: while logged in as admin, you can root with sudo su) Know the basic commands cd, ls, mkdir, rm. Have a backup in case things don't work out as planned Have extra storage (SSD, hard drive, USB stick) connected to your server via USB or SATA  ","version":"Next","tagName":"h2"},{"title":"1. Identify directories to be moved​","type":1,"pageTitle":"Adding an external storage to your server","url":"/doc/pr-2672/en/admin/tutorials/external_storage#1-identify-directories-to-be-moved","content":" The ncdu / command allows you to browse the folders on your server to see how big they are.  Below is an explanation of some of the paths that can take up weight with some comments to help you reduce their weight or choose to move them.  Paths\tContents\tTips/home\tUser folders accessible via SFTP\tMoveable to a hard disk /home/yunohost.backup\tYunoHost's backups\tDepending on your backup strategy, you may want to place this folder on a separate drive from your data or databases. /home/yunohost.app\tHeavy data from YunoHost applications (nextcloud, matrix...)\tMoveable to a hard disk /home/yunohost.multimedia\tHeavy data shared between several applications\tMoveable to a hard disk /var/lib/mysql\tDatabase used by applications\tIdeally leave on SSD for performance reasons /var/lib/postgresql\tDatabase used by applications\tIdeally leave on SSD for performance reasons /var/mail\tUser e-mails\tMovable to a hard disk /var/www\tProgram of installed web applications\tIdeally leave on SSD for performance reasons /var/log\tEvent logs (pages consulted, connection attempts, hardware errors...).\tThis directory should not take up too much space, if it grows quickly, it may be a looping error that should be resolved. /opt\tProgram and dependency of some YunoHost applications.\tIdeally leave it on the SSD for performance reasons. For nodejs applications it is possible to do some cleanup of unused versions. /boot\tKernels and boot files\tDo not move unless you know what you are doing. It can happen that too many kernels are kept, it is possible to do some cleanup.  ","version":"Next","tagName":"h2"},{"title":"2. Connect and identify the disk​","type":1,"pageTitle":"Adding an external storage to your server","url":"/doc/pr-2672/en/admin/tutorials/external_storage#2-connect-and-identify-the-disk","content":" Start by connecting your disk to your system. You must then identify the name under which the disk is designated by the system.  To do this, use the command :  lsblk   It may return something like :  NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT sda 8:0 0 931.5G 0 disk └─sda1 8:1 0 931.5G 0 part mmcblk0 179:0 0 14.9G 0 disk ├─mmcblk0p1 179:1 0 47.7M 0 part /boot └─mmcblk0p2 179:2 0 14.8G 0 part /   Here, mmcblk0 corresponds to a 16GB SD card (you can see that the mmcblk0p1 and mmcblk0p2 partitions correspond to the /boot partition and the / system partition). The hard drive connected corresponds to sda which is about 1TB, and contains a single sda1 partition which is not mounted (no &quot;MOUNTPOINT&quot;).  warning On another system, it may be that your system is installed on sda and your disk is then sdb for example.  tip If the size of the disk is not enough for you to recognise it, you can unplug the disk, run the lsblk command, then plug the disk back in, run lsblk and deduce the differences.  ","version":"Next","tagName":"h2"},{"title":"3. (Optional) Format the disk​","type":1,"pageTitle":"Adding an external storage to your server","url":"/doc/pr-2672/en/admin/tutorials/external_storage#3-optional-format-the-disk","content":" This operation is optional if your disk is already formatted with a file system supported by linux (so not NTFS or FAT32).  Let's create a partition on the disk:  fdisk /dev/YOUR_DISK   then enter n, p, 1, Enter, Enter, and w successively to create a new partition.  Check with lsblk that you have your disk containing a single partition.  Before you can use your disk, it must be formatted.  warning **Formatting a disk means deleting all the data on it! Be careful not to get the name wrong, as this may result in formatting a different disk than the one you want! In the example given earlier, it was /dev/sda. If your disk is already &quot;clean&quot;, you can skip this step.  To format the :  mkfs.ext4 /dev/YOUR_DISK1 # then 'y' to validate   Replace YOUR_DISK1 with the name of the first partition on the disk e.g. sda1.  tip It is possible to adapt this step, for example to create a raid 1 volume (mirrored disks) or encrypt the folder.  ","version":"Next","tagName":"h2"},{"title":"4. Mount the disk​","type":1,"pageTitle":"Adding an external storage to your server","url":"/doc/pr-2672/en/admin/tutorials/external_storage#4-mount-the-disk","content":" Unlike Windows where disks are accessed with letters (C:/), under Linux, disks are made accessible via the file tree. &quot;Mounting&quot; a disk means making it effectively accessible in the file tree. We will arbitrarily choose to mount the disk in /mnt/hdd but you can name it differently (e.g. /mnt/disk ...).  Let's start by creating the directory :  mkdir /mnt/hdd   Then we can mount the disk manually with :  mount /dev/YOUR_DISK1 /mnt/hdd   (Here, /dev/YOUR_DISK1 corresponds to the first partition on the disk)  ","version":"Next","tagName":"h2"},{"title":"5. Mount a /mnt/hdd folder on one of the folders you want to move data from​","type":1,"pageTitle":"Adding an external storage to your server","url":"/doc/pr-2672/en/admin/tutorials/external_storage#5-mount-a-mnthdd-folder-on-one-of-the-folders-you-want-to-move-data-from","content":" Here we will consider that you want to move the big data of the applications which are in /home/yunohost.app and the mails on your hard disk.  ","version":"Next","tagName":"h2"},{"title":"5.1 Creating subfolders on the disk​","type":1,"pageTitle":"Adding an external storage to your server","url":"/doc/pr-2672/en/admin/tutorials/external_storage#51-creating-subfolders-on-the-disk","content":" To begin with, we create a folder on the hard drive  mkdir -p /mnt/hdd/home/yunohost.app mkdir -p /mnt/hdd/var/mail   ","version":"Next","tagName":"h3"},{"title":"5.2 Switching to maintenance mode​","type":1,"pageTitle":"Adding an external storage to your server","url":"/doc/pr-2672/en/admin/tutorials/external_storage#52-switching-to-maintenance-mode","content":" Then, ideally, we switch to maintenance mode the applications that might be writing data.  Example, for nextcloud:  sudo -u nextcloud /usr/bin/php /var/www/nextcloud/occ maintenance:mode --on   Example, for mail:  systemctl stop postfix systemctl stop dovecot   warning If you wish to move databases such as mariadb (mysql), it is imperative that you stop the services for these databases otherwise it is almost certain that your data will be corrupted.  ","version":"Next","tagName":"h3"},{"title":"5.3 Creating the mount points​","type":1,"pageTitle":"Adding an external storage to your server","url":"/doc/pr-2672/en/admin/tutorials/external_storage#53-creating-the-mount-points","content":" Next, we will rename the original folder and create an empty eponymous folder.  mv /home/yunohost.app /home/yunohost.app.bkp mkdir /home/yunohost.app mv /var/mail /var/mail.bkp mkdir /var/mail   We can then use the mount --bind command to mount the folder on our hard drive to the new empty location in the tree.  mount --bind /mnt/hdd/home/yunohost.app /home/yunohost.app mount --bind /mnt/hdd/var/mail /var/mail   ","version":"Next","tagName":"h3"},{"title":"5.4 Copying the data​","type":1,"pageTitle":"Adding an external storage to your server","url":"/doc/pr-2672/en/admin/tutorials/external_storage#54-copying-the-data","content":" Next, we copy the data, keeping all the folder and file properties. This operation can take a little time, with another terminal, you can control the evolution by observing the weight associated with the mount point with df -h  cp -a /home/yunohost.app.bkp/. /home/yunohost.app/ cp -a /var/mail.bkp/. /var/mail/   Once this is done, check with ls that the contents are there:  ls -la /home/yunohost.app/ ls -la /var/mail/   ","version":"Next","tagName":"h3"},{"title":"5.5 Exiting maintenance mode​","type":1,"pageTitle":"Adding an external storage to your server","url":"/doc/pr-2672/en/admin/tutorials/external_storage#55-exiting-maintenance-mode","content":" From here you can stop maintenance mode, the command below is to be adapted depending on the services you have stopped.  sudo -u nextcloud /usr/bin/php /var/www/nextcloud/occ maintenance:mode --off systemctl start postfix systemctl start dovecot   From this point on, your services are running with their data on disk, so it's time to test to see how much of an impact this has on performance (especially if you are using USB 2.0).  ","version":"Next","tagName":"h3"},{"title":"6. Automatically mount on boot​","type":1,"pageTitle":"Adding an external storage to your server","url":"/doc/pr-2672/en/admin/tutorials/external_storage#6-automatically-mount-on-boot","content":" So far we have manually mounted the disk and subfolders. However, it is necessary to configure the system to automatically mount the disk after a boot.  If your tests are successful, you should keep the mount points, otherwise you should hurry up and go back to maintenance first.  To begin with, let's find the UUID (universal identifier) of our disk with :  lsblk -f   Let's add a line to the /etc/fstab file that handles the mounting of disks at boot time. So we open the file with nano :  nano /etc/fstab   Then add these lines to the end of the file:  UUID=&quot;cea0b7ae-2fbc-4f01-8884-3cb5884c8bb7&quot; /mnt/hdd ext4 defaults,nofail 0 0 /mnt/hdd/home/yunohost.app /home/yunohost.app none defaults,bind 0 0 /mnt/hdd/var/mail /var/mail none defaults,bind 0 0   (this line must be adapted according to the previous information and choices)  Use Ctrl+X then y to save.  You can then try rebooting the system to check if the disk and subfolders are mounted automatically.  ","version":"Next","tagName":"h2"},{"title":"7. Clean up old data​","type":1,"pageTitle":"Adding an external storage to your server","url":"/doc/pr-2672/en/admin/tutorials/external_storage#7-clean-up-old-data","content":" Once your new setup is validated, you can proceed to delete the old data from step 5.3:  rm -Rf /home/yunohost.app.bkp rm -Rf /var/mail.bkp   ","version":"Next","tagName":"h2"},{"title":"🎉 Congratulations!​","type":1,"pageTitle":"Adding an external storage to your server","url":"/doc/pr-2672/en/admin/tutorials/external_storage#-congratulations","content":" If you have made it this far without damage, you now have a server that takes advantage of one or more storage disks. ","version":"Next","tagName":"h2"},{"title":"Give SFTP permission to edit an app","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/tutorials/sftp_on_apps","content":"Give SFTP permission to edit an app In YunoHost permission management web admin interface, you can specify which user can access your system through SFTP. However, those user are chrooted in their home directory for security reasons. If you want to give access to a specific apps through SFTP, here are additional steps to do after giving the SFTP permission in the web interface. In instructions below, USER is the user to whom you wish to give permission to edit wordpress files. mkdir -p /home/USER/apps/wordpress touch /home/USER/.nobackup mount --bind /var/www/wordpress /home/USER/apps/wordpress echo &quot;/var/www/wordpress /home/USER/apps/wordpress none defaults,bind 0 0&quot; &gt;&gt; /etc/fstab find /var/www/wordpress -type d -exec chmod g+s {} \\; setfacl -R -m u:wordpress:rwX /var/www/wordpress setfacl -R -d -m u:wordpress:rwX /var/www/wordpress setfacl -m u:wordpress:r-- /var/www/wordpress/wp-config.php setfacl -R -m u:USER:rwX /var/www/wordpress setfacl -R -d -m u:USER:rwX /var/www/wordpress ","keywords":"","version":"Next"},{"title":"Customize the appearance of the user portal","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/tutorials/theming","content":"","keywords":"","version":"Next"},{"title":"Options for the Portal customization​","type":1,"pageTitle":"Customize the appearance of the user portal","url":"/doc/pr-2672/en/admin/tutorials/theming#options-for-the-portal-customization","content":" ","version":"Next","tagName":"h2"},{"title":"Show the list of public apps to visitors​","type":1,"pageTitle":"Customize the appearance of the user portal","url":"/doc/pr-2672/en/admin/tutorials/theming#show-the-list-of-public-apps-to-visitors","content":" Visitors will see a 'public apps' page when ending up on the portal instead of just the login form.  ","version":"Next","tagName":"h3"},{"title":"Show other domain's apps​","type":1,"pageTitle":"Customize the appearance of the user portal","url":"/doc/pr-2672/en/admin/tutorials/theming#show-other-domains-apps","content":" All apps from all domains will be visible on the portal. Default value is true.  ","version":"Next","tagName":"h3"},{"title":"Custom title​","type":1,"pageTitle":"Customize the appearance of the user portal","url":"/doc/pr-2672/en/admin/tutorials/theming#custom-title","content":" Choose a Title for the Portal  ","version":"Next","tagName":"h3"},{"title":"Custom logo​","type":1,"pageTitle":"Customize the appearance of the user portal","url":"/doc/pr-2672/en/admin/tutorials/theming#custom-logo","content":" Choose a image. Accept .svg, .png and .jpeg. Prefer a monochrome .svg with fill: currentColor so that the logo adapts to the themes.  ","version":"Next","tagName":"h3"},{"title":"Default color theme​","type":1,"pageTitle":"Customize the appearance of the user portal","url":"/doc/pr-2672/en/admin/tutorials/theming#default-color-theme","content":" Choose a color theme. Users are allowed to choose another one in their settings.  App tiles display theme simple = display apps iconsdescripitive = display apps icons and a descpriction of the applicationperiodic = display tiles with name apps.  ","version":"Next","tagName":"h3"},{"title":"Search engine URL​","type":1,"pageTitle":"Customize the appearance of the user portal","url":"/doc/pr-2672/en/admin/tutorials/theming#search-engine-url","content":" This is an optional feature, allowing to display a search bar in the portal (for example if you like to use your YunoHost portal as your browser's home page). This should be an URL with an empty query string such as https://duckduckgo.com/?q=, with q= as duckduckgo's empty query parameter  ","version":"Next","tagName":"h3"},{"title":"Custom user intro​","type":1,"pageTitle":"Customize the appearance of the user portal","url":"/doc/pr-2672/en/admin/tutorials/theming#custom-user-intro","content":" You can use HTML, basic styles will be applied to generic elements.  ","version":"Next","tagName":"h3"},{"title":"Custom public intro​","type":1,"pageTitle":"Customize the appearance of the user portal","url":"/doc/pr-2672/en/admin/tutorials/theming#custom-public-intro","content":" You can use HTML, basic styles will be applied to generic elements.  Custom CSS stylesheet  This is for advanced admins willing to customize the appearance of the portal. ","version":"Next","tagName":"h3"},{"title":"Security","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/tutorials/security","content":"","keywords":"","version":"Next"},{"title":"Improve security​","type":1,"pageTitle":"Security","url":"/doc/pr-2672/en/admin/tutorials/security#improve-security","content":" If your YunoHost server is used in a critical production environment, or if you want to improve its safety, you may want to follow these good practices.  warning Following these instructions requires advanced knowledge of system administration.  tip Never close your current SSH connection before checking that your alterations work. Test your new configuration by opening a new terminal or window. That way, you can undo your alterations if anything goes wrong.  ","version":"Next","tagName":"h2"},{"title":"SSH authentication via key​","type":1,"pageTitle":"Security","url":"/doc/pr-2672/en/admin/tutorials/security#ssh-authentication-via-key","content":" By default, the SSH authentication uses the administration password. Deactivating this kind of authentication and replacing it by a key mechanism is advised.  On your client:  ssh-keygen ssh-copy-id -i ~/.ssh/id_rsa.pub &lt;username@your_yunohost_server&gt;   tip If you run into permissions issues, set username as owner of the dir ~/.ssh with chown. Be careful, for security reasons this directory should be in mode 700. If you are on Ubuntu 16.04 you should run ssh-add to initialize the SSH agent.  Type your admnistration password and your key will be copied onto your server.  On your server, editing the SSH configuration file to deactivate password authentication is handled by a system setting:  sudo yunohost settings set security.ssh.ssh_password_authentication -v no     ","version":"Next","tagName":"h3"},{"title":"Modify the SSH port​","type":1,"pageTitle":"Security","url":"/doc/pr-2672/en/admin/tutorials/security#modify-the-ssh-port","content":" To prevent SSH connection attempts by robots that scan the internet for any server with SSH enabled, you can change the SSH port. This is handled by a system setting, which takes care of updating the SSH and Fail2Ban configuration. There's no need to change this port if you've disabled password authentication.  warning If you modify anything in the /etc/ssh/sshd_config file, even if only the port, YunoHost will no longer manage this file. For this reason, always use the YunoHost admin tools to make changes to the systems configuration files!  sudo yunohost settings set security.ssh.ssh_port -v &lt;new_ssh_port_number&gt;   For subsequent SSH connections, you need to add the -p option followed by the SSH port number.  Sample:  ssh -p &lt;new_ssh_port_number&gt; admin@&lt;your_yunohost_server&gt;     ","version":"Next","tagName":"h3"},{"title":"Change cipher compatibility configuration​","type":1,"pageTitle":"Security","url":"/doc/pr-2672/en/admin/tutorials/security#change-cipher-compatibility-configuration","content":" The default TLS configuration for services tends to offer good compatibility to support old devices. You can tune this policy for specific services like SSH and NGINX. By default, the NGINX configuration follows the intermediate compatibility recommendation from Mozilla. You can choose to switch to the 'modern' configuration which uses more recent security recommendations, but decreases compatibility, which may be an issue for your users and visitors using older devices. More details about compatibility can be found on this page.  Changing the compatibility level is not definitive and can be reverted if it doesn't fit with your environment.  On your server, change the policy for NGINX  sudo yunohost settings set security.nginx.nginx_compatibility -v modern   On your server, change the policy for SSH  sudo yunohost settings set security.ssh.ssh_compatibility -v modern   ","version":"Next","tagName":"h3"},{"title":"Disable the YunoHost API​","type":1,"pageTitle":"Security","url":"/doc/pr-2672/en/admin/tutorials/security#disable-the-yunohost-api","content":" YunoHost administration is accessible through an HTTP API, served on the 6787 port by default (only on localhost). It can be used to administer a lot of things on your server, so malicious actors can also use it to damage your server. The best thing to do, if you know how to use the command-line interface (CLI), is to deactivate the yunohost-api service.  warning This will completely disable both YunoHost's API and the web administration panel that relies on it. Proceed only if you are comfortable with the command line interface.  sudo systemctl disable yunohost-api sudo systemctl stop yunohost-api   As yunohost-api is now disabled and not running, Diagnosis will report an error and cannot be ignored from the API. If you want to ignore this error, you can configure YunoHost from the CLI.  sudo yunohost diagnosis ignore --filter services service=yunohost-api  ","version":"Next","tagName":"h3"},{"title":"Using YunoHost as a Tor Hidden Service","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/tutorials/torhiddenservice","content":"","keywords":"","version":"Next"},{"title":" Installing Tor​","type":1,"pageTitle":"Using YunoHost as a Tor Hidden Service","url":"/doc/pr-2672/en/admin/tutorials/torhiddenservice#installing-tor","content":" apt install tor   ","version":"Next","tagName":"h3"},{"title":" Configuring our hidden service​","type":1,"pageTitle":"Using YunoHost as a Tor Hidden Service","url":"/doc/pr-2672/en/admin/tutorials/torhiddenservice#configuring-our-hidden-service","content":" Edit /etc/tor/torrc, and add these lines:  HiddenServiceDir /var/lib/tor/hidden_service/ HiddenServicePort 80 127.0.0.1:80 HiddenServicePort 443 127.0.0.1:443   ","version":"Next","tagName":"h3"},{"title":" Restart Tor​","type":1,"pageTitle":"Using YunoHost as a Tor Hidden Service","url":"/doc/pr-2672/en/admin/tutorials/torhiddenservice#restart-tor","content":" service tor restart   ","version":"Next","tagName":"h3"},{"title":"Get your Tor Hidden Service hostname​","type":1,"pageTitle":"Using YunoHost as a Tor Hidden Service","url":"/doc/pr-2672/en/admin/tutorials/torhiddenservice#get-your-tor-hidden-service-hostname","content":" cat /var/lib/tor/hidden_service/hostname   Your domain looks like random123456789.onion  ","version":"Next","tagName":"h3"},{"title":"Add the .onion domain to YunoHost​","type":1,"pageTitle":"Using YunoHost as a Tor Hidden Service","url":"/doc/pr-2672/en/admin/tutorials/torhiddenservice#add-the-onion-domain-to-yunohost","content":" yunohost domain add random123456789.onion   ","version":"Next","tagName":"h3"},{"title":"Avoid SSO redirection (optional)​","type":1,"pageTitle":"Using YunoHost as a Tor Hidden Service","url":"/doc/pr-2672/en/admin/tutorials/torhiddenservice#avoid-sso-redirection-optional","content":" If you want to avoid being redirected to the SSO portal at login, you can deactivate SSOwat for this specific tor domain, by editing the file /etc/nginx/conf.d/random123456789.onion.conf and commenting the following line (two times):  #access_by_lua_file /usr/share/ssowat/access.lua;   ","version":"Next","tagName":"h3"},{"title":"Restart NGINX​","type":1,"pageTitle":"Using YunoHost as a Tor Hidden Service","url":"/doc/pr-2672/en/admin/tutorials/torhiddenservice#restart-nginx","content":" service nginx restart  ","version":"Next","tagName":"h3"},{"title":"✨ Upgrades","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/upgrade/","content":"","keywords":"","version":"Next"},{"title":"From the webadmin​","type":1,"pageTitle":"✨ Upgrades","url":"/doc/pr-2672/en/admin/upgrade/#from-the-webadmin","content":" On the administraton panel, click on Upgrade the system. YunoHost will refresh the system package catalog as well as the application catalog, and display available upgrades.  Click on green upgrade buttons to upgrade the system and applications.  ","version":"Next","tagName":"h2"},{"title":"From the command line​","type":1,"pageTitle":"✨ Upgrades","url":"/doc/pr-2672/en/admin/upgrade/#from-the-command-line","content":" Here are some example of corresponding command lines:  # Fetch available updates yunohost tools update # Upgrade all system packages yunohost tools upgrade system # Upgrade all apps yunohost tools upgrade apps # Upgrade a specific application yunohost app upgrade wordpress  ","version":"Next","tagName":"h2"},{"title":"Migrating from 4.x to 11.x","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/upgrade/11.0-bullseye","content":"","keywords":"","version":"Next"},{"title":"Important notes​","type":1,"pageTitle":"Migrating from 4.x to 11.x","url":"/doc/pr-2672/en/admin/upgrade/11.0-bullseye#important-notes","content":" The YunoHost team did its best to make sure that the migration is as smooth as possible and was tested over the course of several months in several cases. With that said, please be aware that this is a delicate operation. System administration is a complicated topic and covering every particular case is quite hard. Therefore, if you host critical data and services, please make backups. And in any case, be patient and attentive during the migration. Please don't rush into thinking that you should need to reinstall your system from scratch thinking it would be &quot;simpler&quot; (sigh). (A common attitude is to be willing to reinstall a server at the slightest complication...). Instead, if you happen to run into issues, we encourage you to try to investigate and understand what's going on and reach for help on the chat and the forum. You should watch the known issues at the bottom of this page, to be sure your migrations will work properly.  ","version":"Next","tagName":"h2"},{"title":"Migration procedure​","type":1,"pageTitle":"Migrating from 4.x to 11.x","url":"/doc/pr-2672/en/admin/upgrade/11.0-bullseye#migration-procedure","content":" ","version":"Next","tagName":"h2"},{"title":"From the webadmin​","type":1,"pageTitle":"Migrating from 4.x to 11.x","url":"/doc/pr-2672/en/admin/upgrade/11.0-bullseye#from-the-webadmin","content":" After upgrading to 4.4.x, go to Tools &gt; Migrations to access the migrations interface. You will have to read carefully and accept the disclaimer then launch the migration.  ","version":"Next","tagName":"h3"},{"title":"From the command line​","type":1,"pageTitle":"Migrating from 4.x to 11.x","url":"/doc/pr-2672/en/admin/upgrade/11.0-bullseye#from-the-command-line","content":" After upgrading to 4.4.x, run:  sudo yunohost tools migrations run   then read carefully and accept the disclaimer.  ","version":"Next","tagName":"h3"},{"title":"During the migration​","type":1,"pageTitle":"Migrating from 4.x to 11.x","url":"/doc/pr-2672/en/admin/upgrade/11.0-bullseye#during-the-migration","content":" Depending on your hardware and packages installed, the migration might take up to a few hours.  The logs will be shown in the message bar (you can hover it to see the whole history). They will also be available after the migration (like any other operations) in Tools &gt; Logs.  Note that even if you close the webadmin page for some reason, the migration will continue in the background (but the webadmin will be partially unavailable).  ","version":"Next","tagName":"h2"},{"title":"If the migration crashed / failed at some point​","type":1,"pageTitle":"Migrating from 4.x to 11.x","url":"/doc/pr-2672/en/admin/upgrade/11.0-bullseye#if-the-migration-crashed--failed-at-some-point","content":" If the migration failed at some point, it should be possible to relaunch it. If it still doesn't work, you can try to get help (please provide the corresponding messages or whatever makes you say that it's not working).  ","version":"Next","tagName":"h3"},{"title":"What to do after the upgrade​","type":1,"pageTitle":"Migrating from 4.x to 11.x","url":"/doc/pr-2672/en/admin/upgrade/11.0-bullseye#what-to-do-after-the-upgrade","content":" ","version":"Next","tagName":"h2"},{"title":"Check that you actually are on Debian Bullseye and YunoHost 11.x​","type":1,"pageTitle":"Migrating from 4.x to 11.x","url":"/doc/pr-2672/en/admin/upgrade/11.0-bullseye#check-that-you-actually-are-on-debian-bullseye-and-yunohost-11x","content":" For this, go to Diagnosis (category Base system) or look at the footer of the webadmin. In the command line, you can use lsb_release -a and yunohost --version.  ","version":"Next","tagName":"h3"},{"title":"Run the migration to repair your python app​","type":1,"pageTitle":"Migrating from 4.x to 11.x","url":"/doc/pr-2672/en/admin/upgrade/11.0-bullseye#run-the-migration-to-repair-your-python-app","content":" After upgrading, your python apps should be unavailable because their virtual environment (venv) needs to be rebuilt.  To do that you can run the pending migrations in Webadmin &gt; Update. The apps below won't be automatically repaired, you need to force-upgrade them manually instead with yunohost app upgrade -F APP.  Apps which won't be automatically repaired and need a force upgrade:  calibrewebdjango-for-runnersffsync (this app is in python2 and no longer maintained, no guarantee)jupiterlablibrephotosmautrixmediadropmopidypgadmintracimsynapseweblate  tip If needed, you can disable the automatic rebuild for a specific python app, by removing the dedicated file ending with .requirements_backup_for_bullseye_upgrade.txt before applying the migration. You can find this file near the venv (Python virtual environment) of your app inside /opt or /var/www.  ","version":"Next","tagName":"h3"},{"title":"Check that no issue appeared in the diagnosis​","type":1,"pageTitle":"Migrating from 4.x to 11.x","url":"/doc/pr-2672/en/admin/upgrade/11.0-bullseye#check-that-no-issue-appeared-in-the-diagnosis","content":" Also in the webadmin Diagnosis section, make sure that no specific issue appeared after running the migration (for example a service that crashed for some reason).  If the service php7.3-fpm appears to be dead, you should upgrade your PHP apps like the custom web app. Next, you can run apt autoremove.  ","version":"Next","tagName":"h3"},{"title":"Check that your applications are working​","type":1,"pageTitle":"Migrating from 4.x to 11.x","url":"/doc/pr-2672/en/admin/upgrade/11.0-bullseye#check-that-your-applications-are-working","content":" Test that your applications are working. If they aren't, you should try to upgrade them (it is also a good idea to upgrade them even if they are working anyway).  If your app is broken and you were already with the latest version, you can rerun the upgrade thanks to the -F|--force option:  yunohost app upgrade --force APP_NAME   ","version":"Next","tagName":"h3"},{"title":"Current known issues after the migration​","type":1,"pageTitle":"Migrating from 4.x to 11.x","url":"/doc/pr-2672/en/admin/upgrade/11.0-bullseye#current-known-issues-after-the-migration","content":" ","version":"Next","tagName":"h2"},{"title":"Can't run the migration due to libc6-dev : Breaks: libgcc-8-dev issue​","type":1,"pageTitle":"Migrating from 4.x to 11.x","url":"/doc/pr-2672/en/admin/upgrade/11.0-bullseye#cant-run-the-migration-due-to-libc6-dev--breaks-libgcc-8-dev-issue","content":" Note: This issue should be resolved in yunohost_version: 4.4.2.13You have an app that depends on the build-essential package.  See this solution to fix it manually  ","version":"Next","tagName":"h3"},{"title":"DNSmasq is not running anymore​","type":1,"pageTitle":"Migrating from 4.x to 11.x","url":"/doc/pr-2672/en/admin/upgrade/11.0-bullseye#dnsmasq-is-not-running-anymore","content":" We haven't yet found solution for this issue.  ","version":"Next","tagName":"h3"},{"title":"No ethernet connexion after rebooting following a migration on a Raspberry Pi 4​","type":1,"pageTitle":"Migrating from 4.x to 11.x","url":"/doc/pr-2672/en/admin/upgrade/11.0-bullseye#no-ethernet-connexion-after-rebooting-following-a-migration-on-a-raspberry-pi-4","content":" warning If you have not yet rebooted your server, don't do it (we are looking for a solution). This will avoid you the use of a keyboard and screen.  We found this in the Raspberry Pi documentation  when the dhcpcd5 package is updated to the latest version (1:8.1.2-1+rpt1 -&gt; 1:8.1.2-1+rpt2), the Raspberry Pi will fail to obtain a DHCP IP address following the next reboot or startup. This problem can be avoided by disabling and re-enabling the &quot;System Options -&gt; Network at Boot&quot; option using the latest raspi-config after the dhcpcd5 package has been updated and prior to the system being shutdown or rebooted  If you are using a Raspberry Pi 4 (or maybe 3), see this solution  ","version":"Next","tagName":"h3"},{"title":"Restore ynh4 backup onto a fresh ynh11​","type":1,"pageTitle":"Migrating from 4.x to 11.x","url":"/doc/pr-2672/en/admin/upgrade/11.0-bullseye#restore-ynh4-backup-onto-a-fresh-ynh11","content":" If you can't restore your app but your system has been restored, you probably should use the regen conf to fix the nginx issues:  yunohost tools regenconf nginx --force   After that you should be able to restore your apps. Don't forget to force upgrade them if you have 502 errors. ","version":"Next","tagName":"h3"},{"title":"Migrating from 11.x to 12.x","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/upgrade/12.0-bookworm/","content":"","keywords":"","version":"Next"},{"title":"Important notes​","type":1,"pageTitle":"Migrating from 11.x to 12.x","url":"/doc/pr-2672/en/admin/upgrade/12.0-bookworm/#important-notes","content":" The YunoHost team did its best to make sure that the migration is as smooth as possible and was tested over the course of several months in several cases. Please backup your data and server! This migration is a complex operation and covering every pitfall is quite hard. And in any case, be patient and attentive during the migration. Please don't rush into thinking that you should need to reinstall your system from scratch thinking it would be &quot;simpler&quot; (sigh). (A common attitude is to be willing to reinstall a server at the slightest complication...). Instead, if you happen to run into issues, we encourage you to try to investigate and understand what's going on and reach for help on the chat and the forum. You should watch the known issues at the bottom of this page, to be sure your migrations will work properly.  ","version":"Next","tagName":"h2"},{"title":"Migration procedure​","type":1,"pageTitle":"Migrating from 11.x to 12.x","url":"/doc/pr-2672/en/admin/upgrade/12.0-bookworm/#migration-procedure","content":" You first need to ensure your system is up to date. The migration is available starting with the version 11.3.  It is recommended to run the migration from the command line, but it can still be done from the webadmin.  ","version":"Next","tagName":"h2"},{"title":"From the webadmin​","type":1,"pageTitle":"Migrating from 11.x to 12.x","url":"/doc/pr-2672/en/admin/upgrade/12.0-bookworm/#from-the-webadmin","content":" Go to Tools &gt; Migrations to access the migrations interface. You will have to read carefully and accept the disclaimer then launch the migration.  Note that even if you close the webadmin page for some reason, the migration will continue in the background (but the webadmin will be partially unavailable).  ","version":"Next","tagName":"h3"},{"title":"From the command line​","type":1,"pageTitle":"Migrating from 11.x to 12.x","url":"/doc/pr-2672/en/admin/upgrade/12.0-bookworm/#from-the-command-line","content":" Run :  sudo yunohost tools migrations run   then read carefully and accept the disclaimer.  Checking the update​  Run one or more of the following commands to check the system actually updated. Sometimes some parts of the migration/upgrade don't happen.  lsb_release -a cat /etc/debian_version yunohost --version   Forcing part of the update to run​  Several people have received alerts that the upgrade process successfully completed, but their system still shows they are running Debian Bullseye (11). If this happens to you, you can run:  yunohost tools migrations run 0027_migrate_to_bookworm --force-rerun --accept-disclaimer   Agreeing to the new Terms of Service via command line​  YunoHost 12.x now requires that you agree to the new Terms of Service. After reading and accepting them you can run:  yunohost tools migrations run 0031_terms_of_services --accept-disclaimer   ","version":"Next","tagName":"h3"},{"title":"During the migration​","type":1,"pageTitle":"Migrating from 11.x to 12.x","url":"/doc/pr-2672/en/admin/upgrade/12.0-bookworm/#during-the-migration","content":" Depending on your hardware and packages installed, the migration might take up to a few hours.  The logs will be shown in the message bar (you can hover it to see the whole history). They will also be available after the migration (like any other operations) in Tools &gt; Logs.  ","version":"Next","tagName":"h2"},{"title":"If the migration crashed / failed at some point​","type":1,"pageTitle":"Migrating from 11.x to 12.x","url":"/doc/pr-2672/en/admin/upgrade/12.0-bookworm/#if-the-migration-crashed--failed-at-some-point","content":" If the migration failed at some point, it should be possible to relaunch it. If it still doesn't work, you can try to get help (please provide the corresponding messages or whatever makes you say that it's not working).  ","version":"Next","tagName":"h3"},{"title":"What to do after the upgrade​","type":1,"pageTitle":"Migrating from 11.x to 12.x","url":"/doc/pr-2672/en/admin/upgrade/12.0-bookworm/#what-to-do-after-the-upgrade","content":" ","version":"Next","tagName":"h2"},{"title":"Check that you actually are on Debian Bookworm and YunoHost 12.x​","type":1,"pageTitle":"Migrating from 11.x to 12.x","url":"/doc/pr-2672/en/admin/upgrade/12.0-bookworm/#check-that-you-actually-are-on-debian-bookworm-and-yunohost-12x","content":" For this, go to Diagnosis (category Base system) or look at the footer of the webadmin. In the command line, you can use lsb_release -a and yunohost --version.  ","version":"Next","tagName":"h3"},{"title":"Run the new pending migrations​","type":1,"pageTitle":"Migrating from 11.x to 12.x","url":"/doc/pr-2672/en/admin/upgrade/12.0-bookworm/#run-the-new-pending-migrations","content":" Some more migrations appeared after the upgrade:  Rebuilding the virtualenvs of your Python appsMigrate from PostgreSQL 13 to 15  You should run those as soon as possible to ensure your apps work properly.  ","version":"Next","tagName":"h3"},{"title":"Check the Diagnosis​","type":1,"pageTitle":"Migrating from 11.x to 12.x","url":"/doc/pr-2672/en/admin/upgrade/12.0-bookworm/#check-the-diagnosis","content":" In the webadmin Diagnosis section, make sure that no specific issue appeared after running the migration (for example a service that crashed for some reason).  ","version":"Next","tagName":"h3"},{"title":"Check that your applications are working​","type":1,"pageTitle":"Migrating from 11.x to 12.x","url":"/doc/pr-2672/en/admin/upgrade/12.0-bookworm/#check-that-your-applications-are-working","content":" Test that your applications are working. If they aren't, you should try to upgrade them (it is also a good idea to upgrade them even if they are working anyway).  If your app is broken and you were already with the latest version, you can rerun the upgrade thanks to the -F|--force option:  yunohost app upgrade --force APP_NAME   ","version":"Next","tagName":"h3"},{"title":"Current known issues after the migration​","type":1,"pageTitle":"Migrating from 11.x to 12.x","url":"/doc/pr-2672/en/admin/upgrade/12.0-bookworm/#current-known-issues-after-the-migration","content":" Please check the issues FAQ. ","version":"Next","tagName":"h2"},{"title":"Migration isues FAQ","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/upgrade/12.0-bookworm/issues_faq","content":"","keywords":"","version":"Next"},{"title":"Python apps​","type":1,"pageTitle":"Migration isues FAQ","url":"/doc/pr-2672/en/admin/upgrade/12.0-bookworm/issues_faq#python-apps","content":" After upgrading, some python apps should be unavailable because their virtual environment (venv) needs to be rebuilt.  To do that you can run the pending migrations in Webadmin &gt; Update.  In addition, the apps below won't be automatically repaired, you need to force-upgrade them manually instead, with yunohost app upgrade -F APP.  Apps which won't be automatically repaired and need a force upgrade:  borgserver and all its instances (eg. borgserver__2, borgserver__3, ...)borg (Borg on the app store) : rebuilt using yunohost app upgrade -F borg (otherwise, will sent emails notifying that &quot;The backup miserably failed to backup&quot;, with error ModuleNotFoundError: No module named 'borg')  TODO: list those apps  FIXME:??!!! If needed, you can disable the automatic rebuild for a specific python app, by removing the dedicated file ending with .requirements_backup_for_bullseye_upgrade.txt before applying the migration. You can find this file near the venv (Python virtual environment) of your app inside /var/www.  ","version":"Next","tagName":"h2"},{"title":"Error 500 everywhere​","type":1,"pageTitle":"Migration isues FAQ","url":"/doc/pr-2672/en/admin/upgrade/12.0-bookworm/issues_faq#error-500-everywhere","content":" The web server, nginx, might need a restart before being fully operational. Please run this command:  sudo systemctl restart nginx   ","version":"Next","tagName":"h2"},{"title":"Mailman3 failed in diagnostics​","type":1,"pageTitle":"Migration isues FAQ","url":"/doc/pr-2672/en/admin/upgrade/12.0-bookworm/issues_faq#mailman3-failed-in-diagnostics","content":" A manual change in a configuration file is needed for Mailman3 to work, see the relevant issue. ","version":"Next","tagName":"h2"},{"title":"👥 Accounts and app portal","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/users/","content":"","keywords":"","version":"Next"},{"title":"Users​","type":1,"pageTitle":"👥 Accounts and app portal","url":"/doc/pr-2672/en/admin/users/#users","content":" Users are human being who have access to applications and other services on your server. The administrator can add and manage users through the web administration (in the User category) or through the command line (see yunohost user --help). After that, users obtain a personal email address (chosen by the admin), and can log in the user portal to access applications they have permissions over and configure other parameters.  The first user created also automatically gets email aliases root@main.domain.tld and admin@main.domain.tld, such that mail sent to these addresses will end up in the first user's mailbox.  caution You should be careful about who you give your server access to. In terms of security, this largely increase the attack surface for someone who wants to mess with the server one way or another.  ","version":"Next","tagName":"h2"},{"title":"The user portal, or SSO​","type":1,"pageTitle":"👥 Accounts and app portal","url":"/doc/pr-2672/en/admin/users/#the-user-portal-or-sso","content":" The user portal, also called the SSO for 'Single Sign On' allows user to browse easily between the different apps they have access to. In particular, the term 'Single Sign On' comes from the fact that user only need to log in the portal to automatically be logged to all apps that require authentication (or at least those who are integrated with the SSO/LDAP, since this is sometimes technically complicated or not possible at all).  In the portal, users can also click on the avatar in the top-left to configure some other settings such as their identify, mail aliases, automatic mail forwards, or change their password.  info You should be aware that the SSO can only be reached through the actual domain name (i.e. https://the.domain.tld/yunohost/sso), and NOT by just using the IP of the server (i.e. https://11.22.33.44/yunohost/sso), contrarily to the webadmin ! This is a bit confusing but is necessary for technical reason. If you are in a situation where you need to access the SSO without having your DNS properly configured for some reason, you might consider tweaking your /etc/hosts as described in this page.  ","version":"Next","tagName":"h2"},{"title":"Creating new users​","type":1,"pageTitle":"👥 Accounts and app portal","url":"/doc/pr-2672/en/admin/users/#creating-new-users","content":" Only the administrator can create new users. From the webadmin, open the Users menu and click on the + New user main button. Fill in all the whole form.  Users are created with an associated email address with the format username@domain.tld. Additional email aliases and email forwards can later be added by the admin and the user.  The password should be at least 8 characters - though it is good practice to use longer password (i.e. a passphrase) and/or to use various kind of characters (uppercase, lowercase, digits and special characters).  Finalize the user creation by clicking on the Save button.  From the main menu of the webadmin, open `Users`.  From the top of the users list, click on `+ New user`.  Fill in the form.  ","version":"Next","tagName":"h2"},{"title":"User groups and permissions​","type":1,"pageTitle":"👥 Accounts and app portal","url":"/doc/pr-2672/en/admin/users/#user-groups-and-permissions","content":" See this dedicated page.  ","version":"Next","tagName":"h2"},{"title":"SSH access​","type":1,"pageTitle":"👥 Accounts and app portal","url":"/doc/pr-2672/en/admin/users/#ssh-access","content":" See this dedicated page. ","version":"Next","tagName":"h2"},{"title":"Users groups and permissions","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/users/groups_and_permissions","content":"","keywords":"","version":"Next"},{"title":"Managing groups​","type":1,"pageTitle":"Users groups and permissions","url":"/doc/pr-2672/en/admin/users/groups_and_permissions#managing-groups","content":" The group mechanism can be used to define groups of users which then can be used to restrict permissions for applications and other services (such as mail or XMPP). Note that it is not mandatory to create a group to do so: you can also restrict access to an app or service on a user-per-user basis.  Using groups is however useful for semantics, for example if you host multiple groups of friends, associations or businesses on your server, you might want to create groups like association1 and association2 and add members of each association to the relevant group.  It's also possible to define mail aliases for a group, such that mails sent to groupe@domain.tld will be dispatched to all members of the group.  ","version":"Next","tagName":"h2"},{"title":"Default groups​","type":1,"pageTitle":"Users groups and permissions","url":"/doc/pr-2672/en/admin/users/groups_and_permissions#default-groups","content":" By default, these special groups are created:  all_users, that contain all users registered on YunoHost,visitors, that applies to people viewing the server while not logged in.admins, that contains YunoHost administrators, who will have SSH access as well as to the webadmin.  The content of those groups cannot be changed, only the permissions given to them.  ","version":"Next","tagName":"h3"},{"title":"List existing groups​","type":1,"pageTitle":"Users groups and permissions","url":"/doc/pr-2672/en/admin/users/groups_and_permissions#list-existing-groups","content":" From the web interfaceFrom the command line The existing groups are listed at the top of the groups and permissions page.  ","version":"Next","tagName":"h3"},{"title":"Creating a new group​","type":1,"pageTitle":"Users groups and permissions","url":"/doc/pr-2672/en/admin/users/groups_and_permissions#creating-a-new-group","content":" From the web interfaceFrom the command line To create a new group, simply click on the &quot;New Group&quot; button at the top of the page. You may only choose a name formed with letters (uper- and lowercase) and spaces. The group is created empty and without any permission.  ","version":"Next","tagName":"h3"},{"title":"Updating a group​","type":1,"pageTitle":"Users groups and permissions","url":"/doc/pr-2672/en/admin/users/groups_and_permissions#updating-a-group","content":" From the web interfaceFrom the command line Let's add a first to this group: in the group panel, click the button &quot;add a user&quot; and scroll to the desired user, then click on it. To remove a user, click on the cross next to their username, in the group panel.  ","version":"Next","tagName":"h3"},{"title":"Deleting groups​","type":1,"pageTitle":"Users groups and permissions","url":"/doc/pr-2672/en/admin/users/groups_and_permissions#deleting-groups","content":" From the web interfaceFrom the command line To delete a group, click on the red cross on the top right of the group panel. You will be asked for confirmation.  ","version":"Next","tagName":"h3"},{"title":"Managing permissions​","type":1,"pageTitle":"Users groups and permissions","url":"/doc/pr-2672/en/admin/users/groups_and_permissions#managing-permissions","content":" The permission mechanism allow to restrict access to services (for example mail, XMPP...) and apps, or even specific parts of the apps (for example the administration interface of WordPress).  ","version":"Next","tagName":"h2"},{"title":"List permissions​","type":1,"pageTitle":"Users groups and permissions","url":"/doc/pr-2672/en/admin/users/groups_and_permissions#list-permissions","content":" From the web interfaceFrom the command line The groups page lists the permissions given to each group, including the special groups all_users and visitors.  ","version":"Next","tagName":"h3"},{"title":"Add accesses to group or users​","type":1,"pageTitle":"Users groups and permissions","url":"/doc/pr-2672/en/admin/users/groups_and_permissions#add-accesses-to-group-or-users","content":" From the web interfaceFrom the command line To add a permission to a group, simply click the &quot;+&quot; button in the group panel, scroll to the desired permission, then click on it. Note that you can also allow a single user, by using the specific panel at the bottom of the page.  Note that some permissions may be &quot;protected&quot;, meaning that you won't be able to add/remove the visitor group to this permission. Generally, this is because it would make no sense (or is a security risk) to do so.  The webadmin will issue a warning if you set a permission that is superseded by a wider permission.    ","version":"Next","tagName":"h3"},{"title":"Hide/display specific tiles in the user portal​","type":1,"pageTitle":"Users groups and permissions","url":"/doc/pr-2672/en/admin/users/groups_and_permissions#hidedisplay-specific-tiles-in-the-user-portal","content":" Since YunoHost 4.1, you can choose to hide/display specific tiles in the SSO.  From the web interfaceFrom the command line In the webadmin, you can do so by going in the corresponding app view, go in Manage label and tiles and check/uncheck the option Display the tile in the user portal for the corresponding permission.  ","version":"Next","tagName":"h3"},{"title":"Config alias group​","type":1,"pageTitle":"Users groups and permissions","url":"/doc/pr-2672/en/admin/users/groups_and_permissions#config-alias-group","content":" Each group can use mail aliases, but their configuration is only available from the CLI so far. For example, the admins group is configured with aliases such as admins@domain.tld, root@domain.tld ... : mail sent to these addresses will be dispatched to all members of the admins group.  The command yunohost user group info will list them.  yunohost user group info admins [...] mail-aliases: - root@maindomain.tld - admin@maindomain.tld - admins@maindomain.tld - webmaster@maindomain.tld - postmaster@maindomain.tld - abuse@maindomain.tld [...]   To add a new mail, use the action add-mailalias or remove-mailalias to delete it.  yunohost user group add-mailalias &lt;group&gt; &lt;address@domaine.tld&gt;  ","version":"Next","tagName":"h3"},{"title":"⭐ Webadmin interface","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/webadmin","content":"⭐ Webadmin interface YunoHost has an administrator web interface. The other way to administrate your YunoHost install is through the command line. The webadmin can be accessed at https://yourdomain.tld/yunohost/admin or using the local IP or global IP of your server (https://1.2.3.4/yunohost/admin)","keywords":"","version":"Next"},{"title":"What is YunoHost?","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/what_is_yunohost/","content":"","keywords":"","version":"Next"},{"title":"Features​","type":1,"pageTitle":"What is YunoHost?","url":"/doc/pr-2672/en/admin/what_is_yunohost/#features","content":"  Based on Debian, for a trustworthy &amp; familiar base; Administer your server through a friendly web interface as well as a handy CLI; Deploy apps in just a few clicks from our more than 500 apps catalog!; Manage users (based on LDAP); Manage domain names; Create and restore backups; Connect to all apps simultaneously through the user portal (NGINX, SSOwat); Includes a full e-mail stack (Postfix, Dovecot, Rspamd, DKIM); Manages SSL certificates (based on Let's Encrypt);... and security systems (fail2ban, yunohost-firewall).  ","version":"Next","tagName":"h2"},{"title":"Origin​","type":1,"pageTitle":"What is YunoHost?","url":"/doc/pr-2672/en/admin/what_is_yunohost/#origin","content":" YunoHost was created in February 2012 after something like this:  &quot;Shit, I'm too lazy to reconfigure my mail server... Beudbeud, how were you able to get your little server running with LDAP?&quot;Kload, February 2012  All that was needed was an admin interface for Beudbeud's server to make something usable, so Kload decided to develop one. Finally, after automating several configs and packaging in some web apps, YunoHost v1 was finished.  Noting the growing enthusiasm around YunoHost and around self-hosting in general, the original developers along with new contributors decided to start work on version 2, a more extensible, more powerful, more easy-to-use, and at that, one that makes a nice cup of fair-trade coffee for the elves of Lapland.  The name YunoHost comes from the jargon &quot;Y U NO Host&quot;. The Internet meme should illustrate it:    ","version":"Next","tagName":"h2"},{"title":"What YunoHost is not?​","type":1,"pageTitle":"What is YunoHost?","url":"/doc/pr-2672/en/admin/what_is_yunohost/#what-yunohost-is-not","content":" YunoHost is not an enterprise or a for-profit entity. It is developed and maintained by volunteers. We do not sell services, we do not host or control your data or services in any way, and we have no intention or interest in monetizing anything. We also do not offer any formal guarantees. Our goal is simply to develop and maintain YunoHost in the hope that it contributes to a more decentralized internet and empowers people to reclaim autonomy over their digital services and technology. That said, we do our best to provide community support, and commercial support may be available through third parties if needed.  YunoHost as a project is not apolitical. By its very nature, YunoHost promotes a decentralized internet and technologies that empower people. We reject the flawed notion that technology is inherently neutral, or that software projects should remain neutral. Many contributors to the project remain vigilant about the social and political implications of technological developments, and emphasize the importance of solidarity and alignment with broader movements such as feminism, LGBTQIA+ rights and visibility, environmental justice and social justice. We stand firmly against fascism, sexism, racism, xenophobia, bigotry, ableism, imperialism, extractivism, eugenics, and right-wing libertarianism. If you are not aligned with these values, you are encouraged to not use YunoHost and look for a different system.  YunoHost is not designed to &quot;scale&quot; in the traditional sense. It is intended for a relatively modest number of user accounts and simultaneous users. While there is no strict limit—since performance depends heavily on your specific setup — , we estimate that some technical adjustments may be necessary when reaching 250~500 user accounts, or about 50 simultaneous users on resource-intensive apps. That said, YunoHost can comfortably handle hosting a website or several lightweight services, even with thousands of daily visitors.  YunoHost is primarily designed for people who want things to &quot;just work&quot;. Of course, it’s not perfect — we're constantly working to improve the user experience, robustness, and simplicity. Though YunoHost is &quot;tinkerable&quot;, the first target public is not power users with complex or highly customized use cases in mind. We encourage you to keep your setup as simple as possible. That said, you are than welcome to experiment and share your feedback with us!  YunoHost is not designed to be a heavy multi-tenant solution for providing services to completely separate organizations across different domains. While you can manage multiple domains and subdomains — such as hosting apps for friends, colleagues, an association — you should keep in mind that there is no strict isolation between apps. Under the hood, all applications share the same system and environment.  (Note for power users) YunoHost does not use &quot;hard&quot; containerization technologies such as Docker for its apps. This is partly for historical reasons, but also to keep the system lightweight — both in terms of resource usage and technical complexity. That said, we do take security seriously: applications run under dedicated user accounts with limited privileges and capabilities, and we're continuously working to enhance the system’s security.  ","version":"Next","tagName":"h2"},{"title":"Artworks​","type":1,"pageTitle":"What is YunoHost?","url":"/doc/pr-2672/en/admin/what_is_yunohost/#artworks","content":" Black and white YunoHost by ToZz. Licence: CC-BY-SA 4.0. Logos and other artwork are available in the Artworks repository.     ","version":"Next","tagName":"h2"},{"title":"Try YunoHost on a demo server","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/what_is_yunohost/demo","content":"Try YunoHost on a demo server caution This demo server is reset every 30 minutes and could be down from time to time, but at least you can test and that's really cool :) User interface username: demo password: demo Administration interface username: demo password: demo info Demo server gracefully provided by Gitoyen ","keywords":"","version":"Next"},{"title":"Structure of a YunoHost server","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/admin/what_is_yunohost/structure","content":"Structure of a YunoHost server This page provide an overview of the ecosystem of a YunoHost server. While this overview contains several approximations, the purpose here is to introduce the global picture before digging into the different aspects. Everything starts with the special user admin. This is the administrator of the machine who can install, configure and manage things on the server through the web administration interface, or via SSH and the command line interface. (If you are already familiar with GNU/Linux, it is quite similar to root. YunoHost has this additional 'admin' user for several technical reasons.) The administrator can create users and install applications, among other admin actions. Users automatically have their own email address when they get created. Users will also be able to connect to the user portal (SSO) to access applications. Some applications can typically be installed either as publicly-accessible, or as private, i.e. only some users will have access to it. Applications and their features of the server rely on different services to work properly. Services (sometimes also called daemons) are programs that are constantly running on the server to ensure various tasks are done, such as answering to web requests from web browsers, or relaying emails.","keywords":"","version":"Next"},{"title":"Community","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/community/","content":"Community The YunoHost community is centered around Github, the forum and chat rooms on Matrix. 📄️ Frequently Asked Questions Informations about the project 📄️ Looking for help? How to ask for help 📄️ Forum ↗ The Forum for support and news 📄️ Chat rooms Chat rooms on Matrix for support and development 📄️ Project organisation ↗ The human organization behind the code 📄️ Project budget How is money handled 📄️ Security team Did you find a vulnerability? 📄️ Media Media and conferences 📄️ Sponsors and partners Friends of YunoHost 📄️ Create a CHATONS ↗ See the tutorial on chatons.org 📄️ Terms and conditions General and Specific Conditions of Services","keywords":"","version":"Next"},{"title":"Create a CHATONS ↗","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/community/chatons","content":"Create a CHATONS ↗ You will be redirected soon to the CHATONS documentation. If that doesn't work, please go to: https://wiki.chatons.org/doku.php/heberger/administration_systeme/yunohost","keywords":"","version":"Next"},{"title":"Chat rooms","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/community/chat_rooms","content":"Chat rooms Among other communication tools, YunoHost project use chat rooms to communicate. You could join those chat rooms using: a Matrix clienta XMPP clientan IRC Client for example KiwiIRC (please note that the IRC room is deprecated, prefer Matrix) Please change your username, as we got legions of ynhusers. NB: Currently, the IRC bridge (due to Matrix) is disabled. So while the XMPP and Matrix are bridged, the IRC channel is not. Help and support chat room​ There is a support chat room for YunoHost users mutual support and help. Matrix: #yunohost:matrix.orgXMPP: support@conference.yunohost.orgIRC: #yunohost on libera.chat Development chat room​ YunoHost core development chat room: Matrix: #yunohost-dev:matrix.orgXMPP: dev@conference.yunohost.orgIRC: #yunohost-dev on libera.chat Currently, the main chat room for contributions on YunoHost project. For help, please see #yunohost chat room above. Applications chat room​ Application packaging development chat room. It allow packagers to help each other. It also allow to discuss packaging evolution, continuous integration tools: Matrix: #yunohost-apps:matrix.orgXMPP: apps@conference.yunohost.orgIRC: #yunohost-apps on libera.chat Documentation chat room​ YunoHost project documentation chat room. It allow people to discuss, synchronize and maintain an up-to-date documentation on the differents aspects of the project (backend, frontend, apps, project, community...). You may also share here your public communications about YunoHost (videos, presentations, etc.), to allow proper referencing. Matrix: #yunohost-doc:matrix.orgXMPP: doc@conference.yunohost.orgIRC: #yunohost-doc on libera.chat","keywords":"","version":"Next"},{"title":"Forum ↗","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/community/forum","content":"Forum ↗ You will be redirected soon to the forum. If that doesn't work, please go to: https://forum.yunohost.org","keywords":"","version":"Next"},{"title":"Frequently Asked Questions","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/community/faq","content":"","keywords":"","version":"Next"},{"title":"Under which license is YunoHost distributed?​","type":1,"pageTitle":"Frequently Asked Questions","url":"/doc/pr-2672/en/community/faq#under-which-license-is-yunohost-distributed","content":" YunoHost packages are under free licenses GNU AGPL v.3.  YunoHost is based on Debian, so on Debian's components' licenses.  Applications and applications packages have their own licenses.  ","version":"Next","tagName":"h3"},{"title":"What's YunoHost goal?​","type":1,"pageTitle":"Frequently Asked Questions","url":"/doc/pr-2672/en/community/faq#whats-yunohost-goal","content":" We believe that decentralizing the Internet, and empowering people to take control and responsibility back over their own data and services, is a crucial issue to guarantee a free and democratic society.  The YunoHost project aims to democratize self-hosting.  It provides a software that aims to make it easy for people to run and administer their own server, with minimal knowledge and required time.  ","version":"Next","tagName":"h3"},{"title":"But what does YunoHost exactly do?​","type":1,"pageTitle":"Frequently Asked Questions","url":"/doc/pr-2672/en/community/faq#but-what-does-yunohost-exactly-do","content":" YunoHost is a distribution, in the sense that it is a purpose-specific version of GNU/Linux-Debian and it distributes a set of application via its catalog, but it is also &quot;just&quot; a program that automatically configures Debian and does most of the hard work for you.  For instance, if you wanted to install WordPress, you would need to type a bunch of commands to create some users, setup a web server, setup a SQL server, download the WordPress archive, uncompress it, configure the web server, configure the SQL database, and finally configure WordPress. YunoHost handles the technical details and &quot;types all these commands for you&quot;, so that you can focus on what really matters.  More info on this page!  ","version":"Next","tagName":"h3"},{"title":"Can I host my own personal website with YunoHost?​","type":1,"pageTitle":"Frequently Asked Questions","url":"/doc/pr-2672/en/community/faq#can-i-host-my-own-personal-website-with-yunohost","content":" Yes! Have a look at the Custom Web app. It provides an &quot;empty shell&quot; : after installing it, just upload your files (via SSH/SCP or SFTP) to the right location. You can have PHP and a SQL database if you need.  ","version":"Next","tagName":"h3"},{"title":"Can I host many independent websites with different domain names?​","type":1,"pageTitle":"Frequently Asked Questions","url":"/doc/pr-2672/en/community/faq#can-i-host-many-independent-websites-with-different-domain-names","content":" Yes! YunoHost is multi-user and multi-domain. Some applications like WordPress or My webapp, are multi-instances, which means that the application can be installed many times.  ","version":"Next","tagName":"h3"},{"title":"Why can't I access applications via the IP address?​","type":1,"pageTitle":"Frequently Asked Questions","url":"/doc/pr-2672/en/community/faq#why-cant-i-access-applications-via-the-ip-address","content":" The SSO (single sign-on) cannot properly authenticate users when they access your server with only its IP. If you really can't properly configure the DNS, you can temporarily work around it by modifying the hosts file on your computer.  ","version":"Next","tagName":"h3"},{"title":"What's YunoHost's business model?​","type":1,"pageTitle":"Frequently Asked Questions","url":"/doc/pr-2672/en/community/faq#whats-yunohosts-business-model","content":" YunoHost is maintained by volunteers working on their free time. The project regularly receives donations which pay for the servers' bills and stickers. The project received (or continues to receive) grants from organization like NLnet or CodeLutin to fund specific developments  Donations to the project are increasing, and we are in the process of defining the way we redistribute this money to main contributors and therefore help make the project sustainable. Additionally, some contributors do have professional activities based (at least partially) on YunoHost.  ","version":"Next","tagName":"h3"},{"title":"Can I donate to the project?​","type":1,"pageTitle":"Frequently Asked Questions","url":"/doc/pr-2672/en/community/faq#can-i-donate-to-the-project","content":" Yes, you can! YunoHost needs money to pay servers and domain names. We would also like contributors to be able to spend more time contributing rather than looking for jobs.  You can donate using our donation interface  If you can, you can also make in-kind contributions, like servers (some of our infrastructure relies on servers from a few associations).  ","version":"Next","tagName":"h3"},{"title":"How can I contribute to the project?​","type":1,"pageTitle":"Frequently Asked Questions","url":"/doc/pr-2672/en/community/faq#how-can-i-contribute-to-the-project","content":" There are [many ways to contribute](/dev :).  Don't hesitate to come talk to us about your ideas!  A common misconception for newcomers in free software projects is to think that they are &quot;not skilled enough&quot;. In practice, nobody is &quot;skilled&quot; :). What really matter is: liking what you do, being friendly with other human beings, being patient and stubborn with machines, and having some free time. Other than that, just doing what you can is already awesome!  ","version":"Next","tagName":"h3"},{"title":"How is the YunoHost project organized?​","type":1,"pageTitle":"Frequently Asked Questions","url":"/doc/pr-2672/en/community/faq#how-is-the-yunohost-project-organized","content":" It is described in this document :).  ","version":"Next","tagName":"h3"},{"title":"Will you port YunoHost to [insert favorite distro]?​","type":1,"pageTitle":"Frequently Asked Questions","url":"/doc/pr-2672/en/community/faq#will-you-port-yunohost-to-insert-favorite-distro","content":" If you care about distrowars, or think 'Debian is dirty', then YunoHost is not for you.  YunoHost is aimed at non-tech people who just want their server to work. Debian has its flaws, but it's (one of?) the most widely known and used distribution for servers. It's stable. Most self-hosted software are one way or another compatible with Debian. It's easily hackable by anybody who's been doing a bit of CLI on their personal Ubuntu/Mint computer. There is no killer feature in other distributions that makes it relevant for YunoHost to switch or port to it.  If this does not convince you, there are other projects running on other distributions or with different philosophies.  ","version":"Next","tagName":"h3"},{"title":"I checked how apps packaging work. Why are you reinventing [insert favorite package format]?​","type":1,"pageTitle":"Frequently Asked Questions","url":"/doc/pr-2672/en/community/faq#i-checked-how-apps-packaging-work-why-are-you-reinventing-insert-favorite-package-format","content":" People have been tempted to compare YunoHost packages to traditional package managers (such as Debian's .deb), which hold a different purpose. Traditional package managers are meant to install low-level purpose of installing files, commands, programs and services on the system. It is often your duty to configure them properly, simply because there is no standard server setup. Typically, web apps requires a lot of configuration because they rely on a web server and a database (and the single sign-on).  YunoHost manages high-level abstractions (apps, domains, users...) and defines a standard setup (NGINX, Postfix, Metronome, SSOwat...) and, because of this, can handle the configuration for the user.  ","version":"Next","tagName":"h3"},{"title":"When will [this feature] be implemented? Why isn't [that app] packaged yet? I cannot believe you do not do [this] yet!​","type":1,"pageTitle":"Frequently Asked Questions","url":"/doc/pr-2672/en/community/faq#when-will-this-feature-be-implemented-why-isnt-that-app-packaged-yet-i-cannot-believe-you-do-not-do-this-yet","content":" We do not give timelines.  We are a bunch of volunteers working on our free time to maintain and develop YunoHost. We have no product owner or project manager handling resources, we are not a business. We do what we can, because we love this software, when we can.  If you really want to have a feature implemented or documented, or an app packaged, [consider contributing yourself](/dev! We would love helping you get started.  ","version":"Next","tagName":"h3"},{"title":"What is YunoHost's policy regarding the apps included in the official catalog ?​","type":1,"pageTitle":"Frequently Asked Questions","url":"/doc/pr-2672/en/community/faq#what-is-yunohosts-policy-regarding-the-apps-included-in-the-official-catalog-","content":" See this page  ","version":"Next","tagName":"h3"},{"title":"Why won't you include [feature X] ?​","type":1,"pageTitle":"Frequently Asked Questions","url":"/doc/pr-2672/en/community/faq#why-wont-you-include-feature-x-","content":" YunoHost is primarily designed for not-so-tech-savvy users and aims to remain relatively simple in terms of UI/UX. At the same time, the project has limited time and energy available to be maintained and developed. Therefore we may lower the priority of features, or refuse entirely the inclusion of features, based on the criteria that they:  would only be meaningful for advanced / power-users stuff which is out of the scope of the project ;would introduce too much UI/UX bloat ;would only cover unrealistic threat models ;would be there only to satisfy purists ;or overall would not be worth it in terms of development/maintenance time/energy for what it brings to the project. ","version":"Next","tagName":"h3"},{"title":"Looking for help?","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/community/help","content":"","keywords":"","version":"Next"},{"title":"How to ask for help​","type":1,"pageTitle":"Looking for help?","url":"/doc/pr-2672/en/community/help#how-to-ask-for-help","content":" Come on the forum or the chat rooms! But first, please follow these guidelines :  tip Be courteous and patientExplain the context of your request in a complete but concise way.Share the error logs with YunoPaste  danger Do not ask about your attempted solution but rather your actual problem (see the XY problem).Avoid phrases like &quot;server does not want&quot;, &quot;the app does not load&quot;, or other meaningless sentences.Do not trim error messages, but do not paste a wall of illegible unformatted code either. (Use YunoPaste)Do not ask your question like a poll (&quot;does anyone else succeeded in...?&quot;).  ","version":"Next","tagName":"h2"},{"title":"You've found a bug ?​","type":1,"pageTitle":"Looking for help?","url":"/doc/pr-2672/en/community/help#youve-found-a-bug-","content":" Please report bugs on our bugtrackers or contact the developers:   Report a bug in YunoHost's core Report a bug in one of YunoHost's apps Contact the developers  ","version":"Next","tagName":"h2"},{"title":"Do's​","type":1,"pageTitle":"Looking for help?","url":"/doc/pr-2672/en/community/help#dos","content":" ","version":"Next","tagName":"h2"},{"title":"Be courteous and patient​","type":1,"pageTitle":"Looking for help?","url":"/doc/pr-2672/en/community/help#be-courteous-and-patient","content":" Help in the chatrooms or on the forum is given by our users and contributors, all volunteers. You may be in a hurry, you may be exhausted by fruitless trials or overwhelmed by unpleasant emotions... Have a break, have a sip of your preferred soothing beverage, breathe and once you've recovered your composure continue reading. We need you in a good mindset to help you.  ","version":"Next","tagName":"h3"},{"title":"Ask in the right place​","type":1,"pageTitle":"Looking for help?","url":"/doc/pr-2672/en/community/help#ask-in-the-right-place","content":" Support is only available on the forum or our chatrooms. We are also on Mastodon, but we do not offer help on this platform.  On the forum, make sure you open your request in the proper category, to maximize your chances of receiving appropriate help:  Support for issues when setting up or using YunoHost itself;Support apps for issues when setting up or using apps.  To allow us to help you on the forum, you absolutely need to fill in the Support request template, it will be displayed upon message creation.  ","version":"Next","tagName":"h3"},{"title":"Explain the context​","type":1,"pageTitle":"Looking for help?","url":"/doc/pr-2672/en/community/help#explain-the-context","content":" Your request needs to be stated in a complete but concise way. Explain plainly what you want to achieve and in what manner it is not working for you. Don't hesitate to provide any information that may be relevant, even things that may seem obvious, as the person(s) who will be trying to help you may need this information.  ","version":"Next","tagName":"h3"},{"title":"Show errors and logs​","type":1,"pageTitle":"Looking for help?","url":"/doc/pr-2672/en/community/help#show-errors-and-logs","content":" This is absolutely paramount if YunoHost or a command fails. It always explains why, through a single error code or a full wall of seemingly illegible text.  For the latter, YunoHost provides green &quot;Share with YunoPaste&quot; buttons when something fails or in the Services page of the webadmin. Click on it, it will open a new web page, and you can then share its URL.  We recommend that you share these logs in their entirety using the link generated by YunoPaste. Avoid extracts from the logs, as decisive information may be elsewhere. Also, avoid copying and pasting them into the forum, as it's unpleasant to go through them like that, share the YunoPaste link.     If your issue is not related to an installation or upgrade process but instead is about an app failing load properly, ideally you can investigate with your browser console (opened with the F12 key): its Network tab can show you HTTP error codes (including the infamous 403, 404, 500...), and its Console can output errors too.  Screenshots are most welcome.  ","version":"Next","tagName":"h3"},{"title":"Don'ts​","type":1,"pageTitle":"Looking for help?","url":"/doc/pr-2672/en/community/help#donts","content":" ","version":"Next","tagName":"h2"},{"title":"Avoid the infamous XY Problem​","type":1,"pageTitle":"Looking for help?","url":"/doc/pr-2672/en/community/help#avoid-the-infamous-xy-problem","content":" In a nutshell, explain the root cause of your issue. You may share your attempted solution, but explaining why you need that potential solution is more important.  ","version":"Next","tagName":"h3"},{"title":"Do not be vague​","type":1,"pageTitle":"Looking for help?","url":"/doc/pr-2672/en/community/help#do-not-be-vague","content":" Do not assume we understand what you are talking about, do not take shortcuts, do not rephrase, do not simplify, do not trim the error messages.  Do not write &quot;it does not work&quot;, &quot;it does not want&quot;, &quot;it does not load&quot;, &quot;computer says no&quot;.  Explain what is wrong, and how it is displayed onscreen. There is, for example, an important difference between a completely blank page and a blank page with a minimalistic error code.  ","version":"Next","tagName":"h3"},{"title":"Do not beat about the bush​","type":1,"pageTitle":"Looking for help?","url":"/doc/pr-2672/en/community/help#do-not-beat-about-the-bush","content":" No need to ask if you can ask. It is a support chat/forum, therefore yes, you can ask your question.  Do not ask your question like a poll, as in &quot;Did anyone managed to get app XY working?&quot;. If it is not working for you, then explain directly what issue you got, explain the context, share the logs.  ","version":"Next","tagName":"h3"},{"title":"Do not be an asshole​","type":1,"pageTitle":"Looking for help?","url":"/doc/pr-2672/en/community/help#do-not-be-an-asshole","content":" Access to the forum or the chatrooms is a courtesy that can be revoked. ","version":"Next","tagName":"h3"},{"title":"Estimated budget for 2020/2021","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/community/project_budget","content":"","keywords":"","version":"Next"},{"title":"Expected revenues​","type":1,"pageTitle":"Estimated budget for 2020/2021","url":"/doc/pr-2672/en/community/project_budget#expected-revenues","content":" Donations: 3000€/yearGrant from NLNet: 20K€  ","version":"Next","tagName":"h2"},{"title":"Expected expenses​","type":1,"pageTitle":"Estimated budget for 2020/2021","url":"/doc/pr-2672/en/community/project_budget#expected-expenses","content":" Development: 20K€Server renting: 500€ VPS Scaleway: 20.33*12: 243.96€/yearVPS Digital O. (forum): 172.80€/year Domain names: ~150€ nohost.me: 11.99€HT/yearynh.fr: 6.99€HT/year (to be confirmed with frju?)noho.st: ~35€ TTC/yearyunohost.org: 13.99€HT/yearyunohost.com: 9.99€HT/yearlabriqueinter.net: 12.49€HT/yearinternetcu.be: 17.99€HT/year Communication: ~400€Travel (e.g. to go to conferences): ~700€ AG FFDN 2020: 225€ (en tout)Event colibris: 150€FOSDEM ou autre conf: 300€ Bank account fees: 7x12€ =&gt; ~100€Brique Camp: 500€  Balance 2020-2021: +650€ ","version":"Next","tagName":"h2"},{"title":"Media","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/community/press_kit","content":"","keywords":"","version":"Next"},{"title":"Talks / conf​","type":1,"pageTitle":"Media","url":"/doc/pr-2672/en/community/press_kit#talks--conf","content":" (EN) BattleMeshV12 - YunoHost and the Internet Cube (Brique Internet)(EN) FOSDEM 2019 - The operating system to build the decentralized Internet (slides)(FR) Capitole du libre 2018 - YunoHost: un des chemins vers la décentralisation - Bram (slides)(FR) Journées du logiciel libre 2018 - YunoHost : vers l’auto-hébergement et au-delà - Bram (slides)(FR) Ubuntu Party Novembre 2017 - De Framasoft à YunoHost, réapproprions nous le cloud (slides)(FR) Capitole du libre 2017 - YunoHost : vers l'auto-hébergement et au-delà - JimboJoe (slides)(FR) PSES 2017 – Construire l’Internet du Futur avec YunoHost – Aleks, ljf (slides)(FR) Université de technologie de compiègne 2017 – Agir pour un internet éthique – LJF(EN) FOSDEM 2017 – Internet Cube – kload(EN) FOSDEM 2017 – YunoHost – Bram(FR) Capitole du libre 2016 – 1 an et ½ de Brique Internet – Bram(FR) PSES 2015 - La Brique Internet(FR) THSF 2015 – beudbeud(FR) RMLL 2014 - Hébergez-vous ! – kload &amp; beudbeud(FR) Capitole du libre 2013 - L’auto-hébergement pour tous avec YunoHost - beudbeud(EN) FOSDEM 2013 — kload  ","version":"Next","tagName":"h2"},{"title":"Articles / Press review​","type":1,"pageTitle":"Media","url":"/doc/pr-2672/en/community/press_kit#articles--press-review","content":"       LinuxFr (french): YunoHost 2.0 : self hosting at click rangeInternet cube and YunoHost projects evolutions (FR) Linux Pratique n°96 – YunoHost, l’auto-hébergement à portée de main – juillet 2016(EN) Linux Magazine n°208 – YunoHost, Personal server for a private cloud – Mars 2018(FR) Linux Pratique HS n° 044 février 2019 - Le choix de l’auto-hébergement avec YunoHost : rencontre avec l’équipe du projet(FR) Duhaz.fr: Devenir votre propre hébergeur(FR) Faimaison.net: au revoir Google, bonjour liberté!(FR) Tineternet.net: Reprendre la main sur ses données avec l'auto-hébergement(DE) YunoHost Serverinstallation auf Laptop(FR) Cenabumix: Retour d’expérience YunoHost sur Raspberry(FR) Geber.ga: YunoHost, ou l'auto-hébergement à portée de main...(EN) Nequalsonelifestyle.com: Self Hosting Without Self Owning(EN) Skysilk.com: How to Install YunoHost On a Debian VPS(FR) Alternativelibertaire.org: Auto-hébergement(ES) Sololinux.es: Instalar YunoHost en Debian 9 Stretch(FR) Bog.hugopoi.net: Le cloud maison  ","version":"Next","tagName":"h2"},{"title":"Past Events / Workshops​","type":1,"pageTitle":"Media","url":"/doc/pr-2672/en/community/press_kit#past-events--workshops","content":" (FR) INFOTHEMA: Présentation de l’avancée du projet YunoHost INFOTHEMA + Présentation du collectif CHATONS(FR) Normandie-libre.fr: Héberger ses sites web à la maison(FR) Viregul.fr: Auto-hébergement, pour un Internet décentralisé(EN) 35C3: Hands-on introduction to self-Hosting with YunoHos(FR) Journées du Logiciel Libre 2019: l'auto-hébergement avec YunoHost  ","version":"Next","tagName":"h2"},{"title":"YunoHost was cited in​","type":1,"pageTitle":"Media","url":"/doc/pr-2672/en/community/press_kit#yunohost-was-cited-in","content":" EXPERIMENTA 2018 at 57.47 (depuis le site d'Experimenta)Capitole du libre 2017 - « Contributopia », Dégoogliser ne suffit pasContributopia - Essaimage (Framasoft)(FR) Triple A: Émission Underscore #144 du 19 mai 2019 ","version":"Next","tagName":"h2"},{"title":"Security team","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/community/security_team","content":"Security team Contact the security team by mail: security@yunohost.org. We strongly advise you to encrypt your mail with GPG. Our public key is available on key servers. Below is our fingerprint gpg --fingerprint security@yunohost.org pub 4096R/17351899 2016-07-01 Empreinte de la clef = 6CBC 45EB A625 FBF3 513D 1227 749D 8972 1735 1899 uid YunoHost Security &lt;security@yunohost.org&gt; sub 4096R/446838AF 2016-07-01 See a gist on Github for other trustable fingerprint sources.","keywords":"","version":"Next"},{"title":"Sponsors and partners","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/community/sponsors_partners","content":"Sponsors and partners In order to advance and make the project works, in addition to the work of volunteers and donations, YunoHost benefits from the support of sponsors and partners. Here is a list of YunoHost sponsors, providing infrastructure and services to the project: GITOYEN: association bringing together several companies and associations acting as a provider of hosting infrastructure and Internet access.GLOBENET: activist association, at the service of freedom of expression, offering internet services.LDN-NET : association for the defense of a free, neutral and decentralized Internet whose main means of action is to be an Internet access provider associative and local.NBS System: company specialized in hosting, securing Clouds, outsourcing (Information Systems, SaaS Applications, Web Platforms) and managed services.NLNET: The NLnet Foundation supports organizations and people that contribute to an open information society.TETANEUTRAL-NET: associative Internet access provider currently operating a radio network in Toulouse and its surroundings and a hoster. Here is a list of YunoHost partners: FFDN: The FDN federation gathers associative Internet Access Providers who recognize themselves in common values: volunteering, solidarity, democratic functioning and non-profit; defense and promotion of net neutrality.Framasoft : popular education association, a group of friends convinced that an emancipatory digital world is possible, convinced that it will happen thanks to concrete actions on the ground and online with you and for you!","keywords":"","version":"Next"},{"title":"Project organisation ↗","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/community/yunohost_project_organization","content":"Project organisation ↗ You will be redirected soon to the project organization repository on Github. If that doesn't work, please go to: https://github.com/YunoHost/project-organization","keywords":"","version":"Next"},{"title":"Developer documentation","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/dev/","content":"","keywords":"","version":"Next"},{"title":"YunoHost depends exclusively on the participation of people like you.​","type":1,"pageTitle":"Developer documentation","url":"/doc/pr-2672/en/dev/#yunohost-depends-exclusively-on-the-participation-of-people-like-you","content":"    Spread the word​ Talk about software freedom, self-hosting and YunoHost to your relatives and at your work. We rely on Datalove evangelists like you &lt;3     Help users​ Our support relies on contributors like you. Just come to the support chatroom and help new users getting started, or pick a question on the Forum.     Write​ Improve this documentation by writing new pages or translating existing ones to your language.     Translate​ Get involved by making YunoHost interfaces available in your language Get started!     Test​ We need people able to test YunoHost deeply. If you find a bug, try to identify it, and report it on our bug tracker.     Package Apps​ Extend YunoHost capabilities by packaging new services and web applications. Have a look of what has been done yet!     Develop​ You can involve in the YunoHost's development regardless of your skill. Sysadmins, web developers, designers and pythonists are welcome! Learn how to contribute, and join us on the development chat room. ","version":"Next","tagName":"h3"},{"title":"General and Specific Conditions of Services operated by the YunoHost project","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/community/terms_of_services","content":"","keywords":"","version":"Next"},{"title":"Preamble​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#preamble","content":" The YunoHost project is a team of volunteers who have made common cause to create a free operating system for servers, called YunoHost. YunoHost is published under the GNU Affero General Public License v3. In connection with this software, the project administers and makes available several technical and community services for various purposes.  By using these services, you agree to be bound by the following terms.  ","version":"Next","tagName":"h2"},{"title":"Short version (TL;DR)​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#short-version-tldr","content":" &quot;This is a community project&quot; clause: you accept and respect the fact that the project is maintained by team of volunteers, and that volunteer time and energy are the driving force behind the project. You are welcome to contribute to the project, punctually or over time, in any way you choose (whether it's talking about it around you, giving us constructive feedback, helping others, saying hi, translating, testing, coding, donating, ...).&quot;We do what we can&quot; clause: You accept that the volunteer team does the best it can, and is not subject to any obligation of means or result. The project cannot be held responsible for any consequential damage if a service ceases to operate. The team may decide to stop a service at any time.&quot;We are not FAANGs&quot; clause: We try to minimize as much as possible the personal data that may transit, be stored on our infrastructure or be transferred to third parties. We publish the code that runs our services. We do not resell personal data. We only use data for internal, anonymized statistical purposes.&quot;We do not like toxic people&quot; clause: you must respect other members of the community by showing civic-mindedness, politeness and kindness.&quot;Free software is not about volunteers doing your bidding&quot; clause: messages that simply ask when a feature, fix or update will be available, that are intentionally or unintentionally insistent, without any form of politeness, benevolence or intention to contribute, are not welcome. If you would like a particular point to be addressed, ask yourself how you can contribute, or at the very least, speak kindly of it.&quot;We do not read crystal balls&quot; clause: the forum and support chat clearly state that in order to obtain help, it is necessary to provide basic information (hardware type, YunoHost version, ..), contextual elements and complete logs. Not doing so is extremely annoying for the volunteers trying to help you.&quot;We do not want to go to jail&quot; clause: you must respect the law (whether it's well-made or silly).&quot;Any abuse will be punished&quot; clause: technical or human abuse of the services may result in the closure of your accounts and the banning of access to some or all of the services, possibly without warning or negotiation.  ","version":"Next","tagName":"h2"},{"title":"Distinction between YunoHost as a project, as a service, as software, and as distribution​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#distinction-between-yunohost-as-a-project-as-a-service-as-software-and-as-distribution","content":" This document details the TOS that apply to the services provided by the YunoHost project, but not to YunoHost as software nor to the applications offered in the YunoHost catalog.  YunoHost as software is released under the AGPLv3 license and is therefore provided without warranty of any kind and is not liable for any damages resulting from its use, nor from the use of the applications it allows to install.  If you use YunoHost to provide services to others, it is your responsibility to define and publish your own terms and conditions of use for your own services, and to inform yourself of any legal implications of the applications you install.  ","version":"Next","tagName":"h2"},{"title":"General and specific conditions of service​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#general-and-specific-conditions-of-service","content":" The YunoHost project reserves the right to update and modify these conditions. In this case, the YunoHost project will inform those concerned by posting a notice on the forum or, failing that, on the site.  A dated version history of these conditions can be found here.  ","version":"Next","tagName":"h2"},{"title":"Services overview​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#services-overview","content":" The services administered and maintained by the project to date are:  a public website, designed to present the project and provide documentation;hosting of installation scripts, images, packages and cryptographic keys for installing and updating YunoHost;a public community forum, to support each other and discuss problems or any other topic related to the project;a public application catalog, to present and vote for available applications, and an API for programs to retrieve this list;a pastebin service, for easy sharing of logs and other technical information;a free domain name service, designed to reduce friction for people who don't yet own a domain name, or who want a quick and easy solution in the context of YunoHost;self-diagnostic services used by YunoHost software to help users diagnose technical problems on their own;a freely, publicly available YunoHost demo server;other development and maintenance services.  In addition, the project depends on, uses, or encourages the use of services managed by third parties, such as:  software blocks and automatic installation recipes (apps) hosted by third parties such as (non-exhaustive list) github.com, npmjs.org, pypi.org, debian.org, sury.org, ...several public community chat rooms using Matrix, XMPP and IRC protocols, hosted by third parties such as (non-exhaustive list) matrix.org and libera.chat;the Let's Encrypt certification authority;a donation interface, where payments are managed by Stripe and sent to Support Self-Hosting, the association that collects and manages donations;  It is your responsibility to consult the conditions of use of these third-party services.  ","version":"Next","tagName":"h2"},{"title":"Access to services​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#access-to-services","content":" ","version":"Next","tagName":"h2"},{"title":"Geographic scope​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#geographic-scope","content":" The YunoHost project services are intended for all YunoHost users and contributors worldwide, as long as the regulations of their country do not contravene their use or provision.  ","version":"Next","tagName":"h3"},{"title":"Permission to use services​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#permission-to-use-services","content":" Unless otherwise specified, use of the YunoHost project services is limited to use within the expected framework:  discovering or using the YunoHost operating systemcontribution to the YunoHost project  Any other use (e.g. use in another distribution, creation of artificial intelligence, etc.) must be approved in advance by the YunoHost project, unless explicitly permitted in the service-specific conditions below.  ","version":"Next","tagName":"h3"},{"title":"Account-based services and termination​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#account-based-services-and-termination","content":" The following functionalities are accessible via an account:  forum posting ;voting for applications in the catalog (on apps.yunohost.org) ;reservation and management of dynamic domain names provided by the YunoHost project (nohost.me, noho.st and ynh.fr).  The forum account and the account managing your domain name can be terminated using the associated credentials.  ","version":"Next","tagName":"h3"},{"title":"How it works​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#how-it-works","content":" ","version":"Next","tagName":"h2"},{"title":"Financial conditions​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#financial-conditions","content":" All services are provided free of charge. Don't hesitate to support the YunoHost project by making a donation.  ","version":"Next","tagName":"h3"},{"title":"Troubleshooting​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#troubleshooting","content":" In the event of an outage, and if there is no message on the forum confirming that the YunoHost project is in the process of correcting the outage, you are encouraged to report it via chat or the forum.  The YunoHost project offers all these services thanks to volunteers who will do their best to resolve any technical problems that may arise. Volunteers are under no obligation to repair a broken service.  In the event of failure to fix a technical issue, the YunoHost project may decide to close the service.  ","version":"Next","tagName":"h3"},{"title":"Fate of services​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#fate-of-services","content":" The YunoHost project does not guarantee that services will continue to operate forever, and may choose to discontinue services if the project feels it is no longer able to provide said services.  If the YunoHost project is able to do so, it will do its best to allow sufficient time for everyone to migrate or adapt serenely.  ","version":"Next","tagName":"h3"},{"title":"YunoHost project responsibility​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#yunohost-project-responsibility","content":" Under no circumstances may a user claim damages or compensation resulting from technical problems of any kind whatsoever.  The YunoHost project is not subject to any obligation (neither of means nor of result). In the event of failure or interruption of services, the YunoHost project cannot be held responsible for indirect damages such as loss of data, operating losses, commercial prejudice, loss of clientele, sales, profits or anticipated savings, or any other indirect prejudice.  In particular, the YunoHost project cannot be held liable if you have made vital interests dependent on its services.  ","version":"Next","tagName":"h3"},{"title":"Misuse of services​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#misuse-of-services","content":" Any abuse may result in the closure of your accounts and the prohibition of access to all or part of the services.  The YunoHost project reserves the right to take any measures it deems necessary to put an end to any abuse of its services. The YunoHost project is the sole judge of this notion of &quot;abuse&quot;, with the aim of providing the best possible service to all users. The YunoHost project may decide to act without warning or negotiation.  ","version":"Next","tagName":"h2"},{"title":"Illegal use of services​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#illegal-use-of-services","content":" The YunoHost project is not here to cover you and take legal risks on your behalf. Even if your action is legitimate, you are entirely responsible for what you do.  You must abide by the laws and regulations in force when using the services offered by the YunoHost project (in particular the forum, chat, paste and domain name services), whether in terms of privacy, sending large quantities of e-mail, intellectual property, discriminatory comments, hate speech, harassment, infringement of people's fundamental freedoms, and so on.  In the event of prohibited use, the YunoHost project may be obliged to suspend all or part of the service, remove content, or take any other action required by law or regulation.  ","version":"Next","tagName":"h3"},{"title":"Respect for the community and volunteers​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#respect-for-the-community-and-volunteers","content":" You accept and respect the fact that the YunoHost project is a community project maintained by a volunteer team, and that volunteer time and energy are the driving force behind the project. You understand that project volunteers do their best, and that to abuse their time or energy is to sabotage the project.  You must respect other users and the project team by demonstrating civility, politeness and kindness. Any form of pressure, insistence, harassment or toxicity is prohibited. The YunoHost project reserves the right to ban you and delete any content that appears irrelevant or contravenes these principles, at its sole discretion and without prior warning.  In particular, the YunoHost project will be uncompromising whenever your behavior consumes too much of the energy of the project's regular contributors.  ","version":"Next","tagName":"h3"},{"title":"Reasonable use​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#reasonable-use","content":" Since services and resources are shared with the rest of the users, their use must be reasonable and take into account the shared aspect.  If you abuse the service, for example by monopolizing shared machine resources, its content or access may be removed.  ","version":"Next","tagName":"h3"},{"title":"Our commitments​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#our-commitments","content":" ","version":"Next","tagName":"h2"},{"title":"CHATONS Charter​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#chatons-charter","content":" The YunoHost project's long-term aim is to respect the charter of the Collectif des Hébergeurs, Alternatifs, Transparents, Ouverts, Neutres et Solidaires (Collective of alternative, transparent, open, neutral and supportive hosting providers) as part of its service provision activities.  Given its international scope, the YunoHost project is not currently a candidate for membership of this collective. However, members of the C.H.A.T.O.N.S collective are currently using YunoHost.  For more information see the C.H.A.T.O.N.S. charter.  ","version":"Next","tagName":"h3"},{"title":"Respect for your personal data and privacy​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#respect-for-your-personal-data-and-privacy","content":" We try to minimize as much as possible the personal data that may transit, be stored on our infrastructure or be transferred to third parties.  The YunoHost project prohibits any resale or transfer of personal data to third parties.  Below are details of the personal data that may be transferred or stored on YunoHost services:  technical information (IP, User agent) used to interact with the services. This information is used to provide the service, to ensure its maintenance and security, and to create very basic aggregated statistics.e-mail address and pseudonym used on the forumpersonal information contained in messages exchanged via the forum or chat roompersonal information included in domain names provided by the projectinformation contained in logs that you have shared via the dedicated toolbanking and personal information relating to donations made via Stripe or Liberapay.  Unless otherwise specified in the specific conditions, these data are located in Paris, Strasbourg and Toulouse.  For further information, please refer to the specific conditions of service.  ","version":"Next","tagName":"h3"},{"title":"Exercising your rights​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#exercising-your-rights","content":" In accordance with Article 34 of the French Data Protection Act, you may exercise the following rights by sending an e-mail to data AT yunohost.org :  rights of access, rectification, deletion and oppositionright to data processing limitationright to data portabilityright not to be the subject of an automated individual decision  ","version":"Next","tagName":"h3"},{"title":"GDPR​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#gdpr","content":" The YunoHost project undertakes, with respect to the services it makes available, to comply with the regulations in force applicable to the processing of personal data and, in particular, Regulation (EU) 2016/679 of the European Parliament and of the Council of April 27, 2016 applicable as of May 25, 2018, known as the GDPR.  Nevertheless this does not mean in any way that YunoHost software, nor the applications offered for installation, would be certified with any GDPR compliance (whatever that may mean for you).  ","version":"Next","tagName":"h3"},{"title":"Disputes and jurisdiction​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#disputes-and-jurisdiction","content":" The law applicable to the present contract is French law. In the event of a dispute, the parties shall seek an amicable solution. If this fails, the dispute will be settled by the Tribunal de Grande Instance de Toulouse (FRANCE).  The fact that the user or the YunoHost project does not take advantage at a given time of one of the present general conditions and/or tolerates a breach by the other party may not be interpreted as a renunciation by the user or the YunoHost project to take advantage of these conditions at a later date.  The nullity of one of the clauses of these conditions in application of a law, regulation or court decision does not imply the nullity of all the other clauses. Furthermore, the general spirit of the clause must be maintained in accordance with the applicable law.    ","version":"Next","tagName":"h2"},{"title":"Specific Conditions of Services​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#specific-conditions-of-services","content":" ","version":"Next","tagName":"h2"},{"title":"Website and documentation​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#website-and-documentation","content":" Service address​  yunohost.org  Contribution​  If you find an error, don't hesitate to suggest a correction, via the &quot;Edit&quot; button (requires a GitHub account) or via a message on the forum.  Personal data​  To the best of our knowledge, none of the pages on this website contain trackers.  As with any web service, a technical log exists recording the IP and User Agent of requests.  ","version":"Next","tagName":"h3"},{"title":"Donations​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#donations","content":" Service address​  donate.yunohost.org  Stop recurring donation​  To stop your recurring donation, please send an email to donate-5542 AT yunohost.org and indicate the information that will identify your donation (email used, name, amount).  Personal data​  To provide this service, the Support Self-Hosting association uses Stripe as its payment infrastructure.  It is necessary to use a credit card and your identity, but these data are not stored, or even transit, through the YunoHost project infrastructure, except in emails exchanged as part of a recurring donation cancellation.  As with any web service, a technical log exists recording the IP and User Agent of requests.  ","version":"Next","tagName":"h3"},{"title":"Installation media (ISO image, ARM, installation script, etc.)​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#installation-media-iso-image-arm-installation-script-etc","content":" You use this service in 2 situations:  installing or restoring YunoHost(rarer) to install, update or restore an app whose binary is not supplied by its publisher and whose compilation on your own machine is deemed too long or too resource-intensive.  Service address​  repo.yunohost.org  Personal data​  As with any web service, a technical log exists recording the IP and User Agent of requests.  ","version":"Next","tagName":"h3"},{"title":"IP​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#ip","content":" This service is used automatically by your YunoHost instances to determine their public IPs, enabling you to automate and diagnose certain operations.  Service addresses​  ip.yunohost.org and ip6.yunohost.org addresses  Free access service​  Exceptionally, the public IP retrieval service can be used in other contexts, as long as the load induced is minimal relative to that of YunoHost.  Personal data​  As with any web service, a technical log exists recording the IP and User Agent of requests.  ","version":"Next","tagName":"h3"},{"title":"Free and dynamic domain names​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#free-and-dynamic-domain-names","content":" This is the service used if you request a domain name ending in nohost.me, noho.st or ynh.fr in the YunoHost interface.  Service addresses​  dyndns.yunohost.org, dynette.yunohost.org, ns0.yunohost.org, ns1.yunohost.org.  Usage limits​  This service is offered within the limit of one domain per YunoHost server (although it is possible to configure sub-domains of this domain). If abuse is detected (e.g. creation of too many domains from the same machine or IP, or large-scale automated creation), the project reserves the right to delete the domains concerned without warning.  Automatic deletion​  The YunoHost project reserves the right to delete a domain if no server appears to be associated with it and the IP address has not been updated for 1 year.  Termination​  You can delete your domain using the password you chose when you created it.  Personal data​  If your name contains personal data, these will inevitably end up on the servers running the service.  Note that, in order to function, this service necessarily stores and transmits your server's public IP addresses.  As with any web service, a technical log exists recording the IP and User Agent of requests.  ","version":"Next","tagName":"h3"},{"title":"Diagnostics​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#diagnostics","content":" This service automatically tests whether your services seem to be correctly exposed on the Internet, and thus independently resolves network configuration problems.  This service is used automatically twice a day, as soon as you activate the diagnostics feature.  Service address​  diagnosis.yunohost.org  Usage limits​  Due to the resource consumption involved, the diagnosis service is limited to 60 domains to be diagnosed per request.  If you exceed this limit, the project recommends that you diagnose your domains yourself.  Personal data​  To operate, this service transmits the domain names and ports to be diagnosed. Any personal data contained in the domain names is therefore also transferred, but not stored.  As with any web service, a technical log exists recording the IP and User Agent of requests.  ","version":"Next","tagName":"h3"},{"title":"Application catalog​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#application-catalog","content":" This service lets you browse (via a browser or program) the list of applications available for installation in YunoHost. It also allows you to vote for apps to direct contribution efforts.  In addition, servers running YunoHost automatically retrieve the application catalog once a day.  Service addresses​  apps.yunohost.org and app.yunohost.org.  Service misuse​  Any attempt to falsify votes on catalog or wishlist apps will be considered abuse and may be subject to cancellation, banning and account deletion.  Personal data​  To participate in the popularity of apps, you need to use your forum account. See Forum service.  The storage of your votes is linked to your forum identity.  As with any web service, a technical log exists recording the IP and User Agent of requests.  Statistics​  In order to size our services and plan new releases, we use the technical download logs from the list of apps to estimate the number of YunoHost instances running in the wild, and the ratio of major releases.  ","version":"Next","tagName":"h3"},{"title":"Debian package repository​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#debian-package-repository","content":" This is the channel through which updates to YunoHost as software are made available. The YunoHost project also maintains builds of some software components on which YunoHost depends or on the periphery of the project.  Service address​  forge.yunohost.org  Permission to create mirror repositories​  It is allowed (and even encouraged) to create mirror repositories of YunoHost's Debian package repository.  Personal data​  As with any web service, a technical log exists recording the IP and User Agent of requests.  ","version":"Next","tagName":"h3"},{"title":"Tickets and contributions to the code​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#tickets-and-contributions-to-the-code","content":" As it stands, development, bug reports and feature requests take place on the repositories of the &quot;YunoHost&quot; and &quot;YunoHost-Apps&quot; organizations on the GitHub platform.  Respect for volunteers​  We can only re-emphasize what has already been mentioned in the 'Respect for the community and volunteers' section above: the project is maintained by a volunteer team, volunteer time and energy is the driving force behind the project, and volunteers do their best. You're welcome to contribute to the project (and if necessary to ask questions about how to contribute) to the team.  On the other hand, abusing their time or energy is tantamount to sabotaging the project. In particular, YunoHost is not a community of volunteers at your command regarding priorities for patches, features or updates, either for YunoHost as software, or for the catalog of applications maintained by the project. Volunteers do not promise support, fixes, features or updates, nor do they provide estimates of &quot;when&quot; a feature, fix or update will be available. Messages that simply ask when a feature, fix or update will be available, without any form of politeness, benevolence or intention to contribute, are not welcome and undermine volunteer morale. Any abuse may be punished by a ban from the project's GitHub organizations, or even from all project services.  ","version":"Next","tagName":"h3"},{"title":"Paste​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#paste","content":" This service is used to share logs of operations carried out with YunoHost to enable the study and resolution of problems.  Service address​  paste.yunohost.org  Personal data​  The logs you share may contain personal information or, in the worst case, secrets that could compromise the security of part or all of your server. Upon publication, YunoHost software automatically tries to remove this information as best it can. Nevertheless, the system is far from being perfect, and it is your responsibility to re-read the information before sharing the generated link with others.  As with any web service, a technical log exists recording the IP and User Agent of requests.  ","version":"Next","tagName":"h3"},{"title":"Self-help forum (and chat)​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#self-help-forum-and-chat","content":" Service address​  forum.yunohost.org and chats listed on the documentation.  Asking for help​  The self-help forum and chat clearly state (e.g. here, here and here) that in order to get help, it is necessary to provide basic information (hardware type, YunoHost version), background information and full logs. Not doing so is extremely annoying for the people trying to help you, especially as we strive to make sharing this information as simple as possible. In addition, it is counter-productive because it wastes everyone's time: nobody can solve a problem that is not diagnosable.  If these rules are not respected, the team reserves the right to close your topic without notice.  Personal data​  The forum allows you to enter personal information (email, GitHub account, nickname). From the forum interface, you can modify or delete this information.  As with any web service, a technical log records the IP and User Agent of requests. In addition, the forum may send or receive e-mails, which are also logged.  Location​  Paris  ","version":"Next","tagName":"h3"},{"title":"Demo service​","type":1,"pageTitle":"General and Specific Conditions of Services operated by the YunoHost project","url":"/doc/pr-2672/en/community/terms_of_services#demo-service","content":" Service address​  demo.yunohost.org  Purpose and operation​  This service allows you to test YunoHost's interfaces (webadmin and user portal) to get a feel for YunoHost without installing it. The data on this server is destroyed and reset approximately every 30 minutes.  Personal data​  As with any web service, a technical log exists recording the IP and User Agent of requests. ","version":"Next","tagName":"h3"},{"title":"YunoHost architecture","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/dev/core/architecture","content":"","keywords":"","version":"Next"},{"title":"Moulinette​","type":1,"pageTitle":"YunoHost architecture","url":"/doc/pr-2672/en/dev/core/architecture#moulinette","content":" It is a small &quot;homemade&quot; framework. Its major roleis to allow us to build both a web API and a command-line API from the same Python code thanks to a YAML schema which we callthe actionmap.  It handles other mechanisms like authentication, internationalization and small technical utilitary functions (e.g. reading/writing JSON).  Moulinette has its own documentation available here.  ","version":"Next","tagName":"h2"},{"title":"YunoHost​","type":1,"pageTitle":"YunoHost architecture","url":"/doc/pr-2672/en/dev/core/architecture#yunohost","content":" This piece is the very core of YunoHost. It contains:  The Python code that manages users, domains, apps, services and other thingsBash helpers mainly used by application packagers to package applicationsHooks and templates that are used to configure the various pieces of the ecosystem such as NGINX, Postfix...Internationalized stringsTests  ","version":"Next","tagName":"h2"},{"title":"SSOwat​","type":1,"pageTitle":"YunoHost architecture","url":"/doc/pr-2672/en/dev/core/architecture#ssowat","content":" This is the single sign-on backend of YunoHost. It is based on Lua scripts that are directly interfaced with NGINX and handle all the &quot;technical&quot; aspects of authentication and route accesses.  SSOwat is configured through /etc/ssowat/conf.json which is generated by YunoHost.  ","version":"Next","tagName":"h2"},{"title":"YunoHost-portal​","type":1,"pageTitle":"YunoHost architecture","url":"/doc/pr-2672/en/dev/core/architecture#yunohost-portal","content":" This is the web user portal used to log in and browse installed apps.  ","version":"Next","tagName":"h2"},{"title":"YunoHost-admin​","type":1,"pageTitle":"YunoHost architecture","url":"/doc/pr-2672/en/dev/core/architecture#yunohost-admin","content":" It is an optional dependency of YunoHost and corresponds to an interface for the web API created by YunoHost and Moulinette (c.f. the yunohost-api service).  It essentially contains:  View templatesCorresponding JavaScript controllers that interact with the YunoHost APIInternationalized strings ","version":"Next","tagName":"h2"},{"title":"Development environment","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/dev/core/devenv","content":"","keywords":"","version":"Next"},{"title":"Incus​","type":1,"pageTitle":"Development environment","url":"/doc/pr-2672/en/dev/core/devenv#incus","content":" The recommended testing and development environment is based on Incus, a system container manager.  Its usage is very similar to Docker and Podman, but its main difference is its ability to run full operating systems, with their own network interfaces and init system. There is no virtualization here.  The YunoHost project provides Incus images on the Incus repository.  For each Debian release and for each branch (stable, testing, unstable) are provided multiple images:  before-install: tools and dependencies are installed but not Yunohostdev: YunoHost is installed but the post-install step was not runappci: YunoHost is installed, post-install was run and you can install appscore-tests: YunoHost is installed and post-installed, and development and testing tools are installed.  The appci and core-tests images are used by the project's testing infrastructure.  The Incus images are built by our incus_builder tool, but not automatically, so please feel free to ask us to regenerate images.  ","version":"Next","tagName":"h2"},{"title":"Install and configure Incus​","type":1,"pageTitle":"Development environment","url":"/doc/pr-2672/en/dev/core/devenv#install-and-configure-incus","content":" Incus can be installed on Debian with:  apt install incus   Then you need to add users to the incus-admin group:  sudo usermod -a -G incus-admin $(whoami) newgrp incus-admin   and initialize Incus:  incus admin init   You will want to add the YunoHost repository (do NOT run this as root but as your user):  incus remote add yunohost https://repo.yunohost.org/incus --protocol simplestreams --public   and to download an image:  incus image copy yunohost:yunohost/bookworm-stable/dev local: --copy-aliases --auto-update   ","version":"Next","tagName":"h3"},{"title":"Install a custom YunoHost version​","type":1,"pageTitle":"Development environment","url":"/doc/pr-2672/en/dev/core/devenv#install-a-custom-yunohost-version","content":" When testing an unreleased YunoHost version, or installation script, you might want to run the installation script from its Git repository on a freshly installed Debian.  For example to install the unreleased Debian 13 Trixie version:  curl https://raw.githubusercontent.com/YunoHost/install_script/main/trixie | bash   You might also want to pass arguments to the script:  curl https://raw.githubusercontent.com/YunoHost/install_script/main/trixie | bash -s -- -d unstable   ","version":"Next","tagName":"h2"},{"title":"ynh-dev​","type":1,"pageTitle":"Development environment","url":"/doc/pr-2672/en/dev/core/devenv#ynh-dev","content":" ynh-dev is the recommended tool that automates:  downloading Incus imagesdownload YunoHost's projects source codeInstall and symlink YunoHost stuff inside the container  That way, you will be able to edit files, test your changes in real time, commit and push/pull your changes directly from your development environment.  Please see the ynh-dev README for installation and usage instructions. ","version":"Next","tagName":"h2"},{"title":"Core development","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/dev/core/","content":"","keywords":"","version":"Next"},{"title":"Contribution workflow​","type":1,"pageTitle":"Core development","url":"/doc/pr-2672/en/dev/core/#contribution-workflow","content":" When you want to contribute your changes, you need to:  Fork the relevant(s) repo(s) on GitHubPush your changes to a new branch, with a well-chosen name, for example: For an enhancement or new feature: enh-ISSUENUMBER-name-of-featureFor a bugfix fix-ISSUENUMBER-description-of-fixISSUENUMBER is optional and is the id of a corresponding ticket on the bug tracker. Once you're ready, open a Pull Request (PR) on GitHub. Please include [fix] or[enh] at the beginning of the title of your PR. You can open a draft PR if you are expecting feedback / comments.After reviewing, testing and validation by other contributors, your branch should be merged in unstable! ","version":"Next","tagName":"h2"},{"title":"How is used the main domain","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/dev/core/maindomain","content":"How is used the main domain Here is a list of situations in which we use the main domain concept: to expose the web portal: currently the web portal is only reachable through the main domain address (could be changed for multi tenant support in future)to define the hostname of the machine: we believe we do this to avoid some sudo errors (may be it's not relvant anymore or could be made in /etc/hosts)to TLS encrypt SMTP and dovecot: so user should define the main domain in their email client to avoid TLS warningTo be able to do mail forwarding using the main domain as Sender Rewriting Scheme Domainto define default email as (root@ abuse@) but we probably should do it on all parent domain insteadto define myhostname in postfix config, used as EHLO and reverseDNS (refering to MX Toolbox test it should be a FQDN, so a subdomain)to generate the self-signed Local Authority: having just one allow to upload it in a browser and get an x509 authenticated https connexion.to define default xmpp DNS field: dns field are only set on the main domain by default Finally we can imagine some apps use the main domain too, see Refs to main_domain in the YunoHost-Apps codeRefs to current_host in the YunoHost-Apps code","keywords":"","version":"Next"},{"title":"Working on the YunoHost web admin","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/dev/core/ynh_admin","content":"Working on the YunoHost web admin When using ynh-dev, run in the container: ./ynh-dev use-git yunohost-admin It launches gulp, such as each time you modify sources, it recompiles the code and you can use it by refreshing (Ctrl+F5) your web administration. To stop the command, just do Ctrl+C. warning You might need to force-clear the cache of your browser sometimes to refresh the JavaScript and/or HTML (so each time you edit something in js or views). The web interface uses the API to interact with YunoHost. The API commands/requests are also defined via the actionsmap. For instance, accessing the page https://domain.tld/yunohost/api/users corresponds to a GET /users requests on the YunoHost API. It is mapped to the functionuser_list(). Accessing the URL should display the JSON returned by this function. 'GET' requests are typically meant to ask information to the server. 'POST' requests are meant to ask the server to edit/change some information, or to execute some actions. js/yunohost/controllers contains the JavaScript parts, and define which requests to make to the API when loading a specific page of the interface, and how to process the data to generate the page, using templates. views contains the various templates for the pages of the interface. In the template, data coming from the JavaScript part can be used with the syntax{{some-variable}}, which will be replaced when building/accessing the page. It is also possible to have conditions using thehandlebars.js syntax: {{#if some-variable}}&lt;p&gt;Some conditional HTML code here !&lt;/p&gt;{{/if}} For internationalized strings, use y18n.t('some-string-code') in the JavaScript, or {{t 'some-string-code'}} in the HTML template, and put your string in locales/en.json. Don't edit other locales files, this will be done using Weblate!","keywords":"","version":"Next"},{"title":"Working on the server and CLI","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/dev/core/ynh_core/","content":"","keywords":"","version":"Next"},{"title":"The actionsmap​","type":1,"pageTitle":"Working on the server and CLI","url":"/doc/pr-2672/en/dev/core/ynh_core/#the-actionsmap","content":" The actionsmap file (data/actionsmap/yunohost.yml) defines the command line andthe API structure. It is structured as &quot;categories&quot;, &quot;actions&quot;, and &quot;arguments&quot;.  For example for the command line yunohost domain add some.domain.tld, the category is domain, the action is add, and some.domain.tld is an argument.  Moulinette will automatically map commands in the actionsmap to Python functions (and their arguments) located in src/yunohost/. For example, typingyunohost domain add some.domain.tld will call the function domain_add(domainName)in domain.py, with the argument domainName equal to &quot;some.domain.tld&quot;.  warning Each time you edit the actionsmap or the Python code, you should restart the YunoHost api with: systemctl restart yunohost-api You'll need to retype your admin and password in the web interface.  ","version":"Next","tagName":"h2"},{"title":"Coding style​","type":1,"pageTitle":"Working on the server and CLI","url":"/doc/pr-2672/en/dev/core/ynh_core/#coding-style","content":" Please follow the standard PEP8 rules, add Python typing, and run the usual linting tools for Python and Bash.  Github Actions will run the linting tools and report errors.  ","version":"Next","tagName":"h2"},{"title":"YunoHost specific rules​","type":1,"pageTitle":"Working on the server and CLI","url":"/doc/pr-2672/en/dev/core/ynh_core/#yunohost-specific-rules","content":" To handle exceptions, you should raise some YunohostError() To help with internationalizing the messages, use m18n.n('some-message-id')and put your string in locales/en.json. You can also put arguments and use them in the string with {{some-argument:s}}. Don't edit other locales files, this will be done using weblate ! Name of &quot;private&quot; functions should start with a _ ","version":"Next","tagName":"h3"},{"title":"Applications documentation","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/dev/doc/apps_documentation","content":"Applications documentation The apps documentation lives in each app's repository. Please see the relevant documentation.","keywords":"","version":"Next"},{"title":"Write documentation","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/dev/doc/","content":"","keywords":"","version":"Next"},{"title":"Via GitHub​","type":1,"pageTitle":"Write documentation","url":"/doc/pr-2672/en/dev/doc/#via-github","content":" The YunoHost documentation is managed through a Git repository.  If you are not familiar with GitHub, there is an &quot;Edit&quot; button at the bottom of each page that will redirect you to the GitHub online editor that will help you make change proposals (Pull Requests, PR).  However, if you are on an editing spree, you should fork the repository. You can then make all the commits (changes) you want on your forked repository, and submit them all at once in the same pull requests. GitHub's etiquette would advise you to gather in the same PR all related commits.  Because the online editor doesn't support uploading files, using Git is the prefered way if you need to upload media (e.g. images).  ","version":"Next","tagName":"h2"},{"title":"Docusaurus​","type":1,"pageTitle":"Write documentation","url":"/doc/pr-2672/en/dev/doc/#docusaurus","content":" The documentation is built using Docusaurus. It generates static pages that can be served by a simple server.  tip The official Docusaurus doc should be your primary source of documentation.  Install Docusaurus and its dependencies:  $ yarn   ","version":"Next","tagName":"h2"},{"title":"Local development​","type":1,"pageTitle":"Write documentation","url":"/doc/pr-2672/en/dev/doc/#local-development","content":" Start a local development server, that automatically updates when files are edited:  $ yarn start   ","version":"Next","tagName":"h3"},{"title":"Build​","type":1,"pageTitle":"Write documentation","url":"/doc/pr-2672/en/dev/doc/#build","content":" Build the final static files:  $ yarn build   This command generates static content into the build directory.  tip You can serve those files locally using yarn serve  ","version":"Next","tagName":"h3"},{"title":"Deploy​","type":1,"pageTitle":"Write documentation","url":"/doc/pr-2672/en/dev/doc/#deploy","content":" You can either copy the built files to a static file server (using My Webapp) or deploy the site to Github Pages.  ","version":"Next","tagName":"h3"},{"title":"Contents of the repository​","type":1,"pageTitle":"Write documentation","url":"/doc/pr-2672/en/dev/doc/#contents-of-the-repository","content":" We are following the standard Docusaurus structure:  │ # The main docs ├── docs/ │ │ # The translations ├── i18n │ ╰── * │ ├── code.json │ ├── docusaurus-theme-classic │ │ ├── footer.json │ │ ╰── navbar.json │ ╰── docusaurus-plugin-content-docs │ │ # The same content as docs/ │ ├── current/ │ ╰── current.json │ │ # The configuration files ├── docusaurus.config.js ├── package.json ├── redirects.js ├── sidebars.js ├── yarn.lock │ │ # Autogeneration scripts and templates ├── scripts │ ╰── generate_docs.sh │ │ # Custom Docusaurus code and theming ├── src │ ├── components/ │ ├── css/ │ ╰── theme/ │ │ # Images, etc ╰── static/   ","version":"Next","tagName":"h2"},{"title":"Special pages​","type":1,"pageTitle":"Write documentation","url":"/doc/pr-2672/en/dev/doc/#special-pages","content":" Some pages of the documentation are automatically or dynamically generated.  See the generation script. ","version":"Next","tagName":"h2"},{"title":"Contribute via Github","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/dev/doc/git","content":"","keywords":"","version":"Next"},{"title":"Create an account on GitHub.com​","type":1,"pageTitle":"Contribute via Github","url":"/doc/pr-2672/en/dev/doc/git#create-an-account-on-githubcom","content":" To be able to send your contributions via GitHub, you need to have an account on GitHub, to create the account you will need a valid email address that you have access to. GitHub is a powerful tool with many features, the interface can be a little scary at first. You don't have to give your first and last names, you can use a nickname (when you register Username).  ","version":"Next","tagName":"h2"},{"title":"Fork the YunoHost documentation in your personal repository​","type":1,"pageTitle":"Contribute via Github","url":"/doc/pr-2672/en/dev/doc/git#fork-the-yunohost-documentation-in-your-personal-repository","content":" To fork the source code allows you to create a new branch of development of a software source code or in this case the source code of the documentation. By creating a new branch, this allows you to modify the code and add your contributions without altering the code of the master branch, which is the public release of the documentation. This allows you not to have to write down everything at once, but to do it in several steps. (Especially for contributions that require more time).  Forking a project on GitHub is extremely simple, just click on the Fork button, this will create a new repository on your GitHub account.  In the title of the new repository, you will see where the repository comes from, in this case YunoHost/doc.  warning If you forge the repository of another contributor than YunoHost, you'll get the same files. Except that when you send your changes, they will be sent to the contributor and not to the YunoHost repository. The advantage is that it allows you to develop another branch created by the contributor and work with another person on an improvement before submitting it to the main repository. It is not possible to have a fork from a contributor's repository and the original repository fork at the same time in your own account.  ","version":"Next","tagName":"h2"},{"title":"Modify and add your contribution​","type":1,"pageTitle":"Contribute via Github","url":"/doc/pr-2672/en/dev/doc/git#modify-and-add-your-contribution","content":" Once the repository is forked (copied), you will need to create a new development branch within your repository. It is through this branch that you will modify the files and thus propose improvements to the documentation. The fact that it is a new branch will allow you to make a Pull Request, i.e. a request to add your contributions to the master branch, which is the main documentation branch. The development rules on GitHub change depending on the developers of each repository, some have a testing branch in which to offer contributions. More information on what a branch on git-scm.com is: Branching with Git - What a branch is.  ","version":"Next","tagName":"h2"},{"title":"Send your contribution by a Pull Request​","type":1,"pageTitle":"Contribute via Github","url":"/doc/pr-2672/en/dev/doc/git#send-your-contribution-by-a-pull-request","content":" Create a Pull Request when you want to share your work with the other contributors and integrate it into the master repository (YunoHost's main repository). When publishing a Pull Request, commonly called PR, contributors will be able to amend, comment, add, correct your contribution before it is fully integrated into the repository.  ","version":"Next","tagName":"h2"},{"title":"Track your contribution and take into account feedback from contributors​","type":1,"pageTitle":"Contribute via Github","url":"/doc/pr-2672/en/dev/doc/git#track-your-contribution-and-take-into-account-feedback-from-contributors","content":" When you've already create a Pull Request (PR), changes to your development branch in the Git repository will automatically be added to the PR. This doesn't require any additional action. You can also include proposed changes from contributors, who, when they audit the code, may find errors or new, better wording.  ","version":"Next","tagName":"h2"},{"title":"Bringing up mistakes and wishes through issues​","type":1,"pageTitle":"Contribute via Github","url":"/doc/pr-2672/en/dev/doc/git#bringing-up-mistakes-and-wishes-through-issues","content":" YunoHost has a specific Git repository to collect issues: GitHub.com/YunoHost/issuesAn issue, also called a ticket, is an identified problem or a development wish; in this case for documentation, but it is valid for any software repository. Within the framework of the YunoHost documentation it will be mainly proposed issues for the development of the documentation, the identified problems being easily correctable.  ","version":"Next","tagName":"h2"},{"title":"Going further with Git and working on your workstation​","type":1,"pageTitle":"Contribute via Github","url":"/doc/pr-2672/en/dev/doc/git#going-further-with-git-and-working-on-your-workstation","content":" Using the power of Git to work on your personal computer means you don't have to create a commit each time you save modified documentation pages. It also allows you to use tools and software that make it easier to distinguish between tags used in a documentation page.  Online resource: docs.microsoft.com - Setting up a Git repository locally for documentation  ","version":"Next","tagName":"h2"},{"title":"Some resources elsewhere on the net to go further​","type":1,"pageTitle":"Contribute via Github","url":"/doc/pr-2672/en/dev/doc/git#some-resources-elsewhere-on-the-net-to-go-further","content":" Managing your code with Git and GitHub - openclassrooms.comGit User Interface - git-scm.com ","version":"Next","tagName":"h2"},{"title":"Markdown Guide","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/dev/doc/markdown_guide","content":"","keywords":"","version":"Next"},{"title":"The different levels of titles​","type":1,"pageTitle":"Markdown Guide","url":"/doc/pr-2672/en/dev/doc/markdown_guide#the-different-levels-of-titles","content":" By writing titles as follows:  # Level 1 title ## Level 2 title ### Level 3 title #### Level 4 title ##### Level 5 title ###### Level 6 title   They appear like this:  Level 1 title  ","version":"Next","tagName":"h2"},{"title":"Level 2 title​","type":1,"pageTitle":"Markdown Guide","url":"/doc/pr-2672/en/dev/doc/markdown_guide#level-2-title","content":" ","version":"Next","tagName":"h2"},{"title":"Level 3 title​","type":1,"pageTitle":"Markdown Guide","url":"/doc/pr-2672/en/dev/doc/markdown_guide#level-3-title","content":" Level 4 title​  Level 5 title​  Level 6 title​  ","version":"Next","tagName":"h3"},{"title":"Formatting in paragraphs​","type":1,"pageTitle":"Markdown Guide","url":"/doc/pr-2672/en/dev/doc/markdown_guide#formatting-in-paragraphs","content":" To type a line break without creating a new paragraph, it is necessary to type two consecutive spaces. Otherwise, the text will continue in a row respecting the general constraints of the page style.  By writing this:  For text in *italic you have to frame it with an asterisk* `*` To write **bold text by two asterisks** `**` You can also ~~bar the text~~ by framing it with two tildes `~`   It reads like this:  For text in italic you have to frame it with an asterisk *To write bold text by two asterisks **You can also bar the text by framing it with two tildes ~  ","version":"Next","tagName":"h2"},{"title":"Create links​","type":1,"pageTitle":"Markdown Guide","url":"/doc/pr-2672/en/dev/doc/markdown_guide#create-links","content":" To create a link to a site outside of the YunoHost documentation:  [Text to display](https://lelien.tld)   will be displayed as such:Text to display  It is the same for the documentation pages, except that the link is internal. The page name is its default route, as defined in its page header:  [Wiki Page](/dev/doc/)   The link will return to the page with the correct language setting if the page exists, or defaults to the next available language (French, usually):Wiki page  tip Note that language codes are thus not to be included at the beginning of the links to other documentation pages: /en, /fr, etc. are superfluous.  ","version":"Next","tagName":"h2"},{"title":"Create anchors​","type":1,"pageTitle":"Markdown Guide","url":"/doc/pr-2672/en/dev/doc/markdown_guide#create-anchors","content":" An anchor allows you to make a link to a specific point in a page, that's how the indexes at the top of the page work. To create an anchor, you need to insert code at the anchor location in the following form :  Text that will be doesn't even know it has an anchor.   What's displayed is:  Text that will be doesn't even know it has an anchor.  It is also possible to return an anchor directly to the title, noting the link in lower case with -s instead of spaces. All that remains is to designate the anchor to the text you want to make interactive:  [My Anchor Returns to Lists](#anchorname) [My Anchor that refers to the title of the tables](#tables)   My Anchor Returns to Lists  My Anchor that refers to the title of the tables  ","version":"Next","tagName":"h3"},{"title":"Displaying images​","type":1,"pageTitle":"Markdown Guide","url":"/doc/pr-2672/en/dev/doc/markdown_guide#displaying-images","content":" To display images, the principle is the same as for links, except that a ! is added before the text to be displayed, which is considered here as the text to be displayed if the image cannot be loaded. A description of the image is appropriate.  ![YunoHost Logo](/img/icons/logo-ynh.svg)     It is possible to make a link with an image, for example:  [![YunoHost Logo](/img/icons/logo-ynh.svg)](/dev/doc/)     The insert of text to be displayed if the image cannot be loaded between the brackets in the image link is not mandatory but strongly recommended.  ","version":"Next","tagName":"h2"},{"title":"Format a quote​","type":1,"pageTitle":"Markdown Guide","url":"/doc/pr-2672/en/dev/doc/markdown_guide#format-a-quote","content":" Quotes are used to highlight a statement made by another person, the wiki itself manages the way it is highlighted. Markdown uses a closing chevron, this symbol: &gt;, to announce a quote. Just add it before the quote, as such:  &gt;First level quotation text &gt;which can be formatted in different lines &gt;&gt; And a second quote &gt;&gt; with double rafters   Will be displayed:  First level quotation text which can be formatted in different lines  And a second quote with double rafters  ","version":"Next","tagName":"h2"},{"title":"Lists​","type":1,"pageTitle":"Markdown Guide","url":"/doc/pr-2672/en/dev/doc/markdown_guide#lists","content":" Lists allow to display a series of texts in an easy presentation, this is how indexes such as the contributing documentation page are written.  ","version":"Next","tagName":"h2"},{"title":"Ordered lists​","type":1,"pageTitle":"Markdown Guide","url":"/doc/pr-2672/en/dev/doc/markdown_guide#ordered-lists","content":" The ordered lists can be incremented as much as you wish, it is not necessary to give the right match to the number. It is possible to write down with 1. and put in three spaces to mark the increment. For a better understanding of the plain text, it may be fine to use the numbers in ascending order to mark the increment, but it is the three consistent `spaces' before the sub-list that will mark the increment.  1. List 1 1. List 2 1. list 3 1. List 3a 1. List 3b 1. List 3b1 1. List 3b2 1. List 3b3 1. List 1 1. List 2 1. list 3 1. List 4 1. List 5 1. list 6   You get:  List 1List 2list 3 List 3aList 3b List 3b1List 3b2List 3b3 List 1List 2list 3 List 4List 5list 6    ","version":"Next","tagName":"h3"},{"title":"Unordered lists​","type":1,"pageTitle":"Markdown Guide","url":"/doc/pr-2672/en/dev/doc/markdown_guide#unordered-lists","content":" To create an unordered list, use the symbols *, + or *. This will not change the appearance of the marker in the text output. It is the incrementing of the list that will define the visual. For a better reading of the plain text, it may be good to use the different symbols to mark the increment, but it is the three spaces before the sub-list that will indicate the increment. As such:  + List 1 + List 2 + list 3 - List 3a - List 3b * List 3b1 * List 3b2 * List 3b3 + List 1 + List 2 + list 3 - List 4 * List 5 + list 6   This will read:  List 1 List 2 list 3 List 3aList 3b List 3b1List 3b2List 3b3 List 1List 2list 3 List 4 List 5 list 6  ","version":"Next","tagName":"h3"},{"title":"Tables​","type":1,"pageTitle":"Markdown Guide","url":"/doc/pr-2672/en/dev/doc/markdown_guide#tables","content":" To create an array, use the vertical bar | and dashes --. It is mandatory to add a line of dashes under the first line of the table. There is no constraint in the size of the table. It is possible to format the array with the : in the second row of the array, three options are available:  Left aligned column\tCentered column\tRight aligned column:-----\t:----:\t-----:  | **One table** | One column | One second | As many as you want | |:-------------:|:----------:|:----------:|:-------------------:| | | And formatted line | | And bold text | | Or *italic* | | More lines | |![An image](/img/icons/icon-cd.jpg) | [Or a link](/dev/) |   Which would say this:  One table\tOne column\tOne second\tAs many as you want\tAnd formatted line And bold text More lines Or a link  ","version":"Next","tagName":"h2"},{"title":"Code block​","type":1,"pageTitle":"Markdown Guide","url":"/doc/pr-2672/en/dev/doc/markdown_guide#code-block","content":" To display plain text, blocks of code' can be created using the grave accentAlt Gr + è` :  Either inline, for example to highlight a key like `Ctrl`.   or directly as a block. The only difference is in the amount of bass accents: At least three low pitched accents at the opening and closing of the block and two low pitched accents that frame the piece of text to be formatted in a line.  Which will give the rendering:  Either inline, for example to highlight a key like Ctrl. '''  or directly as a block. The only difference is in the amount of bass accents: At least three low pitched accents at the opening and closing of the block and two low pitched accents that frame the piece of text to be formatted in a line.   '''  ","version":"Next","tagName":"h2"},{"title":"Useful links​","type":1,"pageTitle":"Markdown Guide","url":"/doc/pr-2672/en/dev/doc/markdown_guide#useful-links","content":" The documentation of the original Markdown language: daringfireball.net/projects/markdownMarkdown Tutorial on markdowntutorial.com  ","version":"Next","tagName":"h2"},{"title":"Going further​","type":1,"pageTitle":"Markdown Guide","url":"/doc/pr-2672/en/dev/doc/markdown_guide#going-further","content":" In a more general way, to understand how a text is formatted just inspect the source document with a note application. This does not mean that the YunoHost wiki will be able to exploit it. There are many other possibilities to use markdown syntax, feel free to add missing features. If you've noticed some missing features and/or have questions, please contact us on the forum or by direct message on the IRC room: #YunoHost on libera.chat. ","version":"Next","tagName":"h2"},{"title":"Technical details for config panel structure and form option types","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/dev/core/ynh_core/forms","content":"","keywords":"","version":"Next"},{"title":"Glossary​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#glossary","content":" You may encounter some named types which are used for simplicity.  Translation: a translated property used for properties: ask, help and Pattern.error a dict with locales as keys and translations as values: ask.en = &quot;The text in english&quot; ask.fr = &quot;Le texte en français&quot; It is not currently possible for translators to translate those string in weblate. a single str for a single english default string help = &quot;The text in english&quot; JSExpression: a str JS expression to be evaluated to true or false: used for properties: visible and enabledoperators availables: ==, !=, &gt;, &gt;=, &lt;, &lt;=, !, &amp;&amp;, ||, +, -, *, /, % and match() Binding: bind a value to a file/property/variable/getter/setter/validator save the value in settings.yaml when not definednothing at all with &quot;null&quot;a custom getter/setter/validator with &quot;null&quot; + a function starting with get__, set__, validate__ in scripts/configa variable/property in a file with :__FINALPATH__/my_file.phpa whole file with __FINALPATH__/my_file.php Pattern: a dict with a regex to match the value against and an error message pattern.regexp = '^[A-F]\\d\\d$' pattern.error = &quot;Provide a room number such as F12: one uppercase and 2 numbers&quot; # or with translated error pattern.error.en = &quot;Provide a room number such as F12: one uppercase and 2 numbers&quot; pattern.error.fr = &quot;Entrez un numéro de salle comme F12: une lettre majuscule et deux chiffres.&quot; IMPORTANT: your pattern.regexp should be between simple quote, not double.  ","version":"Next","tagName":"h2"},{"title":"Configuration panel structure​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#configuration-panel-structure","content":" ","version":"Next","tagName":"h2"},{"title":"ConfigPanel​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#configpanel","content":" This is the 'root' level of the config panel toml file  Examples​  version = 1.0 [config] # …refer to Panels doc   Properties​  version: float (default: 1.0), version that the config panel supports in terms of features.i18n (optional): str, an i18n property that let you internationalize options text. However this feature is only available in core configuration panel (like yunohost domain config), prefer the use Translation in name, help, etc.    ","version":"Next","tagName":"h3"},{"title":"Panel​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#panel","content":" Panels are, basically, sections grouped together. Panels are dicts defined inside a ConfigPanel file and require a unique id (in the below example, the id is main). Keep in mind that this id will be used in CLI to refer to the panel, so choose something short and meaningfull.  Examples​  [main] name.en = &quot;Main configuration&quot; name.fr = &quot;Configuration principale&quot; help = &quot;&quot; services = [&quot;__APP__&quot;, &quot;nginx&quot;] [main.customization] # …refer to Sections doc   Properties​  name: Translation or str, displayed as the panel titlehelp (optional): Translation or str, text to display before the first sectionservices (optional): list of services names to reload-or-restart when any option's value contained in the panel changes &quot;__APP__ will refer to the app instance name actions: FIXME not sure what this does    ","version":"Next","tagName":"h3"},{"title":"Section​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#section","content":" Sections are, basically, options grouped together. Sections are dicts defined inside a Panel and require a unique id (in the below example, the id is customization prepended by the panel's id main). Keep in mind that this combined id will be used in CLI to refer to the section, so choose something short and meaningfull. Also make sure to not make a typo in the panel id, which would implicitly create an other entire panel.  If at least one button is present it then become an action section. Options in action sections are not considered settings and therefor are not saved, they are more like parameters that exists only during the execution of an action. FIXME i'm not sure we have this in code.  Examples​  [main] [main.customization] name.en = &quot;Advanced configuration&quot; name.fr = &quot;Configuration avancée&quot; help = &quot;Every form items in this section are not saved.&quot; services = [&quot;__APP__&quot;, &quot;nginx&quot;] [main.customization.option_id] type = &quot;string&quot; # …refer to Options doc   Properties​  name (optional): Translation or str, displayed as the section's title if anyhelp: Translation or str, text to display before the first optionservices (optional): list of services names to reload-or-restart when any option's value contained in the section changes &quot;__APP__ will refer to the app instance name optional: bool (default: true), set the default optional prop of all Options in the sectionvisible: bool or JSExpression (default: true), allow to conditionally display a section depending on user's answers to previous questions. Be careful that the visible property should only refer to previous options's value. Hence, it should not make sense to have a visible property on the very first section.    ","version":"Next","tagName":"h3"},{"title":"List of all option types​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#list-of-all-option-types","content":" ","version":"Next","tagName":"h2"},{"title":"Common properties​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#common-properties","content":" Options are fields declaration that renders as form items, button, alert or text in the web-admin and printed or prompted in CLI. They are used in app manifests to declare the before installation form and in config panels.  Have a look at the app config panel doc for details about Panels and Sections.  ! IMPORTANT: as for Panels and Sections you have to choose an id, but this one should be unique in all this document, even if the question is in an other panel.  Example​  [section.my_option_id] type = &quot;string&quot; # ask as `str` ask = &quot;The text in english&quot; # ask as `dict` ask.en = &quot;The text in english&quot; ask.fr = &quot;Le texte en français&quot; # advanced props visible = &quot;my_other_option_id != 'success'&quot; readonly = true # much advanced: config panel only? bind = &quot;null&quot;   Properties​  type: the actual type of the option, such as 'markdown', 'password', 'number', 'email', ...ask: Translation (default to the option's id if not defined): text to display as the option's label for inputs or text to display for readonly optionsin config panels, questions are displayed on the left side and therefore have not much space to be rendered. Therefore, it is better to use a short question, and use the help property to provide additional details if necessary. visible (optional): bool or JSExpression (default: true) define if the option is diplayed/askedif false and used alongside readonly = true, you get a context only value that can still be used in JSExpressions readonly (optional): bool (default: false, forced to true for readonly types): If true for input types: forbid mutation of its value bind (optional): Binding, config panels only! A powerful feature that let you configure how and where the setting will be read, validated and written if not specified, the value will be read/written in the app settings.ymlif &quot;null&quot;: the value will not be stored at all (can still be used in context evaluations)if in scripts/config there's a function named: get__my_option_id: the value will be gathered from this custom getterset__my_option_id: the value will be passed to this custom setter where you can do whatever you want with the valuevalidate__my_option_id: the value will be passed to this custom validator before any custom setter if bind is a file path: if the path starts with :, the value be saved as its id's variable/property counterpart this only works for first level variables/properties and simple types (no array) else the value will be stored as the whole content of the fileyou can use __FINALPATH__ or __INSTALL_DIR__ in your path to point to dynamic install paths FIXME are other global variables accessible? refer to bind doc for explaination and examples    ","version":"Next","tagName":"h3"},{"title":"Common inputs properties​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#common-inputs-properties","content":" Rest of the option types available are considered inputs.  Example​  [section.my_option_id] type = &quot;string&quot; # …any common props… + optional = false redact = false default = &quot;some default string&quot; help = &quot;You can enter almost anything!&quot; example = &quot;an example string&quot; placeholder = &quot;write something…&quot;   Properties​  common propertiesoptional: bool (default: false, but true in config panels)redact: bool (default: false), to redact the value in the logs when the value contain private informationdefault: depends on type, the default value to assign to the option in case of readonly values, you can use this default to assign a value (or return a dynamic default from a custom getter) help (optional): Translation, to display a short help message in cli and web-adminexample (optional): str, to display an example value in web-admin onlyplaceholder (optional): str, shown in the web-admin fields only    ","version":"Next","tagName":"h3"},{"title":"markdown (readonly)​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#markdown-readonly","content":" Display markdown multi-line content. Markdown is currently only rendered in the web-admin  Example​  [section.my_option_id] type = &quot;display_text&quot; ask = &quot;Text **rendered** in markdown.&quot;   Properties​  common properties    ","version":"Next","tagName":"h3"},{"title":"alert (readonly)​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#alert-readonly","content":" Alerts displays a important message with a level of severity. You can use markdown in ask but will only be rendered in the web-admin.  Example​  [section.my_option_id] type = &quot;alert&quot; ask = &quot;The configuration seems to be manually modified...&quot; style = &quot;warning&quot; icon = &quot;warning&quot;   Properties​  common propertiesstyle: any of &quot;success|info|warning|danger&quot; (default: &quot;info&quot;)icon (optional): any icon name from Fork Awesome Currently only displayed in the web-admin    ","version":"Next","tagName":"h3"},{"title":"button (readonly)​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#button-readonly","content":" Triggers actions. Available only in config panels. Renders as a button in the web-admin and can be called with yunohost [app|domain|settings] action run &lt;action_id&gt; in CLI.  Every options defined in an action section (a config panel section with at least one button) is guaranted to be shown/asked to the user and available in scripts/config's scope.check examples in advanced use cases.  Example​  [section.my_option_id] type = &quot;button&quot; ask = &quot;Break the system&quot; style = &quot;danger&quot; icon = &quot;bug&quot; # enabled only if another option's value (a `boolean` for example) is positive enabled = &quot;aknowledged&quot;   To be able to trigger an action we have to add a bash function starting with run__ in your scripts/config  run__my_action_id() { ynh_print_info &quot;Running 'my_action_id' action&quot; }   Properties​  common properties bind: forced to &quot;null&quot; style: any of &quot;success|info|warning|danger&quot; (default: &quot;success&quot;)enabled: JSExpression or bool (default: true) when used with JSExpression you can enable/disable the button depending on context icon (optional): any icon name from Fork Awesome Currently only displayed in the web-admin    ","version":"Next","tagName":"h3"},{"title":"string (string)​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#string-string","content":" Ask for a simple string.  Example​  [section.my_option_id] type = &quot;string&quot; default = &quot;E10&quot; pattern.regexp = '^[A-F]\\d\\d$' pattern.error = &quot;Provide a room like F12 : one uppercase and 2 numbers&quot;   Properties​  common inputs properties default: &quot;&quot; pattern (optional): Pattern, a regex to match the value against    ","version":"Next","tagName":"h3"},{"title":"text (string)​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#text-string","content":" Ask for a multiline string. Renders as a textarea in the web-admin and by opening a text editor on the CLI.  Example​  [section.my_option_id] type = &quot;text&quot; default = &quot;multi\\nline\\ncontent&quot;   Properties​  common inputs properties default: &quot;&quot; pattern (optional): Pattern, a regex to match the value against    ","version":"Next","tagName":"h3"},{"title":"password (input)​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#password-input","content":" Ask for a password. The password is tested as a regular user password (at least 8 chars)  Example​  [section.my_option_id] type = &quot;password&quot;   Properties​  common inputs properties default: forced to &quot;&quot;redact: forced to trueexample: forbidden    ","version":"Next","tagName":"h3"},{"title":"color (input)​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#color-input","content":" Ask for a color represented as a hex value (with possibly an alpha channel). Renders as color picker in the web-admin and as a prompt that accept named color like yellow in CLI.  Example​  [section.my_option_id] type = &quot;color&quot; default = &quot;#ff0&quot;   Properties​  common inputs properties default: &quot;&quot;    ","version":"Next","tagName":"h3"},{"title":"number (input)​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#number-input","content":" Ask for a number (an integer).  Example​  [section.my_option_id] type = &quot;number&quot; default = 100 min = 50 max = 200 step = 5   Properties​  common inputs properties type: number or range (input or slider in the web-admin) min (optional): minimal int value inclusivemax (optional): maximal int value inclusivestep (optional): currently only used in the webadmin as the &lt;input/&gt; step jump    ","version":"Next","tagName":"h3"},{"title":"boolean (input)​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#boolean-input","content":" Ask for a boolean. Renders as a switch in the web-admin and a yes/no prompt in CLI.  Example​  [section.my_option_id] type = &quot;boolean&quot; default = 1 yes = &quot;agree&quot; no = &quot;disagree&quot;   Properties​  common inputs properties default: 0 yes (optional): (default: 1) define as what the thruthy value should output can be true, True, &quot;yes&quot;, etc. no (optional): (default: 0) define as what the thruthy value should output can be 0, &quot;false&quot;, &quot;n&quot;, etc.    ","version":"Next","tagName":"h3"},{"title":"date (input)​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#date-input","content":" Ask for a date in the form &quot;2025-06-14&quot;. Renders as a date-picker in the web-admin and a regular prompt in CLI.  Can also take a timestamp as value that will output as an ISO date string.  Example​  [section.my_option_id] type = &quot;date&quot; default = &quot;2070-12-31&quot;   Properties​  common inputs properties default: &quot;&quot;    ","version":"Next","tagName":"h3"},{"title":"time (input)​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#time-input","content":" Ask for an hour in the form &quot;22:35&quot;. Renders as a date-picker in the web-admin and a regular prompt in CLI.  Example​  [section.my_option_id] type = &quot;time&quot; default = &quot;12:26&quot;   Properties​  common inputs properties default: &quot;&quot;    ","version":"Next","tagName":"h3"},{"title":"email (input)​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#email-input","content":" Ask for an email. Validation made with python-email-validator  Example​  [section.my_option_id] type = &quot;email&quot; default = &quot;Abc.123@test-example.com&quot;   Properties​  common inputs properties default: &quot;&quot;    ","version":"Next","tagName":"h3"},{"title":"path (string)​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#path-string","content":" Ask for an web path (the part of an url after the domain). Used by default in app install to define from where the app will be accessible.  Example​  [section.my_option_id] type = &quot;path&quot; default = &quot;/&quot;   Properties​  common inputs properties default: &quot;&quot; pattern (optional): Pattern, a regex to match the value against    ","version":"Next","tagName":"h3"},{"title":"url (string)​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#url-string","content":" Ask for any url.  Example​  [section.my_option_id] type = &quot;url&quot; default = &quot;https://example.xn--zfr164b/@handle/&quot;   Properties​  common inputs properties default: &quot;&quot; pattern (optional): Pattern, a regex to match the value against    ","version":"Next","tagName":"h3"},{"title":"file (input)​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#file-input","content":" Ask for file. Renders a file prompt in the web-admin and ask for a path in CLI.  Example​  [section.my_option_id] type = &quot;file&quot; accept = &quot;.json&quot; # bind the file to a location to save the file there bind = &quot;/tmp/my_file.json&quot;   Properties​  common inputs properties default: &quot;&quot; accept: a comma separated list of extension to accept like &quot;.conf, .ini /!\\ currently only work on the web-admin    ","version":"Next","tagName":"h3"},{"title":"select (choices)​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#select-choices","content":" Ask for value from a limited set of values. Renders as a regular &lt;select/&gt; in the web-admin and as a regular prompt in CLI with autocompletion of choices.  Example​  [section.my_option_id] type = &quot;select&quot; choices = [&quot;one&quot;, &quot;two&quot;, &quot;three&quot;] choices = &quot;one,two,three&quot; default = &quot;two&quot;   Properties​  common inputs properties default: &quot;&quot;, obviously the default has to be empty or an available choices item. choices: a (coma separated) list of values    ","version":"Next","tagName":"h3"},{"title":"tags (choices)​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#tags-choices","content":" Ask for series of values. Optionally from a limited set of values. Renders as a multi select in the web-admin and as a regular prompt in CLI without autocompletion of choices.  This output as a coma separated list of strings &quot;one,two,three&quot;  Example​  [section.my_option_id] type = &quot;tags&quot; default = &quot;word,another word&quot; [my_other_option_id] type = &quot;tags&quot; choices = [&quot;one&quot;, &quot;two&quot;, &quot;three&quot;] # choices = &quot;one,two,three&quot; default = &quot;two,three&quot;   Properties​  common inputs properties default: &quot;&quot;, obviously the default has to be empty or an available choices item. pattern (optional): Pattern, a regex to match all the values againstchoices (optional): a (coma separated) list of valuesicon (optional): any icon name from Fork Awesome Currently only displayed in the web-admin    ","version":"Next","tagName":"h3"},{"title":"domain (choices)​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#domain-choices","content":" Ask for a user domain. Renders as a select in the web-admin and as a regular prompt in CLI with autocompletion of registered domains.  Example​  [section.my_option_id] type = &quot;domain&quot;   Properties​  common inputs properties default: forced to the instance main domain    ","version":"Next","tagName":"h3"},{"title":"app (choices)​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#app-choices","content":" Ask for a user app. Renders as a select in the web-admin and as a regular prompt in CLI with autocompletion of installed apps.  Example​  [section.my_option_id] type = &quot;app&quot; filter = &quot;is_webapp&quot;   Properties​  common inputs properties default: &quot;&quot; filter (optional): JSExpression with what yunohost app info &lt;app_id&gt; --full returns as context (only first level keys)    ","version":"Next","tagName":"h3"},{"title":"user (choices)​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#user-choices","content":" Ask for a user. Renders as a select in the web-admin and as a regular prompt in CLI with autocompletion of available usernames.  Example​  [section.my_option_id] type = &quot;user&quot;   Properties​  common inputs properties default: the first admin user found    ","version":"Next","tagName":"h3"},{"title":"group (choices)​","type":1,"pageTitle":"Technical details for config panel structure and form option types","url":"/doc/pr-2672/en/dev/core/ynh_core/forms#group-choices","content":" Ask for a group. Renders as a select in the web-admin and as a regular prompt in CLI with autocompletion of available groups.  Example​  [section.my_option_id] type = &quot;group&quot; default = &quot;visitors&quot;   Properties​  common inputs properties default: &quot;all_users&quot;, &quot;visitors&quot; or &quot;admins&quot; (default: &quot;all_users&quot;) ","version":"Next","tagName":"h3"},{"title":"Packaging applications","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/packaging/","content":"","keywords":"","version":"Next"},{"title":"Packaging philosophy​","type":1,"pageTitle":"Packaging applications","url":"/doc/pr-2672/en/packaging/#packaging-philosophy","content":" The simplicity of using apps is a key feature of YunoHost. As a packager, you should remember these principles:  The admin should not have a PhD in computer science to be able to install, configure and use your application: try to assume that the admin doesn't know about advanced computer concepts; Less is more, Keep it simple: don't overcrowd the admin with a dozens technical questions; Things should work out of the box: for example, the admin should not have to manually finish the installation process by manually filling in database credentials; YunoHost app packaging is not just about installing sources and dependencies: it's also about maintenance (upgrade, backup...) and integrating the app in the YunoHost ecosystem (NGINX, SSO/LDAP, Fail2Ban, application catalog, UI/UX...)  ","version":"Next","tagName":"h2"},{"title":"2. Prerequisites​","type":1,"pageTitle":"Packaging applications","url":"/doc/pr-2672/en/packaging/#2-prerequisites","content":" Before diving in, this documentation assumes that:  You already are a YunoHost admin yourself and already know what the install workflow looks like;)You are somewhat familiar with (or are willing to learn) system administration and bash programming;You are somewhat familiar with (or are willing to learn) Git;You are comfortable with tinkering and debugging computer stuff in general.  You are also encouraged to join the app packaging chatroom to ask any question you may have!  At some point, you will also want to have a dev/test environment, either using VirtualBox or LXC/ynh-dev which is meant for the core but can totally be used for developping apps. You can also setup a dev/test VPS on your favourite hosting provider, or even develop on your prod if you like to live dangerously;).  ","version":"Next","tagName":"h2"},{"title":"3. Notes about the history of YunoHost's app packaging​","type":1,"pageTitle":"Packaging applications","url":"/doc/pr-2672/en/packaging/#3-notes-about-the-history-of-yunohosts-app-packaging","content":" Many things in YunoHost, and YunoHost app packaging format, are historical or were designed in an organic fashion. Thus some aspects may legitimately feel old.  The &quot;v0&quot; of app packaging consisted in writing raw bash scripts with no real standardization/constrain.  Over time, recurrent steps (such as installing dependencies with apt, or setting up the NGINX config) where formalized into standardized bash functions, aka &quot;helpers&quot;. This pretty much marked the beginning of the &quot;v1&quot; packaging era.  Various tools were implemented to test the app and standardize their behavior.  After a while, a set of common practices and conventions emerged and is somewhat reflected and maintain in the example_ynh template application. While it is tempting for dev-oriented folks to change variable naming schemes or refactorize the structure of scripts, it turns out that it is even more important to stick to the common set of practices (even though arbitrary and not elegant) to ease the maintenance of all apps by any member of the packaging community accross all repos!  Nevertheless, even though helpers existed, the inherent structure of apps was hard and boring to maintain with too many redundant pieces of code or filled with funky historical conventions. A new v2 format has been designed and added to YunoHost 11.1 in early 2023 in the hope to modernize and simplify app packaging and improve the UI/UX of YunoHost.  However, a future v3 format has yet to come to further simplify app packaging (such as taking care of NGINX/systemd/... configurations, removing the need to manually write remove/backup/restore scripts, etc.) ","version":"Next","tagName":"h2"},{"title":"Advanced packagers","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/packaging/advanced/advanced_packagers","content":"","keywords":"","version":"Next"},{"title":"Building your infrastructure​","type":1,"pageTitle":"Advanced packagers","url":"/doc/pr-2672/en/packaging/advanced/advanced_packagers#building-your-infrastructure","content":" First idea is to build several VMs, LXCs or VirtualBoxs with YunoHost to let you parallelize actions, like having the first one installing an app, the second installing another app, the third one debugging an app upgrade, etc...  After first installation of those VMs/LXCs, each one has to be reacheable with its domain name, like for example:  ynh1.mydomain.orgynh2.mydomain.orgynh3.mydomain.org  For that you will need a public IP for each one or reverse proxy... If your are lucky enough to have IPV6 and a /64 IPV6 scope, it won't be a problem to assign a public IPV6 to each YunoHost.  Another way the DNS stuff is to simply use an hosts file.  In addition, it's helpfull to have several domains names for each YunoHost, for example:  ynh1.mydomain.org test11.mydomain.orgtest12.mydomain.orgtest13.mydomain.org ynh2.mydomain.org test21.mydomain.orgtest22.mydomain.orgtest23.mydomain.org ynh3.mydomain.org test31.mydomain.orgtest32.mydomain.orgtest33.mydomain.org  With that you will be able to install two apps on the same YunoHost first one at https://test11.mydomain.org and a second app at https://test12.mydomain.org (let say the first app is nextcloud_ynh the second one is collabora_ynh or onlyoffice_ynh)  When your infrastructure is up and ready, you will have to do snapshots of each VMs/LXCs. Doing that, you will be able to revert back to an happy and healthy YunoHost after doing install/backup/restore/upgrade of and app...  Don't forget to regularly upgrade your YunoHosts VMs/LXCs to the last release doing: revert back to last happy/healthy YunoHost snapshot and doing yunohost domain cert renew --no-check &amp;&amp; yunohost tools update &amp;&amp; yunohost tools upgrade --apps &amp;&amp; yunohost tools upgrade --system &amp;&amp; apt autoremove. Take a snapshot after that successfull full upgrade. And after some testings or one week later, remove old snapshot. PS: that can be automated...  Example of a script to upgrade a master VirtualBox VM  #!/bin/bash # printers normal=&quot;\\e[0m&quot; bold=&quot;\\e[1m&quot; white=&quot;\\e[97m&quot; blue=&quot;\\e[34m&quot; echo_info() { echo -e &quot;[${bold}${blue}INFO${normal}] ${bold}${white}$1${normal}&quot; } echo_info &quot;### Update host&quot; sudo apt update sudo apt dist-upgrade sudo yunohost settings set security.password.user.strength -v -1 sudo yunohost settings set security.password.admin.strength -v -1 echo_info &quot;### Update package_check&quot; ( cd package_check; git pull) echo_info &quot;### Update LXC container&quot; package_check/sub_scripts/lxc_upgrade.sh echo_info &quot;### Clean hosts&quot; sudo apt autoclean sudo apt autoremove echo_info &quot;### Fill free space with zero&quot; cat /dev/zero &gt; zeros ; sync ; rm zeros echo_info &quot;### Run 'VBoxManage modifyhd --compact file.vdi' to reduce the size of this VM&quot;   Example of a script to customize a cloned VM  #!/bin/bash master_domain=domain1.fr domainX=domain2.fr master_ip=70 ipX=68 sudo yunohost --admin-password admin domain add $domainX sudo yunohost --admin-password admin domain add sous.$domainX sudo yunohost --admin-password admin tools maindomain -n $domainX sudo yunohost --admin-password admin domain remove $master_domain sudo yunohost --admin-password admin domain remove sous.$master_domain sudo sed -i &quot;s/address 192.168.1.$master_ip/address 192.168.1.${ipX}/&quot; /etc/network/interfaces sudo reboot   Doing that you will have all the time a full/ready to go YunoHosts infrastructure for advanced packagers. And if require, you can have some VMs/LXCs runnning the YunoHost testing or YunoHost next Debian main version.  ","version":"Next","tagName":"h2"},{"title":"Having your packages/commits available in each VMs/LXCs​","type":1,"pageTitle":"Advanced packagers","url":"/doc/pr-2672/en/packaging/advanced/advanced_packagers#having-your-packagescommits-available-in-each-vmslxcs","content":" There are several ways to have your freshly created package available from each VMs/LXCs 1- Do an ssh from the YunoHost VM/LXC to a central repository on your computer 2- Having a shared directory available from each VMs, LXCs VirtualBoxs 3- Rsync you central repository to each VM/LXC 4- Use syncthing to syncrhonise you main repository on each VM/LXC  Example of a script to mount as shared directory a packaging directory into a VirtualBox VM  #!/bin/bash shared_folder=my_directory # printers normal=&quot;\\e[0m&quot; bold=&quot;\\e[1m&quot; white=&quot;\\e[97m&quot; blue=&quot;\\e[34m&quot; echo_info() { echo -e &quot;[${bold}${blue}INFO${normal}] ${bold}${white}$1${normal}&quot; } # Create the main directory for the mount sudo mkdir -p &quot;./$shared_folder&quot; # Mount ynh-dev directory from the host echo_info &quot;Mount shared directory $shared_folder&quot; sudo mount -o defaults -t vboxsf $shared_folder &quot;./$shared_folder&quot;   ","version":"Next","tagName":"h2"},{"title":"Shortcuts​","type":1,"pageTitle":"Advanced packagers","url":"/doc/pr-2672/en/packaging/advanced/advanced_packagers#shortcuts","content":" Use and abuse of yunohost app install --args argument  You can do ugly thing considering mynewapp is the name/REPLACEBYYOURAPP of your app  To install your mynewapp app:  YNHAPP=mynewapp yunohost app install /mycentralrepo/${YNHAPP}_ynh/ --debug --force --args domain=test11.mydomain.org&amp;path=/myapp&amp;admin=alice&amp;is_public=true&amp;language=en&amp;password=awesomepassword   To remove your mynewapp app and reinstall it  YNHAPP=mynewapp yunohost app remove ${YNHAPP} --debug &amp;&amp; yunohost app install /mycentralrepo/${YNHAPP}_ynh/ --debug --force --args domain=test11.mydomain.org&amp;path=/myapp&amp;admin=alice&amp;is_public=true&amp;language=en&amp;password=awesomepassword   To backup your mynewapp app  YNHAPP=mynewapp yunohost backup create --apps ${YNHAPP} --debug   To restore your mynewapp app from the backup just made  YNHAPP=mynewapp yunohost backup restore XXXXXXXX-XXXXXX --apps ${YNHAPP} --debug   To upgrade your mynewapp  YNHAPP=mynewapp yunohost app upgrade ${YNHAPP} -f /mycentralrepo/${YNHAPP}_ynh/ --debug   With that, you will be able to launch different actions on differents YunoHost VMs/LXCs  ","version":"Next","tagName":"h2"},{"title":"Package_check​","type":1,"pageTitle":"Advanced packagers","url":"/doc/pr-2672/en/packaging/advanced/advanced_packagers#package_check","content":" With advanced packaging comes CI_package_check, it lets you serialize and automate package_check.  ","version":"Next","tagName":"h2"},{"title":"Managing all the parallel packaging you are working on​","type":1,"pageTitle":"Advanced packagers","url":"/doc/pr-2672/en/packaging/advanced/advanced_packagers#managing-all-the-parallel-packaging-you-are-working-on","content":" When you do several things at the same time, sometimes you don't remember what is the next step for this or that app. A good tool to keep your TODO list organized is to use a kaban like apps:  KanboardWekan ","version":"Next","tagName":"h2"},{"title":"Config Panels","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/packaging/advanced/config_panels","content":"","keywords":"","version":"Next"},{"title":"Community examples​","type":1,"pageTitle":"Config Panels","url":"/doc/pr-2672/en/packaging/advanced/config_panels#community-examples","content":" Check the example_ynh app toml and the basic scripts/config exampleCheck config panels of other appsCheck scripts/config of other apps  ","version":"Next","tagName":"h2"},{"title":"Overview​","type":1,"pageTitle":"Config Panels","url":"/doc/pr-2672/en/packaging/advanced/config_panels#overview","content":" From an app packager perspective, config panels are defined in config_panel.toml at the root of the app repository. It is coupled to the scripts/config script, which may be used to define custom getters/setters/validations/actions. However, most use cases should be covered automagically by the core, thus it may not be necessary to define such a config script at all!  The config_panel.toml describes one or several panels, containing sections, each containing questions generally binded to a params in the app's actual configuration files.  Let's imagine that the upstream app is configured using this simple config.yml file stored in the app's install directory (typically /var/www/$app/config.yml):  title: 'My dummy app' theme: 'white' max_rate: 10 max_age: 365   A simple configuration panel can be created with this syntax:  version = &quot;1.0&quot; [main] [main.main] [main.main.title] ask.en = &quot;Title&quot; type = &quot;string&quot; bind = &quot;:__INSTALL_DIR__/config.yml&quot; [main.main.theme] ask.en = &quot;Theme&quot; type = &quot;select&quot; choices = [&quot;white&quot;, &quot;dark&quot;] bind = &quot;:__INSTALL_DIR__/config.yml&quot; [main.limits] [main.limits.max_rate] ask.en = &quot;Maximum display rate&quot; type = &quot;number&quot; bind = &quot;:__INSTALL_DIR__/config.yml&quot; [main.limits.max_age] ask.en = &quot;Duration of a dummy&quot; type = &quot;number&quot; bind = &quot;:__INSTALL_DIR__/config.yml&quot;   Here, a main panel is created, containing the main and limits sections, containing questions corresponding to app options in config.yml file. Thanks to the bind property, all those questions are read/written to their values in the actual config.yml file.  ","version":"Next","tagName":"h2"},{"title":"Supported questions types and properties​","type":1,"pageTitle":"Config Panels","url":"/doc/pr-2672/en/packaging/advanced/config_panels#supported-questions-types-and-properties","content":" You can learn more about the full list of option types and their properties in their dedicated page.  ","version":"Next","tagName":"h2"},{"title":"The \"bind\" statement​","type":1,"pageTitle":"Config Panels","url":"/doc/pr-2672/en/packaging/advanced/config_panels#the-bind-statement","content":" Without any bind statement attached to a config panel property, values are only read/written from/to the app's settings file (/etc/yunohost/$app/settings.yml). This is usually not very useful in practice.  Using bind = &quot;:/some/config/file&quot;, one declares that the actual truth used by the app lives in /some/config/file. The config panel will read/write the value from/to this file. YunoHost will automagically adapt to classic formats such as YAML, TOML, JSON, INI, PHP, .env-like and .py. (At least, assuming we're dealing with simple key&lt;-&gt;value mappings)  A simple real-life example looks like:  [main.main.theme] type = &quot;string&quot; bind = &quot;:__INSTALL_DIR__/config.yml&quot;   In which case, YunoHost will look for something like a key/value, with the key being theme inside the app's config.yml.  If the question id in the config panel (here, theme) differs from the key in the actual conf file (let's say it's not theme but css_theme), then the syntax becomes:  [main.main.theme] type = &quot;string&quot; bind = &quot;css_theme:__FINALPATH__/config.yml&quot;   You may also encounter situations such as:  { &quot;foo&quot;: { &quot;max&quot;: 123 }, &quot;bar&quot;: { &quot;max&quot;: 456 } }   In which case if we want to interface with foo's max value, let's write:  bind = &quot;foo&gt;max:__INSTALL_DIR__/conf.json&quot;   ","version":"Next","tagName":"h2"},{"title":"\"Binding\" to an entire file​","type":1,"pageTitle":"Config Panels","url":"/doc/pr-2672/en/packaging/advanced/config_panels#binding-to-an-entire-file","content":" Useful when using a question file or text for which you want to save the raw content directly as a file on the system.  For example to be able to manipulate an image:  [panel.section.logo] type = &quot;file&quot; bind = &quot;__INSTALL_DIR__/assets/logo.png&quot;   Or an entire text file:  [panel.section.config_content] type = &quot;text&quot; bind = &quot;__INSTALL_DIR__/config.ini&quot; default = &quot;This is the default content&quot;   ","version":"Next","tagName":"h3"},{"title":"Custom getters/setters/validators (a.k.a bind=null)​","type":1,"pageTitle":"Config Panels","url":"/doc/pr-2672/en/packaging/advanced/config_panels#custom-getterssettersvalidators-aka-bindnull","content":" More complex use-case may appear, such as:  you want to expose some &quot;dynamic&quot; information in the config panel, such as computed health status, computed disk usage, dynamic list of options, ...password handling, where the data may be written but can't be readthe config file format is not supported (e.g. xml, csv, ...)...  You can create specific getter/setters functions inside the config script of the app to customize how the information is read/written. The basic structure of the script is:  #!/bin/bash source /usr/share/yunohost/helpers ynh_abort_if_errors # Put your getter, setter, validator or action here # Keep this last line ynh_app_config_run $1   Custom getters​  A question's getter is the function used to read the current value/state. Custom getters are defined using bash functions called getter__QUESTION_SHORT_KEY() which returns data through stdout.  Stdout can be generated into one of those formats:  either just the raw value,or a YAML message, containing the value and other metadata and properties (for example the style of an alert, the list of available choices of a select, etc.) Note that in the first case, if the raw value contains any yaml-sensitive character (e.g. # which is interpreted as a comment in yaml), make sure it is returned between escaped quotes (cf. dedicated example below) as it will be converted to yaml by YunoHost core in the end.  Basic example with raw stdout: get the timezone on the system config_panel.toml [main.main.timezone] ask = &quot;Timezone&quot; type = &quot;string&quot; scripts/config get__timezone() { echo &quot;$(cat /etc/timezone)&quot; }   Basic example with raw stdout containing a yaml-sensitive character: return a HTML color code matched in a file config_panel.toml [main.default_colors.background] ask = &quot;Default background color&quot; type = &quot;color&quot; default = &quot;#cccccc&quot; scripts/config get__background() { current_color=$(grep 'id=&quot;backgroundColorPicker' &quot;$install_dir/index.html&quot; | grep -oP 'value=&quot;\\K[^&quot;]*') # e.g. #2B748B # explicitely add escaped quotes to protect YAML-sensitive comment char ('#') echo &quot;\\&quot;$current_color\\&quot;&quot; }   Basic example with yaml-formated stdout : Display a list of available plugins config_panel.toml [main.plugins.plugins] ask = &quot;Plugin to activate&quot; type = &quot;tags&quot; choices = [] scripts/config get__plugins() { echo &quot;choices: [$(ls $install_dir/plugins/ | tr '\\n' ',')]&quot; }   Advanced example with yaml-formated stdout : Display the status of a VPN config_panel.toml [main.cube.status] ask = &quot;Custom getter alert&quot; type = &quot;alert&quot; style = &quot;info&quot; bind = &quot;null&quot; # no behaviour on scripts/config get__status() { if [ -f &quot;/sys/class/net/tun0/operstate&quot; ] &amp;&amp; [ &quot;$(cat /sys/class/net/tun0/operstate)&quot; == &quot;up&quot; ] then cat &lt;&lt; EOF style: success ask: en: Your VPN is running :) EOF else cat &lt;&lt; EOF style: danger ask: en: Your VPN is down EOF fi }   Custom setters​  A question's setter is the function used to set new value/state. Custom setters are defined using bash functions called setter__QUESTION_SHORT_KEY(). In the context of the setter function, variables named with the various quetion's short keys are avaible ... for example the user-specified date for question [main.main.theme] is available as $theme.  When doing non-trivial operations to set a value, you may want to use ynh_print_info to inform the admin about what's going on.  Basic example : Set the system timezone config_panel.toml [main.main.timezone] ask = &quot;Timezone&quot; type = &quot;string&quot; scripts/config set__timezone() { echo &quot;$timezone&quot; &gt; /etc/timezone ynh_print_info &quot;The timezone has been changed to $timezone&quot; }   ","version":"Next","tagName":"h3"},{"title":"User input validations​","type":1,"pageTitle":"Config Panels","url":"/doc/pr-2672/en/packaging/advanced/config_panels#user-input-validations","content":" You will sometimes need to validate data provided by the user before saving it.  Simple validation can be achieved using a regex pattern:  pattern.regexp = '^.+@.+$' pattern.error = 'An email is required for this field'   You can also restrict the accepted values using a choices list.  choices.foo = &quot;Foo (some explanation)&quot; choices.bar = &quot;Bar (moar explanation)&quot; choices.loremipsum = &quot;Lorem Ipsum Dolor Sit Amet&quot;   Some other type specific argument exist like  type\tvalidation argumentsnumber, range\tmin, max, step file\taccept boolean\tyes no  See also : custom validators  ","version":"Next","tagName":"h2"},{"title":"Custom validators​","type":1,"pageTitle":"Config Panels","url":"/doc/pr-2672/en/packaging/advanced/config_panels#custom-validators","content":" In addition to the &quot;simple&quot; validation mechanism (see the 'option' doc), custom validators can be defined in a similar fashion as custom getters/setters:  validate__login_user() { if [[ &quot;${#login_user}&quot; -lt 4 ]] then echo 'User login is too short, should be at least 4 chars' fi }   ","version":"Next","tagName":"h3"},{"title":"visible & enabled expression evaluation​","type":1,"pageTitle":"Config Panels","url":"/doc/pr-2672/en/packaging/advanced/config_panels#visible--enabled-expression-evaluation","content":" Sometimes we may want to conditionaly display a message or prompt for a value, for this we have the visible prop. And we may want to allow a user to trigger an action only if some condition are met, for this we have the enabled prop.  Expressions are evaluated against a context containing previous values of the current section's options. This quite limited current design exists because on the web-admin or on the CLI we cannot guarantee that a value will be present in the form if the user queried only a single panel/section/option. In the case of an action, the user will be shown or asked for each of the options of the section in which the button is present.  The expression has to be written in javascript (this has been designed for the web-admin first and is converted to python on the fly on the cli).  Available operators are: ==, !=, &gt;, &gt;=, &lt;, &lt;=, !, &amp;&amp;, ||, +, -, *, /, % and match().  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"Config Panels","url":"/doc/pr-2672/en/packaging/advanced/config_panels#examples","content":" # simple &quot;my_option_id&quot; is thruthy/falsy visible = &quot;my_option_id&quot; visible = &quot;!my_option_id&quot; # misc visible = &quot;my_value &gt;= 10&quot; visible = &quot;-(my_value + 1) &lt; 0&quot; visible = &quot;!!my_value || my_other_value&quot;   For a more complete set of examples, check the tests at the end of the file.  ","version":"Next","tagName":"h3"},{"title":"match()​","type":1,"pageTitle":"Config Panels","url":"/doc/pr-2672/en/packaging/advanced/config_panels#match","content":" For more complex evaluation we can use regex matching.  [my_string] default = &quot;Lorem ipsum dolor et si qua met!&quot; [my_boolean] type = &quot;boolean&quot; visible = &quot;my_string &amp;&amp; match(my_string, '^Lorem [ia]psumE?')&quot;   Match the content of a file.  [my_file] type = &quot;file&quot; accept = &quot;.txt&quot; bind = &quot;/etc/random/lorem.txt&quot; [my_boolean] type = &quot;boolean&quot; visible = &quot;my_file &amp;&amp; match(my_file, '^Lorem [ia]psumE?')&quot;   with a file with content like:  Lorem ipsum dolor et si qua met!   ","version":"Next","tagName":"h3"},{"title":"Actions​","type":1,"pageTitle":"Config Panels","url":"/doc/pr-2672/en/packaging/advanced/config_panels#actions","content":" &quot;Actions&quot; correspond to config panel buttons triggering specific pieces of code. For example, one could implement an action to trigger a scan of Nextcloud files, or install a plugin inside an app that does not already provide an interface to do so. In core config panels, buttons are for example used to trigger certificate renewal.  The most basic example looks like this, using type = 'button':  [panel.section.my_action] type = &quot;button&quot; ask = &quot;Run action&quot; # (NB: no need to set `bind` to &quot;null&quot;)   And then defining the controller, prefixed by run__ inside the app's config script:  run__my_action() { ynh_print_info &quot;Running 'my_action'...&quot; }   You may build more complex actions, where the actions uses other form inputs:  [panel.my_action_section] name = &quot;Action section&quot; [panel.my_action_section.my_repo] type = &quot;url&quot; bind = &quot;null&quot; # this value won't be saved as a setting, it's ephemeral and only relevant for the action ask = &quot;gimme a repo link&quot; [panel.my_action_section.my_repo_name] type = &quot;string&quot; bind = &quot;null&quot; # this value won't be saved as a setting, it's ephemeral and only relevant for the action ask = &quot;gimme a custom folder name&quot; [panel.my_action_section.my_action] type = &quot;button&quot; ask = &quot;Clone the repo&quot; # the button is clickable only once the previous values are provided enabled = &quot;my_repo &amp;&amp; my_repo_name&quot;   run__my_action() { ynh_print_info &quot;Cloning '$my_repo'...&quot; cd /tmp git clone &quot;$my_repo&quot; &quot;$my_repo_name&quot; }   ","version":"Next","tagName":"h2"},{"title":"Overwrite config panel mechanism​","type":1,"pageTitle":"Config Panels","url":"/doc/pr-2672/en/packaging/advanced/config_panels#overwrite-config-panel-mechanism","content":" All main configuration helpers are overwritable, example:  ynh_app_config_apply() { # Stop vpn client touch /tmp/.ynh-vpnclient-stopped systemctl stop ynh-vpnclient _ynh_app_config_apply # Start vpn client systemctl start ynh-vpnclient rm -f /tmp/.ynh-vpnclient-stopped }   List of main configuration helpers:  ynh_app_config_getynh_app_config_showynh_app_config_validateynh_app_config_applyynh_app_config_run  More info on this can be found by reading vpnclient_ynh config script  ","version":"Next","tagName":"h2"},{"title":"Important technical notes​","type":1,"pageTitle":"Config Panels","url":"/doc/pr-2672/en/packaging/advanced/config_panels#important-technical-notes","content":" ","version":"Next","tagName":"h2"},{"title":"Options short keys have to be unique​","type":1,"pageTitle":"Config Panels","url":"/doc/pr-2672/en/packaging/advanced/config_panels#options-short-keys-have-to-be-unique","content":" For performance reasons, questions short keys have to be unique in all the config_panel.toml file, not just inside its panel or its section. Hence it's not possible to have:  [manual.vpn.server_ip] [advanced.dns.server_ip]   In which two questions have &quot;real variable name&quot; is server_ip and therefore conflict with each other.  warning Some short keys are forbidden cause it can interfer with config scripts (old, file_hash, types, binds, formats, changed) and you probably should avoid to use common settings name to avoid to bind your question to this settings (e.g. id, install_time, mysql_pwd, path, domain, port, db_name, current_revision, admin)  ","version":"Next","tagName":"h3"},{"title":"bind versus app settings​","type":1,"pageTitle":"Config Panels","url":"/doc/pr-2672/en/packaging/advanced/config_panels#bind-versus-app-settings","content":" warning IMPORTANT: with the exception of bind = &quot;null&quot; options, options ids should almost always correspond to an app setting initialized/reused during install/upgrade.  Not doing so may result in inconsistencies between the config panel mechanism and the use of ynh_add_config. See also the relevant issue. ","version":"Next","tagName":"h3"},{"title":"Hooks","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/packaging/advanced/hooks","content":"","keywords":"","version":"Next"},{"title":"How to add a custom hook on a specific instance​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#how-to-add-a-custom-hook-on-a-specific-instance","content":" tip Below we imagine we want to run a command after each user creation to add the user to samba user.  You should create a directory with the name of the hooks into /etc/yunohost/hooks.d/:  mkdir -p /etc/yunohost/hooks.d/post_user_create   Next create a bash script inside this directory prefixed by 2 numbers and a dash:  nano /etc/yunohost/hooks.d/post_user_create/05-add-user-to-samba   By default, the directory must be readable and traversable by root, but if you notice your hook is not run at all by YunoHost, you can check permissions with ls -l /etc/yunohost/hooks.d/ and apply these commands if needed:  chown root:root /etc/yunohost/hooks.d/post_user_create chmod u+rx /etc/yunohost/hooks.d/post_user_create   ","version":"Next","tagName":"h2"},{"title":"How to add a hook in an app package​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#how-to-add-a-hook-in-an-app-package","content":" If you are packaging an app, you should not set by yourself the hook into /etc/yunohost/hooks.d instead you should create a hooks dir at the root of your package.  . ├── conf ├── hooks ├── scripts   In the hooks dir, create a bash script called with the type of hook you want to create for example post_create_user.  ","version":"Next","tagName":"h2"},{"title":"Hooks referencies​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#hooks-referencies","content":" ","version":"Next","tagName":"h2"},{"title":"User and permissions​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#user-and-permissions","content":" post_user_create​  Triggered after user creation This hook is run at the end of the command yunohost user create or equivalent action in webadmin. Environment variables​ YNH_USER_USERNAME: The username of the created userYNH_USER_MAIL: The mail of the created userYNH_USER_PASSWORD: The clear password of the created userYNH_USER_FIRSTNAME: The firstname of the created user (should be removed in future)YNH_USER_LASTNAME: The lastname of the created user (should be removed in future) Positionnal arguments (deprecated)​ $1: The username of the created user$2: The mail of the created user No waited return​ Examples​ Send automatically a mail to new user​ #!/bin/bash domain=$(cat /etc/hostname) message=&quot;Hello $YNH_USER_FIRSTNAME, Welcome on $domain ! Feel free to &lt;a href='https://$domain/yunohost/sso/edit.html'&gt;change your password&lt;/a&gt;. Let me know if you have a problem, The admin of $domain &quot; echo $message | mail -s &quot;Welcome on $domain !&quot; $YNH_USER_MAIL   post_user_delete​  Triggered at the end of user deletion This hook is run at the end of the command yunohost user delete or equivalent action in webadmin. No environment variables​ Positionnal arguments​ $1: The username of the user deleted$2: True if --purge option is used No waited return​ Examples​ #!/bin/bash   ","version":"Next","tagName":"h3"},{"title":"post_user_update​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#post_user_update","content":" Triggered at the end of the user update This hook is run at the end of the command yunohost user update or equivalent action in webadmin. Environment variables​ warning Only arguments given to the cli/api are given as environment variable. YNH_USER_USERNAME: The username of the updated userYNH_USER_FIRSTNAME: The firstname of the updated user (should be removed in future)YNH_USER_LASTNAME: The lastname of the updated user (should be removed in future)YNH_USER_PASSWORD: The new password of the updated userYNH_USER_MAILS: The mail and mail aliases of the updated user seperated by commaYNH_USER_MAILFORWARDS: The list of forward mails of the updated user separated by commaYNH_USER_MAILQUOTA: The quota of the updated user (could be 0 or a number following by one of this unit: b, k, M, G or T) No positionnal arguments​ No waited return​ Examples​ Send a mail on password changing​ #!/bin/bash &quot; domain=$(cat /etc/hostname) message=&quot;Hello, Your password has been successfully changed on $domain. If you have not asked for changing your password, you probably should contact the admin of $domain. &quot; echo $message | mail -s &quot;Your password has been changed on $domain !&quot; $YNH_USER_USERNAME   ","version":"Next","tagName":"h3"},{"title":"post_app_addaccess​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#post_app_addaccess","content":" Triggered after adding a permission to users or groups This hook is run at the end of the command yunohost user permission add or equivalent action in webadmin. No environment variables​ Positionnal arguments (deprecated)​ $1: The app name$2: The list of users added separated by comma$3: The name of the sub permission (main, admin, etc.)$4: The list of groups added separated by comma No waited return​ Examples​  ","version":"Next","tagName":"h3"},{"title":"post_app_removeaccess​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#post_app_removeaccess","content":" Triggered after removing a pemission to users or groups This hook is run at the end of the command yunohost user permission remove or equivalent action in webadmin. No environment variables​ Positionnal arguments (deprecated)​ $1: The app name$2: The list of users removed from the permission separated by comma$3: The name of the sub permission (main, admin, etc.)$4: The list of groups removed from the permission separated by comma No waited return​ Examples​  ","version":"Next","tagName":"h3"},{"title":"Domain, certificates and DNS​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#domain-certificates-and-dns","content":" ","version":"Next","tagName":"h2"},{"title":"post_domain_add​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#post_domain_add","content":" Triggered at the end of the domain add operation This hook is run at the end of the command yunohost domain add or equivalent action in webadmin. No environment variable​ Positionnal arguments (deprecated)​ $1: The domain added No waited return​ Examples​ ​  ","version":"Next","tagName":"h3"},{"title":"post_domain_remove​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#post_domain_remove","content":" Triggered after removing the domain This hook is run at the end of the command yunohost domain remove or equivalent action in webadmin. No environment variable​ Positionnal arguments (deprecated)​ $1: The domain removed No waited return​ Examples​  ","version":"Next","tagName":"h3"},{"title":"post_cert_update​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#post_cert_update","content":" Triggered after Let's encrypt certificate update This hook is run at the end of the command yunohost domain cert update or equivalent action in webadmin. No environment variable​ Positionnal arguments​ $1: The domain for which we have updated the certificate No waited return​ Examples​ Restart a service after cert renewal​ #!/bin/bash systemctl restart gemserv   ","version":"Next","tagName":"h3"},{"title":"custom_dns_rules​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#custom_dns_rules","content":" Customized your DNS rules for your domains This hook is run at the end of the command yunohost domain dns suggest or equivalent action in webadmin. Thanks to This hook you can customize Environment variables​ base_domain: the top-level part of the domainsuffix: the subdomain part of the domain Positionnal arguments​ $1: The base domain for which we want to build a DNS suggestion Waited return​ The script should return a JSON array with dictionnary in this format: [ { 'type': 'SRV', 'name': 'stuff.foo.bar', 'value': 'yoloswag', 'ttl': 3600 } ] Examples​ Validate Let's Encrypt DNS challenge with a YunoHost DynDNS domain​ #!/bin/bash if [[ &quot;$1&quot; == &quot;XXXX.nohost.me&quot; ]] ; then echo &quot;[ { 'type': 'TXT', 'name': '_acme-challenge', 'value': 'LETSENCRYPT_VALUE', 'ttl': 3600 } ]&quot; fi   ","version":"Next","tagName":"h3"},{"title":"Apps​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#apps","content":" ","version":"Next","tagName":"h2"},{"title":"post_app_change_url​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#post_app_change_url","content":" Triggered after an app has changed of URL This hook is run at the end of the command yunohost app change-url or equivalent action in webadmin. Environment variables​ YNH_APP_OLD_DOMAIN: The old domain of the appYNH_APP_OLD_PATH: The old path of the appYNH_APP_NEW_DOMAIN: The new domain of the appYNH_APP_NEW_PATH: The new path of the app No positionnal arguments​ No waited return​ Examples​  ","version":"Next","tagName":"h3"},{"title":"post_app_upgrade​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#post_app_upgrade","content":" Triggered on app upgrade This hook is run at the end of the command yunohost app upgrade or equivalent action in webadmin. Environment variables​ YNH_APP_ID: The app id (for example nextcloud)YNH_APP_INSTANCE_NAME: The app instance name (for example nextcloud__2)YNH_APP_INSTANCE_NUMBER: The app instance number (for example 2)YNH_APP_MANIFEST_VERSION: The app manifest version (for example 1 or ?)YNH_ARCH: The arch as returned by dpkg --print-architectureYNH_APP_UPGRADE_TYPE: The type of upgrade (UPGRADE_PACKAGE, UPGRADE_APP, UPGRADE_FULL)YNH_APP_MANIFEST_VERSION: The version numberYNH_APP_CURRENT_VERSION: The version number of the app (in the YunoHost format)NO_BACKUP_UPGRADE: 1 if we don't want to backup else 0 No positionnal arguments​ No waited return​ Examples​ Change a settings in an app config file (unmanaged by config panel)​ #!/bin/bash source /usr/share/yunohost/helpers app=$YNH_APP_INSTANCE_NAME if [[ &quot;$app&quot; == &quot;etherpad_mypads&quot; ]]; then ynh_write_var_in_file --file=/var/www/etherpad_mypads/settings.json --key=max --value=100 --after=importExportRateLimiting systemctl restart etherpad_mypads fi   ","version":"Next","tagName":"h3"},{"title":"post_app_install​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#post_app_install","content":" Triggered at the end of an app installation This hook is run at the end of the command yunohost app install or equivalent action in webadmin. Environment variables​ YNH_APP_ID: The app id (for example nextcloud)YNH_APP_INSTANCE_NAME: The app instance name (for example nextcloud__2)YNH_APP_INSTANCE_NUMBER: The app instance number (for example 2)YNH_APP_MANIFEST_VERSION: The app manifest version (for example 1 or ?)YNH_ARCH: The arch as returned by dpkg --print-architectureYNH_APP_ARG_XXXXXXX: The argument of the manifest No positionnal arguments​ No waited return​ Examples​  ","version":"Next","tagName":"h3"},{"title":"post_app_remove​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#post_app_remove","content":" Triggered after removing an app This hook is run at the end of the command yunohost app remove or equivalent action in webadmin. Environment variables​ YNH_APP_ID: The app id (for example nextcloud)YNH_APP_INSTANCE_NAME: The app instance name (for example nextcloud__2)YNH_APP_INSTANCE_NUMBER: The app instance number (for example 2)YNH_APP_MANIFEST_VERSION: The app manifest version (for example 1 or ?)YNH_ARCH: The arch as returned by dpkg --print-architectureYNH_APP_PURGE: 1 if the --purge option has been activated No positionnal arguments​ No waited return​ Examples​  ","version":"Next","tagName":"h3"},{"title":"Backup / Restore​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#backup--restore","content":" ","version":"Next","tagName":"h2"},{"title":"backup​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#backup","content":" Add some files to backup This hook is run at the end of the command yunohost backup create or equivalent action in webadmin. Environment variables​ YNH_BACKUP_DIR: The work dir in which we can store temporary data to backup like database dumpYNH_BACKUP_CSV: The CSV in which we add the things to backup. Don't use this directly and use ynh_backup helper instead.YNH_APP_BACKUP_DIR: To document Positionnal arguments​ $1: The work dir in which we can store temporary data to backup like database dump No waited return​ Examples​ Backup some files in more (for example your custom hooks)​ #!/bin/bash # Source YNH helpers source /usr/share/yunohost/helpers ynh_backup_dest (){ YNH_CWD=&quot;${YNH_BACKUP_DIR%/}/$1&quot; mkdir -p $YNH_CWD cd &quot;$YNH_CWD&quot; } # Exit hook on subcommand error or unset variable ynh_abort_if_errors # MISC ynh_backup_dest &quot;conf/custom/misc&quot; ynh_backup &quot;/etc/sysctl.d/noipv6.conf&quot; ynh_backup &quot;/usr/local/bin/&quot; ynh_backup &quot;/etc/yunohost/hooks.d/backup/99-conf_custom&quot; ynh_backup &quot;/etc/yunohost/hooks.d/restore/99-conf_custom&quot;   ","version":"Next","tagName":"h3"},{"title":"restore​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#restore","content":" Restore some files This hook is run at the end of the command yunohost backup restore or equivalent action in webadmin. Environment variables​ YNH_BACKUP_DIR: The work dir in which we can store temporary data to backup like database dumpYNH_BACKUP_CSV: The CSV in which we add the things to backup. Don't use this directly and use ynh_backup helper instead. Positionnal arguments​ $1: The work dir in which we can store temporary data to backup like database dump No waited return​ Examples​ restore custom files​ #!/bin/bash # Source YNH helpers source /usr/share/yunohost/helpers ynh_restore_dest (){ YNH_CWD=&quot;${YNH_BACKUP_DIR%/}/$1&quot; cd &quot;$YNH_CWD&quot; } # Exit hook on subcommand error or unset variable ynh_abort_if_errors # MISC ynh_restore_dest &quot;conf/custom/misc&quot; ynh_restore_file &quot;/etc/sysctl.d/noipv6.conf&quot; ynh_restore_file &quot;/usr/local/bin/&quot; ynh_restore_file &quot;/etc/yunohost/hooks.d/backup/99-conf_custom&quot; ynh_restore_file &quot;/etc/yunohost/hooks.d/restore/99-conf_custom&quot;   ","version":"Next","tagName":"h3"},{"title":"backup_method​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#backup_method","content":" Define a new way to backup and restore files This hook is run during the command yunohost backup create or equivalent action in webadmin. This hook is called several times with different action keywords. No environment variables​ Positionnal arguments​ $1: The action (&quot;need_mount&quot;, &quot;backup&quot;, &quot;mount&quot;)$2: The work dir$3: The name of the backup$4: The repository in which the backup should be done$5: An estimation size of the files to backup$6: A description of the archive No waited return​ Examples​ A very simple backup on rotationnal disks​ #!/bin/bash set -euo pipefail work_dir=&quot;$2&quot; name=&quot;$3&quot; repo=&quot;$4&quot; size=&quot;$5&quot; description=&quot;$6&quot; case &quot;$1&quot; in need_mount) # Set false if your method can itself put files in good place in your archive true ;; backup) mount /dev/sda1 /mnt/hdd if [[ &quot;$(df /mnt/hdd | tail -n1 | cut -d&quot; &quot; -f1)&quot; != &quot;/dev/sda1&quot; ]] then exit 1 fi pushd &quot;$work_dir&quot; current_date=$(date +&quot;%Y-%m-%d_%H:%M&quot;) cp -a &quot;${work_dir}&quot; &quot;/mnt/hdd/${current_date}_$name&quot; popd umount /mnt/hdd ;; *) echo &quot;hook called with unknown argument \\`$1'&quot; &gt;&amp;2 exit 1 ;; esac exit 0   ","version":"Next","tagName":"h3"},{"title":"Configuration and firewall​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#configuration-and-firewall","content":" ","version":"Next","tagName":"h2"},{"title":"post_iptable_rules​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#post_iptable_rules","content":" Triggered after reloaded the firewall rules This hook is run at the end of the command yunohost firewall reload or equivalent action in webadmin. No environment variables​ Positionnal arguments​ $1: True if upnp has succeeded$2: True if ipv6 is available No waited return​ Examples​ Forbid completely the outgoing 25 port except for postfix user​ #!/bin/bash iptables -A OUTPUT -p tcp --dport 25 -m owner --uid-owner postfix -j ACCEPT iptables -A OUTPUT -p tcp --dport 25 -m tcp -j REJECT --reject-with icmp-port-unreachable   ","version":"Next","tagName":"h3"},{"title":"conf_regen​","type":1,"pageTitle":"Hooks","url":"/doc/pr-2672/en/packaging/advanced/hooks#conf_regen","content":" Change configuration suggested as default config in regen-conf mechanism This hook is run during the command yunohost tools regen-conf or equivalent action in webadmin. This hook is called several times with different actions keywords (pre and post operations). In order to be taken into account, the conf_regen hooks must: be present in the folder /etc/yunohost/hooks.d/conf_regenfollow the naming convention dd-sss_xxx.dd are 2 digits and should be higher than the ones from the default hook (present in /usr/share/yunohost/hooks/conf_regen).sss is a string that defines the kind of hook (eg. ssh or postfix).xxx is a free field to help remind what is inside that hook. Environment variables​ YNH_DOMAINS: The list of domains managed by YunoHost separated by commaYNH_MAIN_DOMAINS: The list of main domains separated by comma Positionnal arguments​ $1: The pre or post action$2: Empty string due to legacy$3: Empty string due to legacy$4: In post mode the list of file which should be modified. In pre mode the dir in which we store pending configuration No waited return​ Examples​ Fix the warning about postfix compatibility mode in postfix logs​ #!/bin/bash action=$1 pending_dir=$4 postfix_conf=$pending_dir/../postfix/etc/postfix/main.cf [[ &quot;$action&quot; == &quot;pre&quot; ]] || exit 0 [[ -e $postfix_conf ]] || exit 0 echo ' compatibility_level = 2' &gt;&gt; $postfix_conf  ","version":"Next","tagName":"h3"},{"title":"Packaging v2","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/packaging/advanced/packaging_v2","content":"","keywords":"","version":"Next"},{"title":"Motivation​","type":1,"pageTitle":"Packaging v2","url":"/doc/pr-2672/en/packaging/advanced/packaging_v2#motivation","content":" The motivations for this new format is:  to get rid of some boring or unecessarily complex or duplicateds stuff such as saving/loading settings, creating a system user, etc.. during the install/upgrade/restore script, which are common things accross many apps.to get rid of funky historical, not-super-semantic stuff such as __FINALPATH__ being replaced by $final_path (with underscore), or __PATH__ being replaced by $path_url, etc.formalize some aspects such as the existence of the install dir, data dir, apt dependencies, database, etc. which in turn unlock possible future developments such as computing the space used by an app at one given moment, auto-upgrading apt dependencies during Debian major migration, etc.formalize some meta-info such as LDAP/SSO support, architectures supports, and other pre-install / post-install, pre-upgrade / post-upgrade notifications (replacing the infamous ynh_send_readme_to_admin) for better UI/UX during the install and upgrade process.  However, this &quot;v2&quot; is not the end of the story and should be seen as an intermediate stage before a &quot;v3&quot; packaging. In particular this &quot;v3&quot; packaging should also formalize the handling of the system and app configurations files and ultimately rework the entire paradigm of the install/remove/upgrade/backup/restore scripts.  ","version":"Next","tagName":"h3"},{"title":"Adapting a v1 app to v2​","type":1,"pageTitle":"Packaging v2","url":"/doc/pr-2672/en/packaging/advanced/packaging_v2#adapting-a-v1-app-to-v2","content":" A script is available in the apps_tools repository and will attempt to convert what it can from the v1 format to the v2 format, in particular:  initializing a manifest.toml and prefilling it with info scrapped from the various scriptscomment out now-unecessary lines in the various scripts  Usage: python3 convert_app_to_packaging_v2.py /path/yo/your/app  This will edit the file in place and you should then carefully review and iterate over what the script did for you.  ","version":"Next","tagName":"h3"},{"title":"Highlights of the new format​","type":1,"pageTitle":"Packaging v2","url":"/doc/pr-2672/en/packaging/advanced/packaging_v2#highlights-of-the-new-format","content":" The example repo illustrates the below.  The manifest is now written as toml (manifest.toml) instead of json (manifest.json). The structure of the manifest itself has been reworked and now include: The upstream section (now mandatory)An integration section meant to formalize what minimum YunoHost version is required, the list of supported architectures, declare if SSO/LDAP is supported, typical resource usage. This is meant to be displayed both in the catalog (similar to app stores) and on the app info page after installing the app - though this is still work in progress.A resource section (detailed below) Install questions are now automatically saved as settings (except user-provided password and other specific infos)All settings are now automatically loaded in app script environments (so e.g. directly define $domain, etc.)Auto-enable set -eu a.k.a. ynh_abort_if_errors in appropriate scriptsThe safety-backup-before-upgrade is now automatically handled by the coreSimplify writing change-url scripts: old the new/old/change domain/path are now automatically available in the context and a new helper ynh_change_url_nginx_config takes care of tweaking the nginx conf. Your script should essentially just call that helper and possibly tweak the app's conf and possibly restart the app's serviceIntroduce a new resource mechanism Resources are declared in the manifest.toml.They are meant to formalize recurring app needs that are to be provisioned/deprovisioned by the core.They include for example: system user, apt dependencies, install dir, data dir, port, permissions, SQL database...Each resource is to be provisioned before running the install script, deprovisioned after the remove script, and automatically upgraded if needed before running the upgrade script (or provisionned if introduced in the new app version, or deprovisioned if removed w.r.t. the previous app version)More infos about resources and their options and behavior are available in the dedicated doc page Permissions are automatically initialized using the answer to the init_main_permission install question (replacing the is_public question). No need to write a boring if $is_public ... in the install script to add visitors anymore ! There is a similar mechanism to init other permissions, eg init_admin_permission (cf also the doc about the permission resource)The content of the doc/ folder is now meant to be integrated in the webadmin (though this is still WIP as of writing this). In particular: DESCRIPTION.md and the screenshots/ folder are expected to be displayed prior to the app install form (similar to app stores on mobile)ADMIN.md is expected to be made available somewhere in the info page and should contain technical admin notes. Other pages can be defined (just name it WHATEVER.md). Lang codes are also supported following the existing scheme for the README, eg README_fr.md is the French version, hence you can create ADMIN_fr.md, etc.Note that the ADMIN.md page supports the __FOOBAR__ notation that will be automatically replaced with the app's foobar setting Special files called 'notifications' are meant to replace the ynh_send_readme_to_admin mechanics. They are also to be added to the doc folder: doc/PRE_INSTALL.md: a note to be displayed prior to the app install. Typically to warn of something unusual, such as &quot;the app install will automatically add 1GB swap to the system&quot;.doc/POST_INSTALL.md: a note to be displayed after the app install. Typically to explain post-install operations to be performed manually by the admin and that cannot be automated.doc/PRE_UPGRADE.md: a note to be displayed prior to any upgrade of this app.doc/PRE_UPGRADE.d/{version}.md: a note to be displayed prior to a specific version upgrade.doc/POST_UPGRADE.md: a note to be displayed after the app upgrade. For example in the context of Nextcloud, the fact that you may need to re-enable custom modules manually?Note that the notifications, like ADMIN.md, supports the __FOOBAR__ notation that will be automatically replaced with the app's foobar setting Replace some historical names with more sensible ones, or homogenize some practices: final_path is now install_dir (this migration should be automatically handled by the core and the convert_app_to_packaging_v2.py script)datadir is now data_dir to be consistent with install_dir (this migration should be automatically handled by the core and the convert_app_to_packaging_v2.py script)path is now always loaded as $path, no funky $path_url-but-it-is-saved-as-path anymore (this migration should be automatically handled by the core and the convert_app_to_packaging_v2.py script)mysqldbpwd and psqlpwd or whatever are now always saved as db_pwd (cf the database resource) (this migration should be automatically handled by the core and the convert_app_to_packaging_v2.py script)ports settings are now always named either $port or $port_foo_bar instead of $foo_bar_port (cf the port resource) (this migration should be automatically handled by the core and the convert_app_to_packaging_v2.py script)the install dir is to be set to /var/www/$app by default for web apps (or can be changed to /opt/???? for non-webapps). Note that YunoHost will automatically move the old install dir to the new install_dir during the corresponding upgrade. ","version":"Next","tagName":"h3"},{"title":"SSO/LDAP integration","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/packaging/advanced/sso_ldap_integration","content":"","keywords":"","version":"Next"},{"title":"LDAP integration​","type":1,"pageTitle":"SSO/LDAP integration","url":"/doc/pr-2672/en/packaging/advanced/sso_ldap_integration#ldap-integration","content":" LDAP is a de-facto standard when it comes to sharing a common user account database between multiple applications, hence its use in the context of YunoHost.  However, each app does implement LDAP support in its own specific way (or doesn't), and needs to be provided with parameters to actually talk to YunoHost's LDAP database, usually via its config file. It is advise to look for real-life example of apps implementing these (such as Nextcloud, Wekan...) but you will usually need to provide:  LDAP host: localhost / 127.0.0.1LDAP port: 389Base DN : dc=yunohost,dc=orgUser DN : ou=users,dc=yunohost,dc=orgSearch filter: (&amp;(|(objectclass=posixAccount))(uid=%uid)(permission=cn=__APP__.main,ou=permission,dc=yunohost,dc=org)) (this makes sure that only people with the appropriate YunoHost/SSowat permission can access the app)Username attribute: uidDisplay name attribute: displaynameEmail attribute: mail  TODO/FIXME: moar explanations? What is missing?  ","version":"Next","tagName":"h2"},{"title":"SSO integration​","type":1,"pageTitle":"SSO/LDAP integration","url":"/doc/pr-2672/en/packaging/advanced/sso_ldap_integration#sso-integration","content":" This documentation apply to YunoHost&gt;=12. On YunoHost &lt;12 the header was a bit different but the idea was the same.  Internally, SSOwat will on-the-fly inject theses different headers:  Name\tDescription\tProtected over header injection from clients (a client try with a request to override the header and be logged in with a different user)\tHeader name for app which provide HTTP server and nginx transfert the request\tHow to get with php AppThe username\tthe username of the authenticated user\tYes\tYNH_USER\twith getallheaders()[&quot;Ynh-User&quot;] or $_SERVER[&quot;HTTP_YNH_USER&quot;] User email\tthe email of the authenticated user. Could be usefull for some app which require an email for the username. Can be also used by some apps which populate all user infomration from the HTTP header instead of LDAP.\tYes\tYNH_USER_EMAIL\twith getallheaders()[&quot;Ynh-User-Email&quot;] or $_SERVER[&quot;HTTP_YNH_USER_EMAIL&quot;] User full name\tThe full name of the user. The full name of the user. Which is mostly used by some apps which populate all user infomration from the HTTP header instead of LDAP.\tYes\tYNH_USER_FULLNAME\twith getallheaders()[&quot;Ynh-User-Fullname&quot;] or $_SERVER[&quot;HTTP_YNH_USER_FULLNAME&quot;] The HTTP Basic Auth Headers\tLike Authorization: Basic &lt;base64credentials&gt;. If used we should be sure that the app check the credential (user and password) before to validate the authentication. It's mainly used by apps which need the credential to authenticate to a internal service. By example most of webmail need the credential to pass the correct credential to the mail server.\tNo. A client can send a header and will be passed to the application. It's why the application must check the credential to be sure that the passed passord are correct.\tAuthorization\twith getallheaders()[&quot;Authorization&quot;] or $_SERVER[&quot;HTTP_AUTHORIZATION&quot;]  ","version":"Next","tagName":"h2"},{"title":"Usage​","type":1,"pageTitle":"SSO/LDAP integration","url":"/doc/pr-2672/en/packaging/advanced/sso_ldap_integration#usage","content":" For many application, like django, you will need configure the YNH_USER header, as the header to trust, to authenticate the user. For php apps it will be most of case the header Ynh-User.  And for some app which need the auth basic header, you generally don't need to set the header name as the Authorization header name is normalized.  ","version":"Next","tagName":"h3"},{"title":"Specific case​","type":1,"pageTitle":"SSO/LDAP integration","url":"/doc/pr-2672/en/packaging/advanced/sso_ldap_integration#specific-case","content":" App which reuse the auth basic header to authenticate to an internal service​  Currently you don't need any specific setup on YunoHost side. Since YunoHost provide the header needed, the application should be able to use it correclty. Depending of the application, some configuration could be needed.  Application which provide an API​  Some app, like Nextcloud or SOGo provide an service like Caldav, Cardav or Webdav, the client will need to send the basic authentication and the nginx must transmit this authentication header to the serivice which will validate the authentication. Currently to make it working correctly you need to set a following app settings this way:  ynh_app_setting_set --key=protect_against_basic_auth_spoofing --value=false   This will say to YunoHost that for this app we can safely transmit auth basic header from the client to the application.  If you need to change this behavior after the application installation, you can set the option with:  sudo yunohost app setting &lt;my_app&gt; protect_against_basic_auth_spoofing -v false   Then you must regenerate the SSOwat configuration with:  sudo yunohost app ssowatconf   And, finally, you need to reload NGINX configuration with:  sudo systemctl reload nginx.service   ","version":"Next","tagName":"h3"},{"title":"Configuring SSOwat permissions for the app​","type":1,"pageTitle":"SSO/LDAP integration","url":"/doc/pr-2672/en/packaging/advanced/sso_ldap_integration#configuring-ssowat-permissions-for-the-app","content":" SSOwat permissions are configured using the 'permission' resource in your app's manifest.toml  If relevant, you can create &quot;sub&quot; permissions for your app, for instance to only allow a specific group of people to access the admin UI of the app. For example:  [resources.permissions] # This configures the main permission, i.e. general access to `https://domain.tld/$app/` # Initial access is defined using the `init_main_permission` install question. main.url = &quot;/&quot; # This configures an additional &quot;admin&quot; permission regarding access to `https://domain.tld/$app/admin` admin.url = &quot;/admin&quot; admin.show_tile = false # This means that this permission won't correspond to a tile in YunoHost's user portal admin.allowed = &quot;admins&quot; # Initialize the access for the &quot;admins&quot; group ... You can also use an install question called `init_admin_permission` to let the server admin choose this.   See the page about app resources for the full description of behavior and properties.  ","version":"Next","tagName":"h2"},{"title":"Logging out on the app vs. Logging out of YunoHost​","type":1,"pageTitle":"SSO/LDAP integration","url":"/doc/pr-2672/en/packaging/advanced/sso_ldap_integration#logging-out-on-the-app-vs-logging-out-of-yunohost","content":" A common known issue is that sometimes, logging out of YunoHost apps will not log people out of every app. This is for example the case for Nextcloud, because it uses its own authentication cookies which are not cleared when people log out of YunoHost. This is not trivial to fix.  Similarly, logging out of the app doesn't necessarily log people from YunoHost entirely (which is more acceptable that clicking Log out and... not being logged out at all because you're still logged-in on the SSO, hence logged in on the app). Some YunoHost app do integrate custom patches such that the logout process of the app does automatically redirects to https://domain.tld/yunohost/sso/?action=logout which logs them out. ","version":"Next","tagName":"h2"},{"title":"Documentation","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/packaging/doc","content":"","keywords":"","version":"Next"},{"title":"Extensive description : doc/DESCRIPTION.md and doc/screenshots/​","type":1,"pageTitle":"Documentation","url":"/doc/pr-2672/en/packaging/doc#extensive-description--docdescriptionmd-and-docscreenshots","content":" You are encouraged to add a doc/DESCRIPTION.md which should contain a more extensive description than the short description contained in manifest.toml. This usually corresponds to listing the key features of the app.  You are also encouraged to add a .png or .jpg screenshot of what the app looks like in doc/screenshots/. The filename is arbitrary but must not start with a dot. Also the file weight should be kept below 512kb.  This description and screenshot will be shown when the admin open the catalog page for this app and the app info page in the webadmin after the admin installs this app.  You can add subfolders such as doc/screenshots/subfolder to add pictures in your documentation without showing them on the app info page.  You can also add translated versions of the .md file in, for example, doc/DESCRIPTION_fr.md, _es.md, _it.md, etc.  If your app repository is part of the YunoHost-Apps org, the provided description will be used to auto-regenerate the README.md of your GitHub repo via yunohost-bot.  ","version":"Next","tagName":"h2"},{"title":"Specific notes for admins : doc/ADMIN.md, doc/<whatever>.md​","type":1,"pageTitle":"Documentation","url":"/doc/pr-2672/en/packaging/doc#specific-notes-for-admins--docadminmd-docwhatevermd","content":" Sometimes, you may want to ship YunoHost-specific notes regarding the administration of this app. For example, integrating OnlyOffice inside Nextcloud.  You can do so by adding a doc/ADMIN.md file or even a doc/&lt;whatever&gt;.md page for each specific topic - and similarly add _&lt;lang&gt; suffix for translations.  Note that you can even use the __FOOBAR__ syntax which will automatically be replaced with the foobar setting.  These notes will be available in the app info page in the webadmin after the app installation.  ","version":"Next","tagName":"h2"},{"title":"Pre/post-install notes, pre/post-upgrade notes​","type":1,"pageTitle":"Documentation","url":"/doc/pr-2672/en/packaging/doc#prepost-install-notes-prepost-upgrade-notes","content":" Sometimes, you may want to display important information to the admin at key points in the app's life cycle. You can do so by providing special markdown files:  doc/PRE_INSTALL.md: displayed right before the installation (for example to warn that « This app install is expected to take around 30 minutes, be patient! » or « This app will automatically add 1GB swap to your system »). NB: try to not overlap with the anti-feature tags from the catalog (cf. Publishing your app in the catalog) which can be used to warn that the app's upstream is alpha-stage or deprecated among other things. doc/POST_INSTALL.md: displayed in a popup after the installation AND a dismissable note in the webadmin app info view.doc/PRE_UPGRADE.md: displayed right before any upgrade of this app. NB: the pre-upgrade note from the NEW version will be used, not the one from the installed version. doc/POST_UPGRADE.md: displayed in a popup after the upgrade AND a dismissable note in the webadmin app info view.  In these files you can use the __FOOBAR__ syntax which will automatically be replaced with the foobar setting.  These notes are displayed both in WebUI and CLI contexts. In the CLI context, admin is prompted to press a key to dismiss the note and continue the install/upgrade process.  ","version":"Next","tagName":"h2"},{"title":"Display notes only for a specific version​","type":1,"pageTitle":"Documentation","url":"/doc/pr-2672/en/packaging/doc#display-notes-only-for-a-specific-version","content":" To display such note only for a specific version, you can create a markdown file named after the version inside a folder named after the targeted hook as such: doc/{hook}.d/{version}.md, where:  {hook} corresponds to PRE_UPGRADE or POST_UPGRADE{version} corresponds to the version defined in the manifest.  Example: doc/PRE_UPGRADE.d/1.2.1~ynh1.md.  With the above example, the user will be notified with the content of this markdown file when they upgrade from a lower version of 1.2.1~ynh1 to this latter version or higher.  ","version":"Next","tagName":"h3"},{"title":"Localization​","type":1,"pageTitle":"Documentation","url":"/doc/pr-2672/en/packaging/doc#localization","content":" All notes' markdown file can optionally be localized using via a filename suffix with the following format: doc/{hook}_{locale}.md or doc/{hook}.d/{version}_{locale}.md. Without locale suffix, a file will be considered to be the English locale (i.e. doc/PRE_UPGRADE.md is equivalent to doc/PRE_UPGRADE_en.md).  Examples:  doc/POST_INSTALL_fr.md will be displayed after each install of the given app where the Yunohost instance's language is set to French.doc/POST_UPGRADE.d/2025.04.02~ynh1_es.md will be displayed after upgrading to version 2025.04.02~ynh1 or newer of the given app where the Yunohost instance's language is set to Spanish. ","version":"Next","tagName":"h3"},{"title":"The manifest","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/packaging/manifest/","content":"","keywords":"","version":"Next"},{"title":"General information​","type":1,"pageTitle":"The manifest","url":"/doc/pr-2672/en/packaging/manifest/#general-information","content":" packaging_format = 2 id = &quot;helloworld&quot; name = &quot;Hello World&quot; description.en = &quot;A dummy basic app to illustrate YunoHost's app packaging.&quot; description.fr = &quot;Une app simple et bidon pour illustrer comme le packaging d'app de YunoHost fonctionne&quot; version = &quot;0.1~ynh1&quot; maintainers = [&quot;alexAubin&quot;]   packaging_format (int) is the packaging version format used to package this app. Newly packaged apps are strongly encouraged to use the new &quot;v2&quot; format (starting with YunoHost 11.1) while older apps may still be in &quot;v1&quot; format.id (str) is expected to be lower-case alphanumeric (and possibly -). This is what will be used for instance in the syntax yunohost app install &lt;app_id&gt;. This will also be the name of various folder or conf files such as /etc/yunohost/apps/&lt;app_id&gt; or /etc/nginx/conf.d/&lt;domain&gt;.d/&lt;app_id&gt;.conf (if applicable), and a dedicated system user.name (str) is the display name of the app, shown for example in the webadmin UI or user portal. It is limited to 23 chars (though not sure why this number?).description (dict of lang code-&gt;str) contains short, concise descriptions of the app in different languages (at least en). It is limited to 150 chars. It will be displayed on the app catalog and should allow people to understand what this app is about at a glance. A more extensive description of the app can be provided in doc/DESCRIPTION.md.version (str) is composed of the upstream version of the app shipped, and an ~ynhX suffix. Changing this version is what effectively triggers an available upgrade for YunoHost instances which installed this package (hence no upgrade will be displayed as available if you forget to change it). The point of the ~ynhX suffix is to have a way to increment the version when commiting changes unrelated to the upstream but still trigger an upgrade.maintainers (list or str) may allow to declare which person should be the referring person for this package (though packages are often maintained collectively and not really used in practice). This should contain a list of easily identifiable persons (eg your GitHub or Matrix username)  ","version":"Next","tagName":"h2"},{"title":"Upstream section​","type":1,"pageTitle":"The manifest","url":"/doc/pr-2672/en/packaging/manifest/#upstream-section","content":" This section is meant to provide various metadata about the app upstream such that YunoHost admins can easily obtain further information regarding this app (or, kinda important, try the upstream's demo before deciding to install it).  Apart from the license, all fields are optional and should only be provided if they are relevant (e.g. don't provide website if the upstream project has no website...)  [upstream] license = &quot;WTFPL&quot; website = &quot;https://www.hello-world.com/&quot; code = &quot;https://github.com/octocat/Hello-World&quot; demo = ... admindoc = ... userdoc = ...   license (str) : the license code of the upstream project. (Note that only apps based on free software will be accepted in the official YunoHost app catalog.). The license code should be a valid SPDX identified.(optional) website (url) : the url of the upstream project's website, if there is indeed a website (please don't just copypasta the git repo url)(optional) demo (url) : an url where people can try out the app before installing it (ideally maintained by the upstream project)(optional) code (url) : the url of the upstream project's code repository, which is very much expected to exist for free software ... but may not exist for special &quot;no upstream&quot; apps ;)(optional) admindoc (url) : the url of the upstream project's admin documentation, which may help YunoHost admins with adminstrating the app (YunoHost-specific documentation can be provided in doc/ADMIN.md).(optional) userdoc (url) : the url of the upstream project's user documentation, which may help YunoHost end-users with effectively using the app.(optional) cpe (str) corresponds to the Common Platform Enumerations code in NIST db. For example for Wekan this is cpe:2.3:a:wekan_project:wekan. Not really used at the moment, but may be used in the future to check for known vulnerabilities (CVE) in the app catalog.  ","version":"Next","tagName":"h2"},{"title":"Integration section​","type":1,"pageTitle":"The manifest","url":"/doc/pr-2672/en/packaging/manifest/#integration-section","content":" This section is meant to contain info related to the relation between the app and YunoHost, or things like typical resource usage.  [integration] yunohost = &quot;&gt;= 11.1&quot; helpers_version = &quot;2.1&quot; architectures = &quot;all&quot; multi_instance = false ldap = &quot;not_relevant&quot; sso = &quot;not_relevant&quot; disk = &quot;1M&quot; ram.build = &quot;1M&quot; ram.runtime = &quot;1M&quot;   yunohost (str) contains the minimum YunoHost version required for this app to work.helpers_version (str) contains the version of the package helpers used by the application; supported versions are 2.0 and 2.1architectures : &quot;all&quot; OR a list of supported archs using the dpkg --print-architecture nomenclature, i.e. among : amd64 (= x86 64bit), i386 (= x86 32bit), armhf (= ARM 32bit), arm64 (= ARM 64bit)multi_instance (bool) : wether or not the app supports being installed multiple time (in which case, during installation, the actual app id is not just the id of the manifest, but something like hellowold__2, helloworld__3, etc. for subsequent installs)ldap (bool OR &quot;not_relevant&quot;) : not to confused with the sso key : this corresponds to wether or not the app is configured to use YunoHost's LDAP DB as the user account DB. This should be set to &quot;not_relevant&quot; if and only if there is no notion of user account for this app (for example, Hextris). LDAP integration is often a prerequisite for the SSO to work.sso (bool OR &quot;not_relevant&quot;) : not to be confused with the ldap key : this corresponds to wether or not a user is automatically logged-in on the app when logged-in on the YunoHost portal. This should be set to &quot;not_relevant&quot; if and only if there is no notion of user account for this app (for example, Hextris).disk (size) : an estimate minimum disk requirement. For example: 20M, 400M, 1G, ...ram.build (size) : an estimate minimum ram requirement when building the app (this may be way different than ram.runtime because some apps have a peak 1~2G RAM when building sometimes...). For example: 50M, 400M, 1G, ...ram.runtime (size) : an estimate minimum ram requirement when the app is active and running. For example: 50M, 400M, 1G, ...  ","version":"Next","tagName":"h2"},{"title":"Antifeatures​","type":1,"pageTitle":"The manifest","url":"/doc/pr-2672/en/packaging/manifest/#antifeatures","content":" This section is completely optional and, for most apps, doesn't exist at all.  Some applications have limitations, they might be due to non-free dependencies, arbitrary limitations, etc. YunoHost provides UI in the catalog to show such antifeatures.  The declaration of antifeatures is a 3-steps process:  Find the relevant antifeature in the list of supported antifeatures Declare the app's antifeature in the app catalog Describe the app's antifeature in its manifest.toml: [antifeatures] arbitrary-limitations.en = &quot;Some description about the specific limitations of this app.&quot;   The format of this section is a dict where keys are antifeature IDs, and the values are translated strings (dict of lang code-&gt;str).  ","version":"Next","tagName":"h2"},{"title":"Install questions​","type":1,"pageTitle":"The manifest","url":"/doc/pr-2672/en/packaging/manifest/#install-questions","content":" This section contains questions that should be asked to the admin prior to starting the actual install  [install] [install.domain] # this is a generic question - ask strings are automatically handled by YunoHost's core type = &quot;domain&quot; [install.path] # this is a generic question - ask strings are automatically handled by YunoHost's core type = &quot;path&quot; default = &quot;/helloworld&quot; [install.init_main_permission] # this is a generic question - ask strings are automatically handled by YunoHost's core type = &quot;group&quot; default = &quot;visitors&quot; [install.prefered_pet] ask.en = &quot;Do you prefer cats or dogs?&quot; help.en = &quot;Think carefully!&quot; type = &quot;string&quot; choices.cat = &quot;Cats :3 !&quot; choices.dog = &quot;Doggos &lt;3&quot; choices.both = &quot;OMG Both ! I can't choose !&quot;   domain and path (with type = &quot;domain&quot;/&quot;path&quot;) are classic questions to allow the admin to choose where the app is installed (in terms of web url endpoint) e.g. if the admin answers domain.tld and /foobar, the app will be available under domain.tld/foobarsome webapp do require a full dedicated domain and do not support the &quot;subpath&quot; install scheme. In that case, you typically want to remove the path question entirelythese questions are part of YunoHost's generic app questions and therefore you do not need to define the ask.en strings that contain the actual question displayed in the UI along the line of &quot;Choose a domain to install this app on&quot; init_main_permission is also a classic question (similar to is_public in v1 packaging) and define what user group will be able to access the app after it is installed. Typical answer are : visitors (= everybody including anonymous users, the app is &quot;public&quot;), all_users (= only people with a YunoHost account, the app is &quot;private&quot;), or any custom user group that may have been defined by the YunoHost admins prior to the install.prefered_pet is a custom question: ask.en defines the human-readable question to be asked (at least the english version)help.en is an optional additional message to provide further info about this questiontype is the type of question, in this case stringin this example, we don't want a free user input but choosing between cat, dog or both (with proper human-readable versions of these choices)this will later automatically create a YunoHost app setting named prefered_pet.. and in the bash install script, the bash variable will automatically be available $prefered_pet with the chosen value  ","version":"Next","tagName":"h2"},{"title":"Regarding install question types​","type":1,"pageTitle":"The manifest","url":"/doc/pr-2672/en/packaging/manifest/#regarding-install-question-types","content":" FIXME : This should be way more documented in a separate section (and is also related to config panels...)  The full list of question types is : string, text, select, tags, email, url, date, time, color, password, path, boolean, domain, user, group, number, range, alert, markdown, file, app.  password-type questions have special behavior and are NOT automatically saved as setting (user-chosen password should ideally not be stored, at least not hashed...)  Every install question is not necessarily mandatory (e.g. a question to propose to add an api key for a better user experience, although the app still works without). To make those questions optional, just write optional = true.  ","version":"Next","tagName":"h3"},{"title":"Resource system​","type":1,"pageTitle":"The manifest","url":"/doc/pr-2672/en/packaging/manifest/#resource-system","content":" The resource section corresponds to recurring app needs that are to be provisioned/deprovisioned by the core of YunoHost. They include for example: downloading the app's sources, creating a system user, installing apt dependencies, creating the install dir, creating the data dir, finding an available internal port, configuring permissions, initializing an SQL database... Each resource is to be provisioned before running the install script, deprovisioned after the remove script, and automatically upgraded if needed before running the upgrade script (or provisionned if introduced in the new app version, or deprovisioned if removed w.r.t. the previous app version)  [resources] ```toml [resources.sources.main] url = &quot;https://some.domain/url/where/to/download/the/app/sources.tar.gz&quot; sha256 = &quot;0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef&quot; [resources.system_user] [resources.install_dir] [resources.permissions] main.url = &quot;/&quot; [resources.apt] packages = &quot;nyancat, lolcat, sl&quot;   In this example:  sources.main: the URL+checksum from which the app sources will be downloaded + validatedsystem_user: a system (unix) user will be created for this app, using the app id as username.install_dir: an install dir will be initialized, named /var/www/$app by default. Additional owner and group property allow to change the owner/group and r/w/x permissions on the created folder.permissions: an SSOwat $app.main permission will be initialized such that the SSO allows access to the app's endpoint according to the chosen init_main_permission question. The main.url = &quot;/&quot; is here to tell that the main endpoint is the &quot;root&quot; of the app, that is https://domain.tld/helloworld/ if the app is installed with domain=domain.tld and path=/helloworldapt: the packages nyancat, lolcat, sl will be installed with apt. These are just dummy apt dependencies to illustrate the syntax.  ","version":"Next","tagName":"h2"},{"title":"List of app resources​","type":1,"pageTitle":"The manifest","url":"/doc/pr-2672/en/packaging/manifest/#list-of-app-resources","content":" The full documentation on resources is available here. ","version":"Next","tagName":"h3"},{"title":"App resources","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/packaging/manifest/resources","content":"","keywords":"","version":"Next"},{"title":"Apt​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#apt","content":" Create a virtual package in apt, depending on the list of specified packages that the app needs. The virtual packages is called $app-ynh-deps (with _ being replaced by - in the app name, see ynh_install_app_dependencies)  ","version":"Next","tagName":"h2"},{"title":"Example​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#example","content":" [resources.apt] packages = [&quot;nyancat&quot;, &quot;lolcat&quot;, &quot;sl&quot;] # (this part is optional and corresponds to the legacy ynh_install_extra_app_dependencies helper) extras.yarn.repo = &quot;deb https://dl.yarnpkg.com/debian/ stable main&quot; extras.yarn.key = &quot;https://dl.yarnpkg.com/debian/pubkey.gpg&quot; extras.yarn.packages = [&quot;yarn&quot;]   ","version":"Next","tagName":"h3"},{"title":"Properties​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#properties","content":" packages: List of packages to be installed via aptpackages_from_raw_bash: A multi-line bash snippet (using triple quotes as open/close) which should echo additional packages to be installed. Meant to be used for packages to be conditionally installed depending on architecture, debian version, install questions, or other logic.extras: A dict of (repo, key, packages) corresponding to &quot;extra&quot; repositories to fetch dependencies from  ","version":"Next","tagName":"h3"},{"title":"Provision/Update​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#provisionupdate","content":" The code literally calls the bash helpers ynh_install_app_dependencies and ynh_install_extra_app_dependencies, similar to what happens in v1.Note that when packages contains some phpX.Y-foobar dependencies, this will automagically define a phpversion setting equal to X.Y which can therefore be used in app scripts ($phpversion) or templates (__PHPVERSION__)  ","version":"Next","tagName":"h3"},{"title":"Deprovision​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#deprovision","content":" The code literally calls the bash helper ynh_remove_app_dependencies    ","version":"Next","tagName":"h3"},{"title":"Composer​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#composer","content":" Installs a composer version to be used by the app  You may then use ynh_composer_exec in your script to run composer actions  Note that this resource requires that the app requires an install_dir, and installs php dependencies via the apt resource.  ","version":"Next","tagName":"h2"},{"title":"Example​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#example-1","content":" [resources.composer] version = &quot;2.7.7&quot;   ","version":"Next","tagName":"h3"},{"title":"Properties​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#properties-1","content":" version: The composer version needed by the app  ","version":"Next","tagName":"h3"},{"title":"Provision/Update​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#provisionupdate-1","content":" Download composer.phar for the corresponding version from getcomposer.orgcomposer.phar is placed in the $install_dir of the appDefine composer_version as the requested version  ","version":"Next","tagName":"h3"},{"title":"Deprovision​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#deprovision-1","content":" Delete composer.pharDelete the composer_verison setting    ","version":"Next","tagName":"h3"},{"title":"Data Dir​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#data-dir","content":" Creates a directory to be used by the app as the data store directory, typically where the app multimedia or large assets added by users are located. The corresponding path is stored in the settings as data_dir. This resource behaves very similarly to install_dir.  ","version":"Next","tagName":"h2"},{"title":"Example​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#example-2","content":" [resources.data_dir] # (empty - defaults are usually okay)   ","version":"Next","tagName":"h3"},{"title":"Properties​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#properties-2","content":" dir: (default: /home/yunohost.app/__APP__) The full path of the data dirsubdirs: (default: empty list) A list of subdirs to initialize inside the data dir. For example, ['foo', 'bar']owner: (default: __APP__:rwx) The owner (and owner permissions) for the data dirgroup: (default: __APP__:rx) The group (and group permissions) for the data dir  ","version":"Next","tagName":"h3"},{"title":"Provision/Update​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#provisionupdate-2","content":" if the dir path changed and a folder exists at the old location, the folder will be mv'ed to the new locationotherwise, creates the directory if it doesn't exists yetcreate each subdir declared and which do not exist already(re-)apply permissions (only on the folder itself and declared subdirs, not recursively)save the value of dir as data_dir in the app's settings, which can be then used by the app scripts ($data_dir) and conf templates (__DATA_DIR__)  ","version":"Next","tagName":"h3"},{"title":"Deprovision​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#deprovision-2","content":" (only if the purge option is chosen by the user) recursively deletes the directory if it existsalso delete the corresponding setting  ","version":"Next","tagName":"h3"},{"title":"Legacy management​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#legacy-management","content":" In the past, the setting may have been called datadir. The code will automatically rename it as data_dir.As explained in the 'Provision/Update' section, the folder will also be moved if the location changed    ","version":"Next","tagName":"h3"},{"title":"Database​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#database","content":" Initialize a database, either using MySQL or Postgresql. Relevant DB infos are stored in settings $db_name, $db_user and $db_pwd.  NB: only one DB can be handled in such a way (is there really an app that would need two completely different DB ?...)  NB2: no automagic migration will happen in an suddenly change type from mysql to postgresql or viceversa in its life  ","version":"Next","tagName":"h2"},{"title":"Example​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#example-3","content":" [resources.database] type = &quot;mysql&quot; # or : &quot;postgresql&quot;. Only these two values are supported   ","version":"Next","tagName":"h3"},{"title":"Properties​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#properties-3","content":" type: The database type, either mysql or postgresql  ","version":"Next","tagName":"h3"},{"title":"Provision/Update​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#provisionupdate-3","content":" (Re)set the $db_name and $db_user settings with the sanitized app name (replacing - and . with _)If $db_pwd doesn't already exists, pick a random database password and store it in that settingIf the database doesn't exists yet, create the SQL user and DB using ynh_mysql_create_db or ynh_psql_create_db.  ","version":"Next","tagName":"h3"},{"title":"Deprovision​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#deprovision-3","content":" Drop the DB using ynh_mysql_remove_db or ynh_psql_remove_dbDeletes the db_name, db_user and db_pwd settings  ","version":"Next","tagName":"h3"},{"title":"Legacy management​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#legacy-management-1","content":" In the past, the sql passwords may have been named mysqlpwd or psqlpwd, in which case it will automatically be renamed as db_pwd    ","version":"Next","tagName":"h3"},{"title":"Go​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#go","content":" Installs a go version to be used by the app, using &quot;goenv&quot;  Sourcing the helpers will then automatically tweak the PATH variable such that you may call go directly.  Sourcing the helpers will also automatically define:  $go_dir, the directory containing the specific version of Go  ","version":"Next","tagName":"h2"},{"title":"Example​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#example-4","content":" [resources.go] version = &quot;1.20&quot;   ","version":"Next","tagName":"h3"},{"title":"Properties​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#properties-4","content":" version: The go version needed by the app  ","version":"Next","tagName":"h3"},{"title":"Provision/Update​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#provisionupdate-4","content":" Fetch/update a copy of the goenv tool and xxenv-latestCompute the actual &quot;latest&quot; version for the requested version, e.g. 1.20 may corresponds to 1.20.2This &quot;actual version&quot; is stored as go_version in the app settingsInstall the corresponding Go versionGarbage-collect unused versions  ","version":"Next","tagName":"h3"},{"title":"Deprovision​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#deprovision-4","content":" Delete the go_version settingGarbage-collect unused versions    ","version":"Next","tagName":"h3"},{"title":"Install Dir​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#install-dir","content":" Creates a directory to be used by the app as the installation directory, typically where the app sources and assets are located. The corresponding path is stored in the settings as install_dir  ","version":"Next","tagName":"h2"},{"title":"Example​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#example-5","content":" [resources.install_dir] # (empty - defaults are usually okay)   ","version":"Next","tagName":"h3"},{"title":"Properties​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#properties-5","content":" dir: (default: /var/www/__APP__) The full path of the install dirowner: (default: __APP__:rwx) The owner (and owner permissions) for the install dirgroup: (default: __APP__:rx) The group (and group permissions) for the install dir  ","version":"Next","tagName":"h3"},{"title":"Provision/Update​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#provisionupdate-5","content":" during install, the folder will be deleted if it already exists (FIXME: is this what we want?)if the dir path changed and a folder exists at the old location, the folder will be mv'ed to the new locationotherwise, creates the directory if it doesn't exists yet(re-)apply permissions (only on the folder itself, not recursively)save the value of dir as install_dir in the app's settings, which can be then used by the app scripts ($install_dir) and conf templates (__INSTALL_DIR__)  ","version":"Next","tagName":"h3"},{"title":"Deprovision​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#deprovision-5","content":" recursively deletes the directory if it exists  ","version":"Next","tagName":"h3"},{"title":"Legacy management​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#legacy-management-2","content":" In the past, the setting was called final_path. The code will automatically rename it as install_dir.As explained in the 'Provision/Update' section, the folder will also be moved if the location changed    ","version":"Next","tagName":"h3"},{"title":"Nodejs​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#nodejs","content":" Installs a nodejs version using &quot;n&quot; to be used by the app  Sourcing the helpers will then automatically tweak the PATH variable such that you may call npm directly.  Sourcing the helpers will also automatically define:  $path_with_nodejs to be used in the systemd config (Environment=&quot;PATH=__PATH_WITH_NODEJS__&quot;)$nodejs_dir, the directory containing the specific version of nodejs, which may be used in the systemd config too (e.g. ExecStart=__NODEJS_DIR__/node foo bar)  ","version":"Next","tagName":"h2"},{"title":"Example​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#example-6","content":" [resources.nodejs] version = &quot;18.2&quot;   ","version":"Next","tagName":"h3"},{"title":"Properties​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#properties-6","content":" version: The nodejs version needed by the app  ","version":"Next","tagName":"h3"},{"title":"Provision/Update​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#provisionupdate-6","content":" Call &quot;n&quot; to install the corresponding nodejs versionResolve the &quot;actual version&quot; installed (typically if version 20 is requested, the actual version may be 20.1.2)This &quot;actual version&quot; is stored as nodejs_version in the app settingsGarbage-collect unused versions  ","version":"Next","tagName":"h3"},{"title":"Deprovision​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#deprovision-6","content":" Delete the nodejs_version settingGarbage-collect unused versions    ","version":"Next","tagName":"h3"},{"title":"Permissions​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#permissions","content":" Configure the SSO permissions/tiles. Typically, webapps are expected to have a 'main' permission mapped to '/', meaning that a tile pointing to the $domain/$path will be available in the SSO for users allowed to access that app.  Additional permissions can be created, typically to have a specific tile and/or access rules for the admin part of a webapp.  The list of allowed user/groups may be initialized using the content of the init_{perm}_permission question from the manifest, hence init_main_permission replaces the is_public question and shall contain a group name (typically, all_users or visitors).  ","version":"Next","tagName":"h2"},{"title":"Example​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#example-7","content":" [resources.permissions] main.url = &quot;/&quot; # (these two previous lines should be enough in the majority of cases) admin.url = &quot;/admin&quot; admin.show_tile = false admin.allowed = &quot;admins&quot; # Assuming the &quot;admins&quot; group exists (cf future developments ;))   ","version":"Next","tagName":"h3"},{"title":"Properties (for each perm name)​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#properties-for-each-perm-name","content":" url: The relative URI corresponding to this permission. Typically / or /something. This property may be omitted for non-web permissions. Can also be a regex, prefixed by re: like re:/api/[A-Z]*$.show_tile: (default: true if url is defined) Wether or not a tile should be displayed for that permission in the user portalallowed: (default: nobody) The group initially allowed to access this perm, if init_{perm}_permission is not defined in the manifest questions. Note that the admin may tweak who is allowed/unallowed on that permission later on, this is only meant to initialize the permission.auth_header: (default: true) Define for the URL of this permission, if SSOwat pass the authentication header to the application. Default is trueprotected: (default: false) Define if this permission is protected. If it is protected the administrator won't be able to add or remove the visitors group of this permission. Defaults to 'false'.additional_urls: (default: none) List of additional URL for which access will be allowed/forbidden  ","version":"Next","tagName":"h3"},{"title":"Provision/Update​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#provisionupdate-7","content":" Delete any permissions that may exist and be related to this app yet is not declared anymoreLoop over the declared permissions and create them if needed or update them with the new values  ","version":"Next","tagName":"h3"},{"title":"Deprovision​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#deprovision-7","content":" Delete all permission related to this app  ","version":"Next","tagName":"h3"},{"title":"Legacy management​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#legacy-management-3","content":" Legacy is_public setting will be deleted if it exists    ","version":"Next","tagName":"h3"},{"title":"Ports​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#ports","content":" Book port(s) to be used by the app, typically to be used to the internal reverse-proxy between nginx and the app process.  Note that because multiple ports can be booked, each properties is prefixed by the name of the port. main is a special name and will correspond to the setting $port, whereas for example xmpp_client will correspond to the setting $port_xmpp_client.  ","version":"Next","tagName":"h2"},{"title":"Example​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#example-8","content":" [resources.ports] # (empty should be fine for most apps... though you can customize stuff if absolutely needed) main.default = 12345 # if you really want to specify a prefered value .. but shouldnt matter in the majority of cases xmpp_client.default = 5222 # if you need another port, pick a name for it (here, &quot;xmpp_client&quot;) xmpp_client.exposed = &quot;TCP&quot; # here, we're telling that the port needs to be publicly exposed on TCP on the firewall   ","version":"Next","tagName":"h3"},{"title":"Properties (for every port name)​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#properties-for-every-port-name","content":" default: The prefered value for the port. If this port is already being used by another process right now, or is booked in another app's setting, the code will increment the value until it finds a free port and store that value as the setting. If no value is specified, a random value between 10000 and 60000 is used.exposed: (default: false) Wether this port should be opened on the firewall and be publicly reachable. This should be kept to false for the majority of apps than only need a port for internal reverse-proxying! Possible values: false, true(=Both), Both, TCP, UDP. This will result in the port being opened on the firewall, and the diagnosis checking that a program answers on that port.fixed: (default: false) Tells that the app absolutely needs the specific value provided in default, typically because it's needed for a specific protocol  ","version":"Next","tagName":"h3"},{"title":"Provision/Update (for every port name)​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#provisionupdate-for-every-port-name","content":" If not already booked, look for a free port, starting with the default value (or a random value between 10000 and 60000 if no default set)If exposed is not false, open the port in the firewall accordingly - otherwise make sure it's closed.The value of the port is stored in the $port setting for the main port, or $port_NAME for other NAMEs  ","version":"Next","tagName":"h3"},{"title":"Deprovision​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#deprovision-8","content":" Close the ports on the firewall if relevantDeletes all the port settings  ","version":"Next","tagName":"h3"},{"title":"Legacy management​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#legacy-management-4","content":" In the past, some settings may have been named NAME_port instead of port_NAME, in which case the code will automatically rename the old setting.    ","version":"Next","tagName":"h3"},{"title":"Ruby​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#ruby","content":" Installs a ruby version to be used by the app, using &quot;rbenv&quot;  Note that ruby is compiled on the target system, and therefore requires the following dependencies to be installed : gcc, make, libjemalloc-dev, libffi-dev, libyaml-dev, zlib1g-dev  Sourcing the helpers will then automatically tweak the PATH variable such that you may call ruby and gem directly.  Sourcing the helpers will also automatically define:  $path_with_ruby to be used in the systemd config (Environment=&quot;PATH=__PATH_WITH_RUBY__&quot;)$ruby_dir, the directory containing the specific version of ruby, which may be used in the systemd config too (e.g. ExecStart=__RUBY_DIR__/ruby foo bar)  ","version":"Next","tagName":"h2"},{"title":"Example​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#example-9","content":" [resources.ruby] version = &quot;3.2&quot;   ","version":"Next","tagName":"h3"},{"title":"Properties​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#properties-7","content":" version: The ruby version needed by the app  ","version":"Next","tagName":"h3"},{"title":"Provision/Update​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#provisionupdate-8","content":" Fetch/update a copy of the rbenv tool as well as ruby-build, rbenv-aliases and xxenv-latestCompute the actual &quot;latest&quot; version for the requested version, e.g. 3.2 may corresponds to 3.2.1This &quot;actual version&quot; is stored as ruby_version in the app settingsInstall (compile) Ruby (may take some time)Garbage-collect unused versions  ","version":"Next","tagName":"h3"},{"title":"Deprovision​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#deprovision-9","content":" Delete the ruby_version settingGarbage-collect unused versions    ","version":"Next","tagName":"h3"},{"title":"Sources​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#sources","content":" Declare what are the sources / assets used by this app. Typically, this corresponds to some tarball published by the upstream project, that needs to be downloaded and extracted in the install dir using the ynh_setup_source helper.  This resource is intended both to declare the assets, which will be parsed by ynh_setup_source during the app script runtime, AND to prefetch and validate the sha256sum of those asset before actually running the script, to be able to report an error early when the asset turns out to not be available for some reason.  Various options are available to accomodate the behavior according to the asset structure  ","version":"Next","tagName":"h2"},{"title":"Example​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#example-10","content":" [resources.sources] [resources.sources.main] url = &quot;https://github.com/foo/bar/archive/refs/tags/v1.2.3.tar.gz&quot; sha256 = &quot;01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b&quot; autoupdate.strategy = &quot;latest_github_tag&quot;   Or more complex examples with several element, including one with asset that depends on the CPU architecture. With packaging format v2.x, YunoHost currently supports amd64, armhf, arm64 and i386 architectures.  [resources.sources] [resources.sources.main] in_subdir = false amd64.url = &quot;https://github.com/foo/bar/archive/refs/tags/v1.2.3.amd64.tar.gz&quot; amd64.sha256 = &quot;01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b&quot; i386.url = &quot;https://github.com/foo/bar/archive/refs/tags/v1.2.3.386.tar.gz&quot; i386.sha256 = &quot;53c234e5e8472b6ac51c1ae1cab3fe06fad053beb8ebfd8977b010655bfdd3c3&quot; armhf.url = &quot;https://github.com/foo/bar/archive/refs/tags/v1.2.3.arm.tar.gz&quot; armhf.sha256 = &quot;4355a46b19d348dc2f57c046f8ef63d4538ebb936000f3c9ee954a27460dd865&quot; autoupdate.strategy = &quot;latest_github_release&quot; autoupdate.asset.amd64 = &quot;.*\\\\.amd64.tar.gz&quot; autoupdate.asset.i386 = &quot;.*\\\\.386.tar.gz&quot; autoupdate.asset.armhf = &quot;.*\\\\.arm.tar.gz&quot; [resources.sources.zblerg] url = &quot;https://zblerg.com/download/zblerg&quot; sha256 = &quot;1121cfccd5913f0a63fec40a6ffd44ea64f9dc135c66634ba001d10bcf4302a2&quot; format = &quot;script&quot; rename = &quot;zblerg.sh&quot;   ","version":"Next","tagName":"h3"},{"title":"Properties (for each source)​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#properties-for-each-source","content":" prefetch : true (default) or false, wether or not to pre-fetch this asset during the provisioning phase of the resource. If several arch-dependent url are provided, YunoHost will only prefetch the one for the current system architecture.url : the asset's URL If the asset's URL depend on the architecture, you may instead provide amd64.url, i386.url, armhf.url and arm64.url (depending on what architectures are supported), using the same dpkg --print-architecture nomenclature as for the supported architecture key in the manifest sha256 : the asset's sha256sum. This is used both as an integrity check, and as a layer of security to protect against malicious actors which could have injected malicious code inside the asset... Same as url : if the asset's URL depend on the architecture, you may instead provide amd64.sha256, i386.sha256, ... format : The &quot;format&quot; of the asset. It is typically automatically guessed from the extension of the URL (or the mention of &quot;tarball&quot;, &quot;zipball&quot; in the URL), but can be set explicitly: tar.gz, tar.xz, tar.bz2 : will use tar to extract the archivezip : will use unzip to extract the archivedocker : useful to extract files from an already-built docker image (instead of rebuilding them locally). Will use docker-image-extractwhatever: whatever arbitrary value, not really meaningful except to imply that the file won't be extracted (eg because it's a .deb to be manually installed with dpkg/apt, or a script, or ...) in_subdir: true (default) or false, depending on if there's an intermediate subdir in the archive before accessing the actual files. Can also be N (an integer) to handle special cases where there's N level of subdir to get rid of to actually access the filesextract : true or false. Defaults to true for archives such as zip, tar.gz, tar.bz2, ... Or defaults to false when format is not something that should be extracted. When extract = false, the file will only be mved to the location, possibly renamed using the rename valuerename: some string like whatever_your_want, to be used for convenience when extract is false and the default name of the file is not practicalplatform: for example linux/amd64 (defaults to linux/$YNH_ARCH) to be used in conjonction with format = &quot;docker&quot; to specify which architecture to extract for  Regarding autoupdate​  Strictly speaking, this has nothing to do with the actual app install. autoupdate is expected to contain metadata for automatic maintenance / update of the app sources info in the manifest. It is meant to be a simpler replacement for &quot;autoupdate&quot; GitHub workflow mechanism.  The infos are used by this script which is ran by the YunoHost infrastructure periodically and will create the corresponding pull request automatically.  autoupdate property is meant to be associated to the main ressource (i.e. the source declared under [resources.sources.main]). Failing to do so will result in incorrect versioning in manifest's autoupdate - only the YunoHost package version (the number after ~) will get incremented.  The script will rely on the code repo specified in code in the upstream section of the manifest.  The autoupdate.strategy is expected to be constructed like this: latest_&lt;gitforge&gt;_&lt;strategy&gt;  You need to replace the &lt;gitforge&gt; in the strategy name by either github, gitlab, gitea or forgejo, as the autoupdater supports:  GitHubGitLab (official and self-hosted instances)Gitea &amp; Forgejo instances  And choose one strategy in the following ones:  latest_&lt;gitforge&gt;_release : similar to latest_&lt;gitforge&gt;_tag, but starting from the list of releases. Note that it's the only strategy that provides the changelog link in the PR message. Pre- or draft releases are ignored. Releases may have assets attached to them, in which case you can define: autoupdate.asset = &quot;some regex&quot; (when there's only one asset to use). The regex is used to find the appropriate asset among the list of all assetsor several autoupdate.asset.$arch = &quot;some_regex&quot; (when the asset is arch-specific). The regex is used to find the appropriate asset for the specific arch among the list of assets latest_&lt;gitforge&gt;_tag : look for the latest tag (by sorting tags and finding the &quot;largest&quot; version). Then using the corresponding tar.gz url. Tags containing rc, beta, alpha, start are ignored, and actually any tag which doesn't look like x.y.z or vx.y.zlatest_&lt;gitforge&gt;_commit : will use the latest commit on GitHub, and the corresponding tarball. If this is used for the 'main' source, it will also assume that the version is YYYY.MM.DD corresponding to the date of the commit.  It is also possible to define autoupdate.upstream to use a different Git repository instead of the code repository from the upstream section of the manifest. This can be useful when, for example, the app uses other assets such as plugin from a different repository.  If the upstream project provides non-standard tag or release names, you can fix this, with a regex with a matching group.  For example, if tags look like release-v4.1, put:  autoupdate.version_regex = &quot;^release-v(.*)$&quot;   And the autoupdater will use the matched group (here: 4.1) as the version.  You can make sure that your autoupdate strategy is working well immediately (without waiting for the next check on the infra) by doing the following:  Clone the apps_tools repository: https://github.com/YunoHost/apps_tools In apps_tools open a terminal to run the following commands: # Create test branch git checkout -b localtest # Create a Python virtual environment python -m venv venv source venv/bin/activate # Install dependencies (if you don't have pip already installed on your system, check https://pip.pypa.io/en/stable/installation) pip install -r requirements.txt # Run autoupdate script - replace '/path/to/myapp_ynh' with your actual local app path ./autoupdate_app_sources/autoupdate_app_sources.py '/path/to/myapp_ynh' If the return output includes: Apps udpated, it ran successfully. Note that it will automatically make local changes in your app's manifest.toml (which can be discarded as they will be made automatically later online by the YNH infra);Apps failed, the autoupdate stragegy is not working properly - check the debug info;none of the above but apps -&gt; Autoupdater just ran, here are the results:, it ran successfully but the app was already up to date.  ","version":"Next","tagName":"h3"},{"title":"Provision/Update​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#provisionupdate-9","content":" For elements with prefetch = true, will download the asset (for the appropriate architecture) and store them in /var/cache/yunohost/download/$app/$source_id, to be later picked up by ynh_setup_source. (NB: this only happens during install and upgrade, not restore)  ","version":"Next","tagName":"h3"},{"title":"Deprovision​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#deprovision-10","content":" Nothing (just cleanup the cache)    ","version":"Next","tagName":"h3"},{"title":"System User​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#system-user","content":" Provision a system user to be used by the app. The username is exactly equal to the app id  ","version":"Next","tagName":"h2"},{"title":"Example​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#example-11","content":" [resources.system_user] # (empty - defaults are usually okay)   ","version":"Next","tagName":"h3"},{"title":"Properties​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#properties-8","content":" allow_ssh: (default: False) Adds the user to the ssh.app group, allowing SSH connection via this userallow_sftp: (default: False) Adds the user to the sftp.app group, allowing SFTP connection via this userallow_email: (default: False) Enable authentication on the mail stack for the system user and send mail using __APP__@__DOMAIN__. A mail_pwd setting is automatically defined (similar to db_pwd for databases). You can then configure the app to use __APP__ and __MAIL_PWD__ as SMTP credentials (with host 127.0.0.1). You can also tweak the user-part of the domain-part of the email used by manually defining a custom setting mail_user or mail_domainhome: (default: /var/www/__APP__) Defines the home property for this user. NB: unfortunately you can't simply use __INSTALL_DIR__ or __DATA_DIR__ for now  ","version":"Next","tagName":"h3"},{"title":"Provision/Update​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#provisionupdate-10","content":" will create the system user if it doesn't exists yetwill add/remove the ssh/sftp.app groups  ","version":"Next","tagName":"h3"},{"title":"Deprovision​","type":1,"pageTitle":"App resources","url":"/doc/pr-2672/en/packaging/manifest/resources#deprovision-11","content":" deletes the user and group ","version":"Next","tagName":"h3"},{"title":"YunoHost's policy regarding the apps included in the official catalog","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/packaging/policy","content":"","keywords":"","version":"Next"},{"title":"License​","type":1,"pageTitle":"YunoHost's policy regarding the apps included in the official catalog","url":"/doc/pr-2672/en/packaging/policy#license","content":" The rule of thumb is that we only include software licensed under a free-software license in the official app catalog.  As YunoHost grew, some gray area cases appeared with software that would be relevant for YunoHost's goal and match its spirit, while not being strictly-speaking free-software. These applications may be:  promoting the use of centralized services, though precisely to avoid their direct usage ;relying on non-free dependencies or assets ;released under &quot;new&quot; post-open-source or ethical-yet-not-free licenses such as the ACSL, the HL3 or the CoopCycle License ;released under &quot;open-core&quot; models, trademark clauses, or business-related license clauses (such as the BSL) which are meant to ensure the project's sustainability while remaining ethical.  While we believe free software principles are an essential footstep towards YunoHost's goal, we believe they are a means and not an end. We reject the purist vision according to which software is either free or proprietary, and the flawed premise that technology is fundamentally neutral. We believe that ethical software and technology can and should exist beyond the definition of free software layed 40 years ago (see also: Freedom isn't Free and Post-Open Source).  The project therefore allows the inclusion inside the official app catalog, on a case-by-case basis, of apps which does not qualify as &quot;free software&quot;, yet considered to be ethical and worthy of interest for YunoHost's goal. Such apps are tagged in the catalog, such that an explicit message displayed before their installation.  If you notice an app is missing such a tag/disclaimer, feel free to open a discussion or pull requet on the app catalog.  If you run YunoHost for your business, you are responsible for doing your due diligence by checking the licenses of the software you want to install on your server.  ","version":"Next","tagName":"h3"},{"title":"Nature of the app​","type":1,"pageTitle":"YunoHost's policy regarding the apps included in the official catalog","url":"/doc/pr-2672/en/packaging/policy#nature-of-the-app","content":" In addition, the YunoHost team decided to not include apps in the official catalog if they:  are overly complex to deploy or resource-hungry compared to their features ;only apply to super niche use cases ;promote cryptocurrencies ;promote AI for purposes deemed futile compared to the ecological and sociological costs involved behind the scenes ;promote shady activities such as tracking/stalking people.  The team may make exceptions to these criteria on a case-by-case basis, on its own volition. The team may also amend this list with other criteria in the future.  ","version":"Next","tagName":"h3"},{"title":"What to do if you're not happy with these criterias​","type":1,"pageTitle":"YunoHost's policy regarding the apps included in the official catalog","url":"/doc/pr-2672/en/packaging/policy#what-to-do-if-youre-not-happy-with-these-criterias","content":" These editorial choices do not mean that apps infringing them cannot be created, merely that they won't be included in the official catalog. You are free to:  Develop your own application packages (though support may be limited due to aforementioned criteria)Manually install any application by using yunohost app install &lt;url_to_git_repo_ynh&gt;Create and add a custom catalog source within /etc/yunohost/apps_catalog.yml ","version":"Next","tagName":"h3"},{"title":"Publishing your app on the catalog","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/packaging/publish","content":"Publishing your app on the catalog The official YunoHost's app catalog is maintained in this repository, in particular the apps.toml file. For your app to be made available to everybody, you should make a pull request that adds your app inside the apps.toml(see the detailed instructions in the README). Before doing so, please make sure to check that your app is compatible with the official app catalog policy. Note that the &quot;real&quot; catalog used by YunoHost servers is https://app.yunohost.org/default/v3/apps.json which is rebuilt every 4 hours. NB: The level key is not to be set manually by maintainers. The yunohost-bot will automatically create a pull request every Friday evening with results from the official CI, which are then to be manually reviewed and merged by the community.","keywords":"","version":"Next"},{"title":"Use Git to package apps","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_git","content":"","keywords":"","version":"Next"},{"title":"Working with GitHub​","type":1,"pageTitle":"Use Git to package apps","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_git#working-with-github","content":" Let's go first for the easy part, GitHub comes with an &quot;easy&quot; web interface to deal with.  First things first, unfortunately there's no way around, you need an account on GitHub.  ","version":"Next","tagName":"h2"},{"title":"Branches​","type":1,"pageTitle":"Use Git to package apps","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_git#branches","content":" Then, probably one of the most important thing, do not work directly on the master branch. Sorry, it has to be said !  Branches are, as GitHub explains, &quot;a parallel version of a repository. It is contained within the repository, but does not affect the other branches. Allowing you to work freely without disrupting the &quot;live&quot; version.&quot;  The master branch is the branch that contains the version of the app users will actually install and use. The usual thing to do is to work from the testing branch, and when everything is settled and tested, you can merge the testing branch in master, so users will enjoy the new release of your package.  To see and change the current branch, use this button:   ","version":"Next","tagName":"h3"},{"title":"Edit a file​","type":1,"pageTitle":"Use Git to package apps","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_git#edit-a-file","content":" Now that you're on the right branch, let's see how to edit a file on GitHub.  You can edit any file by using the small pencil icon:   If you don't have the permission to write on the repository, you will see (as on the picture) that you're going to create a fork (we'll see below what a fork is). If you have the permission to write, you will just edit the file, without forking.  ","version":"Next","tagName":"h3"},{"title":"Commit your changes​","type":1,"pageTitle":"Use Git to package apps","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_git#commit-your-changes","content":" When you're done with your modification on the file, you can commit your changes. Behind that word, the idea is quite simple, you're just going to save your changes...   The first field is the name of your commit, a very short sentence to explain why you did this modification. The second field is a large one for a more complete explanation, if you need it.  Finally, if you're editing a repository on which you have permission to write, you can either commit directly to the current branch or create a new branch. It's usually better to create a new branch, that way you keep your modifications on a parallel version of the repository. Your modifications will be discussed in a pull request (explained below) then finally merged into the original branch.  ","version":"Next","tagName":"h3"},{"title":"To fork or not to fork​","type":1,"pageTitle":"Use Git to package apps","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_git#to-fork-or-not-to-fork","content":" A fork is a copy of a repository into your own account. We have seen before that if you don't have permission to write into a repository, editing a file will automatically create a fork. Because the fork is on your account, you always have the permission to write on it. But even if a fork is not the real repository, but just a copy, a fork is always linked to its parent. We'll see later that to create a fork is really useful when opening a pull request.  When you create a new package, it's common to use the example app as a base. But, because you don't want to keep that link to the example app, you should not fork the example app. You will rather clone the app. Unfortunately, to clone an app is a little bit trickier on GitHub. We will see later how to clone to a local repository instead.  We have seen how to edit a file, and how this could fork the app. But, when you want to edit multiple files, the GitHub interface isn't really the best way. In such situation, you would rather clone the repository and work on a local repository. You may still need to fork on your own account to be able to save your modifications if you don't have the permission on the distant repository.  ","version":"Next","tagName":"h3"},{"title":"Pull request​","type":1,"pageTitle":"Use Git to package apps","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_git#pull-request","content":" After you have committed your changes, whether on a branch or a fork, you want to propose your modifications to be integrated into the main repository, or the original branch. To do so, you're going to create a pull request. GitHub usually ask you directly if you want to do so. Otherwise, you'll find the button to create a pull request just here:   When creating a pull request from a fork, to ease the work of the reviewers, do never uncheck the checkbox Allow edits from maintainers. That option simply allow the maintainers of the original repository to edit directly your work.  ","version":"Next","tagName":"h3"},{"title":"YunoHost-Apps organization​","type":1,"pageTitle":"Use Git to package apps","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_git#yunohost-apps-organization","content":" Following the guide for packaging application within YunoHost, your app has to be into the YunoHost-Apps organization, but if you have never contributed to an app before or never had any app into this organization you may not have the permission.  First, you need the permission to write into the organization, to do so, ask to the Apps group on the Apps XMPP room.  To transfer your app to the YunoHost-Apps organization, go to your repository and to Settings tab. At the bottom of the page, you will find Transfer ownership. Into the field New owner’s GitHub username or organization name, type YunoHost-Apps. Your repo will be moved into the organization, you don't have to remove the original repository.  ","version":"Next","tagName":"h3"},{"title":"Working with Git locally​","type":1,"pageTitle":"Use Git to package apps","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_git#working-with-git-locally","content":" As we have seen, you can do a lot of things directly on GitHub. But when you need to edit multiple files, or when you need to work on your code on your own, it's better to work directly on your computer.  Before going to the hellish part of Git, let's see two different ways to start working with Git.  ","version":"Next","tagName":"h2"},{"title":"First case: Creating a new package​","type":1,"pageTitle":"Use Git to package apps","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_git#first-case-creating-a-new-package","content":" You have shockingly discovered that the wonderful app you love to use everyday does not yet have its YunoHost package. And because you're nice, you decided to create yourself the package, so everyone will enjoy that app the way you do. What a good idea!  The best is to start from the example app. But as we have explained before, you don't want to fork, because if you do so, you're going to keep that link to the example app and it's really annoying. So, you're going to do it differently. You're going to clone!  git clone​  To clone, you're going to do:  git clone https://github.com/YunoHost/example_ynh   git clone will download a copy of the repository. You will have the complete repository, with its branches, commits, and everything (into that apparently little .git directory).  To git clone is usually the starting point of any local work with Git.  A side note though, if you expect to send your modifications back to the distant repository on GitHub, be sure to have the permission to write on this repository. Otherwise, fork before and clone your fork, on which you do have the permission.  My brand new package, continued​  In the context of a new package, you will also need to create a repository on GitHub to nest your package. Which is as simple as a big green New button. Don't bother with README, .gitignore or license. Just create the repository itself. you can now git clone that new repository.   You now have 2 repositories cloned on your computer. Copy all the files from the example_ynh app, except the .git directory (You just want the files themselves) to your new package.  If you want, you can remove the example_ynh app. We don't need it anymore.  You're ready to work on your new package !  ","version":"Next","tagName":"h3"},{"title":"Second case: Working locally on a repository​","type":1,"pageTitle":"Use Git to package apps","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_git#second-case-working-locally-on-a-repository","content":" You already have a repository, but what you want is just to work locally, so you can modify multiple files. Simply clone the repository, the .git directory is the link to the distant repository. Nothing else to do than a git clone.  ","version":"Next","tagName":"h3"},{"title":"Branches​","type":1,"pageTitle":"Use Git to package apps","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_git#branches-1","content":" You do have your local copy of the repository, but because you have read carefully this documentation until then, you know that you should be sure to be on the testing branch before starting to work.  To see the branches, and to know on which you actually are, while into the directory of your repository, type git branch. The current branch is highlighted and preceded by a *.  ","version":"Next","tagName":"h3"},{"title":"git checkout​","type":1,"pageTitle":"Use Git to package apps","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_git#git-checkout","content":" If it appears that you're not on the branch you wanted to be, or you're actually on master (which is bad !), you can move to another branch with git checkout  git checkout testing   Read carefully what Git says when you validate a command, do never forget that Git is sneaky...  ","version":"Next","tagName":"h3"},{"title":"git pull before anything else​","type":1,"pageTitle":"Use Git to package apps","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_git#git-pull-before-anything-else","content":" You're finally on the right branch, and ready to work. Wait ! A nasty trap is waiting for you... Before ending up in an inextricable situation. Start with a git pull to update your branch to the latest change from the distant repository.  Sometimes, you will encounter an impossible situation where Git is saying that you can't pull because you have local changes. But you don't care of those local modifications, you just want to get the last version of the distant branch. But Git don't care about what YOU want... I have to admit that my only solution is as highly efficient as dirty... A good old rm -r of the repository and a git clone  ","version":"Next","tagName":"h3"},{"title":"Let's work​","type":1,"pageTitle":"Use Git to package apps","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_git#lets-work","content":" Eventually, you can work on your code. When you are finally ok with what you have done, it's time to validate your work.  The first step is to inform Git about which file(s) to validate. To do so, we'll use git add  git add my_file git add my_other_file and_also_this_one   If you want to validate all your work, you can also simply do  git add --all   To check the current status of your validation, you can use git status. It will show you which files will be included into your commit, and which files are modified, but not yet included. git status -v will show also which part of the files are modified. A good way to be sure that you didn't make a mistake before committing.  ","version":"Next","tagName":"h3"},{"title":"git checkout -b​","type":1,"pageTitle":"Use Git to package apps","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_git#git-checkout--b","content":" Before committing, or after, or before starting to work. Whenever you feel like it ! You should consider adding your work to a separate branch, that way, it will be easy to create a pull request to merge into the testing branch and discuss with the other packagers what you suggest to change.  To create a new branch and move to this branch, you can use git checkout -b my_new_branch.  ","version":"Next","tagName":"h3"},{"title":"git commit​","type":1,"pageTitle":"Use Git to package apps","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_git#git-commit","content":" To commit is simply to validate your work in Git. As you can do in GitHub. To have the same fields that you had on GitHub, with the name of the commit, and a longer explanation. You can simply use git commit. The first line, before the comments, is for the name of the commit. After all the comments, you can add an explanation if you want to.  If you want to commit with only a name for your commit, you can use a simple command:  git commit -m &quot;My commit name&quot;   ","version":"Next","tagName":"h3"},{"title":"Push to the distant repository​","type":1,"pageTitle":"Use Git to package apps","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_git#push-to-the-distant-repository","content":" Your changes are validated, but only on your local clone of the repository. Now, you have to send those modifications back to the distant repository on GitHub. In order to do that, you need to know what is your current branch. (If you don't know, git branch will give you that info). Then you can git push  git push -u origin BRANCH_NAME  ","version":"Next","tagName":"h3"},{"title":"Create a development environment with VirtualBox","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_virtualbox","content":"","keywords":"","version":"Next"},{"title":"Why use VirtualBox rather than an actual YunoHost production server to package an application?​","type":1,"pageTitle":"Create a development environment with VirtualBox","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_virtualbox#why-use-virtualbox-rather-than-an-actual-yunohost-production-server-to-package-an-application","content":" There are mostly two reasons why one should prefer a virtual server rather than their own server:  You can freely torture a virtual server without any risk of breaking it, since you can always restore it to a former working state. It would really be a pity to break your own real server!In a typical workflow, a virtual server state would be restored from a known snapshot before starting any work on it, so as to always keep a clean system, without any residues of a former installation. This allows to always be as close a possible to a user first installation.  We will discuss VirtualBox in this guide, as it comes with an easy to use GUI. If you prefer a pure commandline approach to handling your virtual machine, you should use ynh-dev instead.  ","version":"Next","tagName":"h2"},{"title":"Installing VirtualBox​","type":1,"pageTitle":"Create a development environment with VirtualBox","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_virtualbox#installing-virtualbox","content":" From a GNU/Linux system, simply install the virtualbox-qt package. From a Windows or macOS machine, you'd have to refer to the VirtualBox download page to fetch the appropriate installation package. The virtualbox package is deprecated since Debian 9, a .deb installation package is available on the abovementioned referenced page.  Whatever your system, there should be no need to install the extension pack or the guest addons.  ","version":"Next","tagName":"h2"},{"title":"Installing YunoHost on VirtualBox​","type":1,"pageTitle":"Create a development environment with VirtualBox","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_virtualbox#installing-yunohost-on-virtualbox","content":" Simply follow the appropriate documentation for installing on VirtualBox then the post-installation guide.  During post-install, there is no need to use an actual domain name in .nohost.me or .noho.st, as your virtual server won't be reachable from outside your local network. We prefer using a fake domain name which will remain associated with your local network, for instance yunohost.packaging.  This domain name, not being registered with any DNS server, will be stored in the hosts file of the computer which will need to access it. Please refer to the documentation about using a local DNS for more information.  Your virtual server is now installed. Before starting to use it, we'll see how to create a first snapshot and how to use that feature.  ","version":"Next","tagName":"h2"},{"title":"Using snapshots​","type":1,"pageTitle":"Create a development environment with VirtualBox","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_virtualbox#using-snapshots","content":" VirtualBox becomes even more interesting with its snapshotting feature, which allow to store the virtualized machine state and restore it quickly. We'll also see how to use multiple snapshot branches to work on different apps on the same machine.  ","version":"Next","tagName":"h2"},{"title":"Now, let's create a first snapshot​","type":1,"pageTitle":"Create a development environment with VirtualBox","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_virtualbox#now-lets-create-a-first-snapshot","content":" Before starting to play with the virtual machine, now is a good time to take a first snapshot, so that we don't have to redo the full install process every time. First, stop the virtual machine.  Managing snapshots is done in the 'Snapshots' tab  Here, we're creating a first snapshot  We can now start to work on the virtual machine and create as many snapshots as desired for each milestone of our modifications.    In this example, after having validated our particular package removal works fine, we can easily get back in time by restoring the virtual machine to its previous state with the package still installed. Once the package will be fully functional, it will just be a matter of deleting the snaphots associated with this package work to get the virtual machine back to its initial state. For our next test, we will then be back to a freshly installed YunoHost serveur, without any trace of package installation.  ","version":"Next","tagName":"h3"},{"title":"Using multiple snapshot branches​","type":1,"pageTitle":"Create a development environment with VirtualBox","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_virtualbox#using-multiple-snapshot-branches","content":" In addition to successive snapshots, it is also possible to create a new machine state and additional snapshots from an older machine snapshot/state.    In this example, I have created two branches since my successful package installation, so as to independently test just the application removal, upgrade and backup/restore steps. I eventually got back to the virtual machine base state to start a new test on another package, without dropping my former test whatsoever. At any time, it is possible to get back to a previous snapshot simply by restoring it. The machine always start on the &quot;Current state&quot; state.    It is always possible to create a new snapshot, whether the machine is stopped or not. To restore a snapshot however, the machine cannot be running.  ","version":"Next","tagName":"h3"},{"title":"How do we connect to the virtual machine?​","type":1,"pageTitle":"Create a development environment with VirtualBox","url":"/doc/pr-2672/en/packaging/resources/packaging_apps_virtualbox#how-do-we-connect-to-the-virtual-machine","content":" Virtual machine connection is similar to any YunoHost server connection, that is by using SSH.  ssh admin@my.domain   Or, if the domain has not been added to the hosts file, via its IP address.  ssh admin@11.22.33.44   We can now work on the virtual machine using the commandline.  To easily copy the package files or use a graphical text editor, one can also connect via SFTP using a file explorer.  It's a simple matter of using the sftp://admin@my.domain/ address.  Note: on Windows or macOS, the file explorer does not natively support the SFTP protocol... ","version":"Next","tagName":"h2"},{"title":"The scripts","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/packaging/scripts/","content":"","keywords":"","version":"Next"},{"title":"Variables available in a script context​","type":1,"pageTitle":"The scripts","url":"/doc/pr-2672/en/packaging/scripts/#variables-available-in-a-script-context","content":" Special variables are automatically defined in the context of a script:  $app is the app ID. It will typically be the ID from the app's manifest.toml, for example helloworld, but will be helloworld__2, __3 etc for multi-instance installs.During install, answers to install questions are automatically available as bash variables. Typically, $domain and $path will contain the answers to the default install questions assuming they are defined in the manifest.toml. Answer values associated to any custom install questions will be available the same way, e.g. $prefered_pet for the custom question [install.prefered_pet] that would be defined in the manifest. Note that - apart from special questions such as init_main_permission or user-provided passwords - they are also automatically saved as settings (cf. next section).During other scripts, all app settings are also loaded and automatically available.Note that some settings are automatically created/updated by app ressources. For example, the install_dir setting will automatically be available too and corresponds to typically /var/www/$appIn the change_url context, variables called new_domain, new_path, old_domain, old_path will be available, as well as change_domain and change_path equal to 0 (false) or 1 (true) depending if the domain / path changed  ","version":"Next","tagName":"h2"},{"title":"Setting system​","type":1,"pageTitle":"The scripts","url":"/doc/pr-2672/en/packaging/scripts/#setting-system","content":" Application often need to store long term information in between scripts triggered by the admin. For this, YunoHost has a key-value store for each application called &quot;setting&quot; and is stored in /etc/yunohost/apps/$app/settings.yml.  Apps can interact with this key value store in this way:  # Retrieve a setting into variable &quot;db_name&quot; db_name=$(ynh_app_setting_get --app=$app --key=db_name) # Update a setting ynh_app_setting_set --app=$app --key=db_name --value=$db_name   ","version":"Next","tagName":"h2"},{"title":"Helper system​","type":1,"pageTitle":"The scripts","url":"/doc/pr-2672/en/packaging/scripts/#helper-system","content":" We call helpers a set of custom bash function created by the YunoHost project to standardize common operations accross all apps. They are all prefixed with ynh_. The full list and documentation of these helpers is available on this page. Some of these helpers are now partially obsolete as they are now handled by the core via app resources.  Here is the list of the major ones:  ynh_app_setting_get / ynh_app_setting_setynh_script_progressionynh_setup_sourcenginx: ynh_add_nginx_config / ynh_remove_nginx_configphp: ynh_add_fpm_config / ynh_remove_fpm_configsystemd: ynh_add_systemd_config / ynh_remove_systemd_configfail2ban: ynh_add_fail2ban_config / ynh_remove_fail2ban_configcustom: ynh_add_confignodejs: ynh_install_nodejs / ynh_use_nodejsynh_exec_warn_lessynh_local_curlynh_secure_removeynh_backup / ynh_restore_file  ","version":"Next","tagName":"h2"},{"title":"Configuration/template system​","type":1,"pageTitle":"The scripts","url":"/doc/pr-2672/en/packaging/scripts/#configurationtemplate-system","content":" App scripts will often need to create a bunch of configuration files.  Configuration templates are canonically stored provided in the conf/ folder of the app, such as nginx.conf, extra_php-fpm.conf, systemd.conf, or some-custom-app-conf.env ...  In these templates, you can use the syntax __FOOBAR__ which will automatically be replaced by the variable $foobar during runtime, when the conf is installed via the ynh_add_*_config helpers.  For example, an app's NGINX conf snippet may look like:  # The next line starting with '#sub_path_only' is automatically uncommented only when $path is not / #sub_path_only rewrite ^__PATH__$ __PATH__/ permanent; location __PATH__/ { alias __INSTALL_DIR__/; # Some headers and tweaks }   ","version":"Next","tagName":"h2"},{"title":"App sources​","type":1,"pageTitle":"The scripts","url":"/doc/pr-2672/en/packaging/scripts/#app-sources","content":" App sources were historically defined in conf/app.src files containing the URL + checksum of assets to download.  This is now integrated in manifest.toml using the sources resource, which pre-download the assets prior to entering the install or upgrade scripts. The sources can then be effectively deployed using ynh_setup_source.  For example, for YesWiki, the sources are defined in manifest.toml using:  [resources.sources.main] url = &quot;https://github.com/YesWiki/yeswiki/archive/refs/tags/v4.4.0.tar.gz&quot; sha256 = &quot;5ceb12d225c20de2ba3cb4ce483348ed1a8ad5b1789d4f4f8f89dc4871524007&quot;   More infos on the source resource in the resource system documentation.  ","version":"Next","tagName":"h2"},{"title":"Common operations (TODO/FIXME)​","type":1,"pageTitle":"The scripts","url":"/doc/pr-2672/en/packaging/scripts/#common-operations-todofixme","content":" ","version":"Next","tagName":"h2"},{"title":"installing/upgrading app sources​","type":1,"pageTitle":"The scripts","url":"/doc/pr-2672/en/packaging/scripts/#installingupgrading-app-sources","content":" ","version":"Next","tagName":"h3"},{"title":"adding configurations​","type":1,"pageTitle":"The scripts","url":"/doc/pr-2672/en/packaging/scripts/#adding-configurations","content":" ","version":"Next","tagName":"h3"},{"title":"adding a systemd service​","type":1,"pageTitle":"The scripts","url":"/doc/pr-2672/en/packaging/scripts/#adding-a-systemd-service","content":" ","version":"Next","tagName":"h3"},{"title":"curl / automatizing install forms​","type":1,"pageTitle":"The scripts","url":"/doc/pr-2672/en/packaging/scripts/#curl--automatizing-install-forms","content":" ","version":"Next","tagName":"h3"},{"title":"classic stuff for nodejs apps​","type":1,"pageTitle":"The scripts","url":"/doc/pr-2672/en/packaging/scripts/#classic-stuff-for-nodejs-apps","content":" ","version":"Next","tagName":"h3"},{"title":"classic stuff for php apps​","type":1,"pageTitle":"The scripts","url":"/doc/pr-2672/en/packaging/scripts/#classic-stuff-for-php-apps","content":" ","version":"Next","tagName":"h3"},{"title":"classic stuff for python apps​","type":1,"pageTitle":"The scripts","url":"/doc/pr-2672/en/packaging/scripts/#classic-stuff-for-python-apps","content":" ","version":"Next","tagName":"h3"},{"title":"classic stuff for ??? apps​","type":1,"pageTitle":"The scripts","url":"/doc/pr-2672/en/packaging/scripts/#classic-stuff-for--apps","content":"","version":"Next","tagName":"h3"},{"title":"App structure","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/packaging/structure","content":"App structure A Yunohost app package is a Git repository with such a structure: myapp_ynh ├── manifest.toml # The manifest ├── scripts # The scripts │ ├── _common.sh │ ├── install │ ├── remove │ ├── backup │ ├── restore │ ├── change_url │ └── upgrade ├── conf # The configuration files to install │ ├── cinny.json │ └── nginx.conf ├── doc # The documentation │ ├── DESCRIPTION.md │ ├── DESCRIPTION_fr.md │ ├── PRE_INSTALL.md │ └── screenshots │ └── screenshot.png ├── patches # Optional patches ├── tests.toml # The tests manifest ├── LICENSE └── README.md The manifest contains upstream information, sources, version, installation questions and resources to initialize. The scripts are called by YunoHost when operations are started by the admin. The configuration files are templates that are filled and installed by the scripts, for example nginx or systemd or specific configs. Patches are applied when downloading the upstream sources. The documentation is used to show messages before / after install, upgrade, and in the webadmin.","keywords":"","version":"Next"},{"title":"General scope of variables","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/packaging/scripts/shell_variables_scope","content":"","keywords":"","version":"Next"},{"title":"Functions inside a script​","type":1,"pageTitle":"General scope of variables","url":"/doc/pr-2672/en/packaging/scripts/shell_variables_scope#functions-inside-a-script","content":" Use a function would not change the scope of variables.  var1=value1 export var2=value2 set_variable () { var3=value3 export var4=value4 echo &quot;$var1&quot; echo &quot;$var2&quot; echo &quot;$var3&quot; echo &quot;$var4&quot; # All variables exists here # Because the function inherite its variables from the script. } set_variable echo &quot;$var1&quot; echo &quot;$var2&quot; echo &quot;$var3&quot; echo &quot;$var4&quot; # var1 var2, var3 and var4 exist # var3 exist because the function is executed in the same shell than the script itself. echo &quot;-&quot; echo &quot; echo \\&quot;\\$var1\\&quot; echo \\&quot;\\$var2\\&quot; echo \\&quot;\\$var3\\&quot; echo \\&quot;\\$var4\\&quot;&quot; &gt; other_script.sh chmod +x other_script.sh ./other_script.sh # Here, var1 and var3 don't exist, only var2 and var4 still exist. # Because they're environment variables.   ","version":"Next","tagName":"h3"},{"title":"The usage of locales variables​","type":1,"pageTitle":"General scope of variables","url":"/doc/pr-2672/en/packaging/scripts/shell_variables_scope#the-usage-of-locales-variables","content":" Locales variables are limited to the function and its children.  var1=value1 export var2=value2 set_variable () { var3=value3 export var4=value4 local var5=value5 echo &quot;$var1&quot; echo &quot;$var2&quot; echo &quot;$var3&quot; echo &quot;$var4&quot; echo &quot;$var5&quot; # All variables exists here # Because the function inherite its variables from the script. } set_variable echo &quot;-&quot; echo &quot;$var1&quot; echo &quot;$var2&quot; echo &quot;$var3&quot; echo &quot;$var4&quot; echo &quot;$var5&quot; # var1 var2, var3 and var4 exist # var3 exist because the function is executed in the same shell than the script itself. # var5 doesn't exist, because its scope is limited to the function which declare it. echo &quot;-&quot; echo &quot; echo \\&quot;\\$var1\\&quot; echo \\&quot;\\$var2\\&quot; echo \\&quot;\\$var3\\&quot; echo \\&quot;\\$var4\\&quot; echo \\&quot;\\$var5\\&quot;&quot; &gt; other_script.sh chmod +x other_script.sh ./other_script.sh # Here, var1, var3 and var5 don't exist, only var2 and var4 still exist. # Because they're environment variables.   Using a local variable is usefull for limit it scope to the function only. And not bother the script in its globality with useless variables. But there's also another advantage with local variable, do not modify the content of a global variable.  var1=value1 var2=value2 var3=value3 set_variable () { echo &quot;$var1&quot; echo &quot;$var2&quot; echo &quot;$var3&quot; echo &quot;-&quot; var2=new_value2 local var3=new_value3 echo &quot;$var1&quot; echo &quot;$var2&quot; echo &quot;$var3&quot; # Values of var2 and var3 are modified in the function. } set_variable echo &quot;-&quot; echo &quot;$var1&quot; echo &quot;$var2&quot; echo &quot;$var3&quot; # var3 retake is original value, # because in the function, var3 was declared as a new locale variable. # But var2 was directly modified, so its value still changed. # Because, var2 in the function is still a global variable.   As seen previously, modified or created variables in a function can affect the main script because the function is executed in the same shell. But, the things are different if the function is executed in a sub shell, the function become a child which only inherite from its parent.  var1=value1 var2=value2 var3=value3 fonction2 () { echo &quot;-&quot; echo &quot;var1=$var1&quot; echo &quot;var2=$var2&quot; echo &quot;var3=$var3&quot; echo &quot;var4=$var4&quot; echo &quot;var5=$var5&quot; # Even var3, which is local, is inherited from the parent function. } set_variable () { echo &quot;var1=$var1&quot; echo &quot;var2=$var2&quot; echo &quot;var3=$var3&quot; # Variables are inherited from the parent. echo &quot;-&quot; var2=new_value2 local var3=new_value3 var4=new_value4 export var5=new_value5 echo &quot;var1=$var1&quot; echo &quot;var2=$var2&quot; echo &quot;var3=$var3&quot; echo &quot;var4=$var4&quot; echo &quot;var5=$var5&quot; # Values of var2 and var3 are modified in the function. (fonction2) } (set_variable) # Start the function in a sub shell. echo &quot;-&quot; echo &quot;var1=$var1&quot; echo &quot;var2=$var2&quot; echo &quot;var3=$var3&quot; echo &quot;var4=$var4&quot; echo &quot;var5=$var5&quot; # var2 and var3 retake their original values. # Because the function is in a child shell which never affect its parent. # Likewise, var4 and var5 don't exist, because they're been declared in child shell. # The parent never inherite from its children shell.   ","version":"Next","tagName":"h3"},{"title":"Conclusion​","type":1,"pageTitle":"General scope of variables","url":"/doc/pr-2672/en/packaging/scripts/shell_variables_scope#conclusion","content":" The scope of a variable is always the current shell and its children, never its parent shell.An environment variable may be exported to a new shell, detached from the first one. If the last one executed the second one. But, it can't affect the parents.A locale variable in a function, executed in the current shell, can't affect the environment outside of the function. End allow also to not affect a global variable with the same name.A function executed in a sub shell will never affect its parent, with global or local variables.A parent can NEVER be affected by variables defined or modified in its children shell. ","version":"Next","tagName":"h3"},{"title":"Testing your app","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/packaging/test","content":"","keywords":"","version":"Next"},{"title":"Package linter​","type":1,"pageTitle":"Testing your app","url":"/doc/pr-2672/en/packaging/test#package-linter","content":" The package linter performs a static analysis of your app to check a bunch of recommended practice.  It is pretty straightforward to run considering that you should only need Python installed.  ","version":"Next","tagName":"h2"},{"title":"Package check​","type":1,"pageTitle":"Testing your app","url":"/doc/pr-2672/en/packaging/test#package-check","content":" Package check is a more elaborate software that will tests many scenarios for you app such as:  installing, removing and reinstalling your app + validating that the app can indeed be accessed on its URL endpoint (with no 404/502 error) when installing on a root domain (domain.tld/)when installing in a domain subpatch (domain.tld/foobar)installing in private modeinstalling multiple instances upgrading from the same versionupgrading from older versionsbackup/restore...  Package check will then summarize the results and compute a quality level ranging from 0 to 8.  To run its tests, package check uses a LXC container to manipulate the package in a clean environment without any previous installations. Installing LXC/LXD is unfortunately not that straighforward (it kinda depends on your OS/distribution), though we documented how to do so in the README.  ","version":"Next","tagName":"h2"},{"title":"Package check's tests.toml​","type":1,"pageTitle":"Testing your app","url":"/doc/pr-2672/en/packaging/test#package-checks-teststoml","content":" Package check interfaces with your app's tests.toml which allows to control a few things about which tests are run - though it is usually pretty empty as many things can be deduced from the app's manifest.  More info about the syntax here are also available in the README  ","version":"Next","tagName":"h3"},{"title":"Application quality levels​","type":1,"pageTitle":"Testing your app","url":"/doc/pr-2672/en/packaging/test#application-quality-levels","content":" Package check will compute a quality level ranging from 0 to 8.  Apps with level equal or lower than 4 are considered &quot;bad quality&quot; and YunoHost will discourage people from installing such apps.  While this definition may vary with time, the current definition as of February 2023 is roughly:  level 0 (« Broken ») : the application doesn't work at all or doesn't pass level 1 criteriaslevel 1 (« Installable in at least one scenario ») : At least one install succeeded, and there's no critical issue reported in the linterlevel 2 (« Installable in all scenarios ») : All install scenarios tested (typically install on full domain, domain+subpath, multi-instance, private/public) succeededlevel 3 (« Can be upgraded ») : All upgrades tests from the current commit succeededlevel 4 (« Can be backuped/restored ») : All backup/restore tests succeededlevel 5 (« No linter error ») : No red errors reported by the linterlevel 6 (« App is in a community-operated git org ») : The app is hosted on YunoHost-Apps organization. (From a maintenance / security point of view, we want to avoid the catalog being filled with apps that are privately-hosted and that the initial maintainer will ultimately abandon and that can't be maintained easily by the community)level 7 (« All tests succeeded + No linter warning ») : Pass all test (including for example upgrade from past commits) and no warning reported by the linterlevel 8 (« Maintained and long-term good quality ») : The app is not flagged as not-maintained / alpha / deprecated / obsolete in the catalog, and has been at least level 5 during the past ~year  ","version":"Next","tagName":"h3"},{"title":"Continous integration (CI)​","type":1,"pageTitle":"Testing your app","url":"/doc/pr-2672/en/packaging/test#continous-integration-ci","content":" The YunoHost project also developed an interface called yunorunner which interfaces with package_check, handles a job queue, and automatically add jobs to the queue using some triggers.  The two major ones are:  The &quot;official&quot; CI: This where the &quot;official&quot; quality level of each app comes from. Jobs are triggered after each commit on the repo's master branch.The &quot;dev&quot; CI: This is where people validate their pull request which is often more convenient than running package_check yourself, and has the advantage of the results being automatically public, which facilitates collective debugging.  Members of the YunoHost-Apps organization can trigger jobs on the dev CI directly from a pull request simply by commenting something like !testme (cf for example here). A .png summary of the tests will be automatically displayed once the job completes (and you can click the link to see the entire job execution and debug it).  ","version":"Next","tagName":"h2"},{"title":"Why create package_check + yunorunner rather than using well-known solutions like Gitlab-CI ?​","type":1,"pageTitle":"Testing your app","url":"/doc/pr-2672/en/packaging/test#why-create-package_check--yunorunner-rather-than-using-well-known-solutions-like-gitlab-ci-","content":" Constrain 1 : Gitlab-CI or other similar solutions are mostly based around Docker, while we use LXC. In particular, we do want to reuse LXC snapshots of successful install during other tests (upgrade, backup/restore, ..) rather than reinstalling the app from scratch everytime, which drastically reduces the test time. We could do so using Gitlab artifacts, but such artifacts are automatically made public which is not convenient because they contain a full filesystem and their only use it to speed up the test process. Moreover, in the Gitlab-CI paradigm, jobs are not running on the same machine and they would need to download the snapshot which can be lengthy. The other mechanism, caching, is explicitly advertised as not reliable in Gitlab's-CI doc. What would be helpful would be some non-public artifact system (see similar discussion here)  Constrain 2 : Our test workflow is somewhat complex and we have 400+ apps to maintain. It's not acceptable to have to duplicate/maintain the CI logic in app each repository, so we need some sort of repo that handles the CI logic, while still being to supersed some behavior from the app repo itself. Gitlab-CI has some syntax which can allow this, but this remains quite laborious.  Constrain 3 : Having a common job queue/dashboard UI accross all app. In the Gitlab-CI paradigm, each repository has its own job queue/dashboard UI, but this is not really convenient. ","version":"Next","tagName":"h3"},{"title":"App helpers (v2)","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0","content":"","keywords":"","version":"Next"},{"title":"Sources​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#sources","content":" This is coupled to the 'sources' resource in the manifest.toml  ","version":"Next","tagName":"h2"},{"title":"Sources​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#sources-1","content":" ynh_setup_source Download, check integrity, uncompress and patch the source from app.src Usage: ynh_setup_source --dest_dir=dest_dir [--source_id=source_id] [--keep=&quot;file1 file2&quot;] [--full_replace] Arguments: -d, --dest_dir=: Directory where to setup sources-s, --source_id=: Name of the source, defaults to main (when the sources resource exists in manifest.toml) or (legacy) app otherwise-k, --keep=: Space-separated list of files/folders that will be backup/restored in $dest_dir, such as a config file you don't want to overwrite. For example 'conf.json secrets.json logs' (no trailing / for folders)-r, --full_replace=: Remove previous sources before installing new sources (can be 1 or 0, default to 0) Details: New 'sources' resources​ (See also the resources documentation which may be more complete?) This helper will read infos from the 'sources' resources in the manifest.toml of the app and expect a structure like: [resources.sources] [resources.sources.main] url = &quot;https://some.address.to/download/the/app/archive&quot; sha256 = &quot;0123456789abcdef&quot; # The sha256 sum of the asset obtained from the URL Optional flags​ format = &quot;tar.gz&quot;/xz/bz2 # automatically guessed from the extension of the URL, but can be set explicitly. Will use `tar` to extract &quot;zip&quot; # automatically guessed from the extension of the URL, but can be set explicitly. Will use `unzip` to extract &quot;docker&quot; # useful to extract files from an already-built docker image (instead of rebuilding them locally). Will use `docker-image-extract` to extract &quot;whatever&quot; # an arbitrary value, not really meaningful except to imply that the file won't be extracted in_subdir = true # default, there's an intermediate subdir in the archive before accessing the actual files false # sources are directly in the archive root n # (special cases) an integer representing a number of subdirs levels to get rid of extract = true # default if file is indeed an archive such as .zip, .tar.gz, .tar.bz2, ... = false # default if file 'format' is not set and the file is not to be extracted because it is not an archive but a script or binary or whatever asset. # in which case the file will only be `mv`ed to the location possibly renamed using the `rename` value rename = &quot;whatever_your_want&quot; # to be used for convenience when `extract` is false and the default name of the file is not practical platform = &quot;linux/amd64&quot; # (defaults to &quot;linux/$YNH_ARCH&quot;) to be used in conjonction with `format = &quot;docker&quot;` to specify which architecture to extract for You may also define assets url and checksum per-architectures such as: [resources.sources] [resources.sources.main] amd64.url = &quot;https://some.address.to/download/the/app/archive/when/amd64&quot; amd64.sha256 = &quot;0123456789abcdef&quot; armhf.url = &quot;https://some.address.to/download/the/app/archive/when/armhf&quot; armhf.sha256 = &quot;fedcba9876543210&quot; In which case ynh_setup_source --dest_dir=&quot;$install_dir&quot; will automatically pick the appropriate source depending on the arch The helper will: Download the specific URL if there is no local archiveCheck the integrity with the specific sha256 sumUncompress the archive to $dest_dir. If in_subdir is true, the first level directory of the archive will be removed.If in_subdir is a numeric value, the N first level directories will be removed. Patches named sources/patches/${src_id}-*.patch will be applied to $dest_dirExtra files in sources/extra_files/$src_id will be copied to dest_dir Requires YunoHost version 2.6.4 or higher. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"App Technologies​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#app-technologies","content":" These allow to install specific version of the technology required to run some apps  ","version":"Next","tagName":"h2"},{"title":"Nodejs​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#nodejs","content":" ynh_use_nodejs Load the version of node for an app, and set variables. Usage: ynh_use_nodejs Details:ynh_use_nodejs has to be used in any app scripts before using node for the first time. This helper will provide alias and variables to use in your scripts. To use npm or node, use the alias ynh_npm and ynh_node. Those alias will use the correct version installed for the app. For example: use ynh_npm install instead of npm install With sudo or ynh_exec_as, use instead the fallback variables $ynh_npm and $ynh_nodeAnd propagate $PATH to sudo with $ynh_node_load_PATH Exemple: ynh_exec_as $app $ynh_node_load_PATH $ynh_npm install $PATH contains the path of the requested version of node. However, $PATH is duplicated into $node_PATH to outlast any manipulation of $PATHYou can use the variable $ynh_node_load_PATH to quickly load your node version in $PATH for an usage into a separate script. Exemple: $ynh_node_load_PATH $final_path/script_that_use_npm.sh` Finally, to start a nodejs service with the correct version, 2 solutions Either the app is dependent of node or npm, but does not called it directly. In such situation, you need to load PATH : Environment=&quot;__NODE_ENV_PATH__&quot; ExecStart=__FINALPATH__/my_app You will replace NODE_ENV_PATH with $ynh_node_load_PATH. Or node start the app directly, then you don't need to load the PATH variable ExecStart=__YNH_NODE__ my_app run You will replace YNH_NODE with $ynh_node 2 other variables are also available $nodejs_path: The absolute path to node binaries for the chosen version.$nodejs_version: Just the version number of node for this app. Stored as 'nodejs_version' in settings.yml. Requires YunoHost version 2.7.12 or higher. Dude, show me the code!  ynh_install_nodejs Install a specific version of nodejs Usage: ynh_install_nodejs --nodejs_version=nodejs_version Arguments: -n, --nodejs_version=: Version of node to install. When possible, your should prefer to use major version number (e.g. 8 instead of 8.10.0). Details: ynh_install_nodejs will install the version of node provided as argument by using n. n (Node version management) uses the PATH variable to store the path of the version of node it is going to use. That's how it changes the version Refer to ynh_use_nodejs for more information about available commands and variables Requires YunoHost version 2.7.12 or higher. Dude, show me the code!  ynh_remove_nodejs Remove the version of node used by the app. Usage: ynh_remove_nodejs Details: This helper will check if another app uses the same version of node. If not, this version of node will be removed.If no other app uses node, n will be also removed. Requires YunoHost version 2.7.12 or higher. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Ruby​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#ruby","content":" ynh_use_ruby Load the version of Ruby for an app, and set variables. Usage: ynh_use_ruby Details: ynh_use_ruby has to be used in any app scripts before using Ruby for the first time. This helper will provide alias and variables to use in your scripts. To use gem or Ruby, use the alias ynh_gem and ynh_rubyThose alias will use the correct version installed for the app For example: use ynh_gem install instead of gem install With sudo or ynh_exec_as, use instead the fallback variables $ynh_gem and $ynh_rubyAnd propagate $PATH to sudo with $ynh_ruby_load_path Exemple: ynh_exec_as $app $ynh_ruby_load_path $ynh_gem install $PATH contains the path of the requested version of Ruby. However, $PATH is duplicated into $ruby_path to outlast any manipulation of $PATH You can use the variable $ynh_ruby_load_path to quickly load your Ruby version in $PATH for an usage into a separate script. Exemple: $ynh_ruby_load_path $final_path/script_that_use_gem.sh` Finally, to start a Ruby service with the correct version, 2 solutions Either the app is dependent of Ruby or gem, but does not called it directly. In such situation, you need to load PATHEnvironment=&quot;__YNH_RUBY_LOAD_PATH__&quot;ExecStart=__FINALPATH__/my_appYou will replace YNH_RUBY_LOAD_PATH with $ynh_ruby_load_path Or Ruby start the app directly, then you don't need to load the PATH variableExecStart=__YNH_RUBY__ my_app runYou will replace YNH_RUBY with $ynh_ruby one other variable is also available $ruby_path: The absolute path to Ruby binaries for the chosen version. Requires YunoHost version 3.2.2 or higher. Dude, show me the code!  ynh_install_ruby Install a specific version of Ruby Usage: ynh_install_ruby --ruby_version=ruby_version Arguments: -v, --ruby_version=: Version of ruby to install. Details: ynh_install_ruby will install the version of Ruby provided as argument by using rbenv. This helper creates a /etc/profile.d/rbenv.sh that configures PATH environment for rbenv for every LOGIN user, hence your user must have a defined shell (as opposed to /usr/sbin/nologin) Don't forget to execute ruby-dependent command in a login environment (e.g. sudo --login option) When not possible (e.g. in systemd service definition), please use direct path to rbenv shims (e.g. $RBENV_ROOT/shims/bundle) Requires YunoHost version 3.2.2 or higher. Dude, show me the code!  ynh_remove_ruby Remove the version of Ruby used by the app. Usage: ynh_remove_ruby Details: This helper will also cleanup Ruby versions Dude, show me the code!  ynh_cleanup_ruby Remove no more needed versions of Ruby used by the app. Usage: ynh_cleanup_ruby Details: This helper will check what Ruby version are no more required, and uninstall them If no app uses Ruby, rbenv will be also removed. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Go​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#go","content":" ynh_use_go Load the version of Go for an app, and set variables. Usage: ynh_use_go Details: ynh_use_go has to be used in any app scripts before using Go for the first time. This helper will provide alias and variables to use in your scripts. To use gem or Go, use the alias ynh_gem and ynh_goThose alias will use the correct version installed for the app For example: use ynh_gem install instead of gem install With sudo or ynh_exec_as, use instead the fallback variables $ynh_gem and $ynh_goAnd propagate $PATH to sudo with $ynh_go_load_path Exemple: ynh_exec_as $app $ynh_go_load_path $ynh_gem install $PATH contains the path of the requested version of Go. However, $PATH is duplicated into $go_path to outlast any manipulation of $PATH You can use the variable $ynh_go_load_path to quickly load your Go version in $PATH for an usage into a separate script. Exemple: $ynh_go_load_path $install_dir/script_that_use_gem.sh Finally, to start a Go service with the correct version, 2 solutions Either the app is dependent of Go or gem, but does not called it directly. In such situation, you need to load PATHEnvironment=&quot;__YNH_GO_LOAD_PATH__&quot;ExecStart=__INSTALL_DIR__/my_appYou will replace YNH_GO_LOAD_PATH with $ynh_go_load_path Or Go start the app directly, then you don't need to load the PATH variableExecStart=__YNH_GO__ my_app runYou will replace YNH_GO with $ynh_go one other variable is also available $go_path: The absolute path to Go binaries for the chosen version. Requires YunoHost version 3.2.2 or higher. Dude, show me the code!  ynh_install_go Install a specific version of Go Usage: ynh_install_go --go_version=go_version Arguments: -v, --go_version=: Version of go to install. Details: ynh_install_go will install the version of Go provided as argument by using goenv. This helper creates a /etc/profile.d/goenv.sh that configures PATH environment for goenv for every LOGIN user, hence your user must have a defined shell (as opposed to /usr/sbin/nologin) Don't forget to execute go-dependent command in a login environment (e.g. sudo --login option) When not possible (e.g. in systemd service definition), please use direct path to goenv shims (e.g. $goenv_ROOT/shims/bundle) Requires YunoHost version 3.2.2 or higher. Dude, show me the code!  ynh_remove_go Remove the version of Go used by the app. Usage: ynh_remove_go Details: This helper will also cleanup Go versions Dude, show me the code!  ynh_cleanup_go Remove no more needed versions of Go used by the app. Usage: ynh_cleanup_go Details: This helper will check what Go version are no more required, and uninstall them If no app uses Go, goenv will be also removed. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Composer​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#composer","content":" ynh_composer_exec Execute a command with Composer Usage: ynh_composer_exec [--phpversion=phpversion] [--workdir=$install_dir] --commands=&quot;commands&quot; Arguments: -v, --phpversion: PHP version to use with composer-w, --workdir: The directory from where the command will be executed. Default $install_dir or $final_path-c, --commands: Commands to execute. Details: Requires YunoHost version 4.2 or higher. Dude, show me the code!  ynh_install_composer Install and initialize Composer in the given directory Usage: ynh_install_composer [--phpversion=phpversion] [--workdir=$install_dir] [--install_args=&quot;--optimize-autoloader&quot;] [--composerversion=composerversion] Arguments: -v, --phpversion: PHP version to use with composer-w, --workdir: The directory from where the command will be executed. Default $install_dir.-a, --install_args: Additional arguments provided to the composer install. Argument --no-dev already include-c, --composerversion: Composer version to install Details: Requires YunoHost version 4.2 or higher. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Databases​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#databases","content":" This is coupled to the 'database' resource in the manifest.toml - at least for mysql/postgresql. Mongodb/redis may have better integration in the future.  ","version":"Next","tagName":"h2"},{"title":"Mysql​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#mysql","content":" ynh_mysql_connect_as Open a connection as a user Usage: ynh_mysql_connect_as --user=user --password=password [--database=database] Arguments: -u, --user=: the user name to connect as-p, --password=: the user password-d, --database=: the database to connect to Examples: ynh_mysql_connect_as --user=&quot;user&quot; --password=&quot;pass&quot; &lt;&lt;&lt; &quot;UPDATE ...;&quot;ynh_mysql_connect_as --user=&quot;user&quot; --password=&quot;pass&quot; &lt; /path/to/file.sql Details: Requires YunoHost version 2.2.4 or higher. Dude, show me the code!  ynh_mysql_execute_as_root Execute a command as root user Usage: ynh_mysql_execute_as_root --sql=sql [--database=database] Arguments: -s, --sql=: the SQL command to execute-d, --database=: the database to connect to Details: Requires YunoHost version 2.2.4 or higher. Dude, show me the code!  ynh_mysql_execute_file_as_root Execute a command from a file as root user Usage: ynh_mysql_execute_file_as_root --file=file [--database=database] Arguments: -f, --file=: the file containing SQL commands-d, --database=: the database to connect to Details: Requires YunoHost version 2.2.4 or higher. Dude, show me the code!  ynh_mysql_dump_db Dump a database Usage: ynh_mysql_dump_db --database=database Arguments: -d, --database=: the database name to dump Returns: The mysqldump output Example: ynh_mysql_dump_db --database=roundcube &gt; ./dump.sql Details: Requires YunoHost version 2.2.4 or higher. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Postgresql​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#postgresql","content":" ynh_psql_connect_as Open a connection as a user Usage: ynh_psql_connect_as --user=user --password=password [--database=database] Arguments: -u, --user=: the user name to connect as-p, --password=: the user password-d, --database=: the database to connect to Examples: ynh_psql_connect_as 'user' 'pass' &lt;&lt;&lt; &quot;UPDATE ...;&quot;ynh_psql_connect_as 'user' 'pass' &lt; /path/to/file.sql Details: Requires YunoHost version 3.5.0 or higher. Dude, show me the code!  ynh_psql_execute_as_root Execute a command as root user Usage: ynh_psql_execute_as_root --sql=sql [--database=database] Arguments: -s, --sql=: the SQL command to execute-d, --database=: the database to connect to Details: Requires YunoHost version 3.5.0 or higher. Dude, show me the code!  ynh_psql_execute_file_as_root Execute a command from a file as root user Usage: ynh_psql_execute_file_as_root --file=file [--database=database] Arguments: -f, --file=: the file containing SQL commands-d, --database=: the database to connect to Details: Requires YunoHost version 3.5.0 or higher. Dude, show me the code!  ynh_psql_dump_db Dump a database Usage: ynh_psql_dump_db --database=database Arguments: -d, --database=: the database name to dump Returns: the psqldump output Example: ynh_psql_dump_db 'roundcube' &gt; ./dump.sql Details: Requires YunoHost version 3.5.0 or higher. Dude, show me the code!  ynh_psql_database_exists Check if a psql database exists Usage: ynh_psql_database_exists --database=database | exit: Return 1 if the database doesn't exist, 0 otherwise Arguments: -d, --database=: the database for which to check existence Details: Requires YunoHost version 3.5.0 or higher. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Mongodb​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#mongodb","content":" ynh_mongo_exec Execute a mongo command example: ynh_mongo_exec --command='db.getMongo().getDBNames().indexOf(&quot;wekan&quot;)' example: ynh_mongo_exec --command=&quot;db.getMongo().getDBNames().indexOf(&amp;#34;wekan&amp;#34;)&quot; Usage: ynh_mongo_exec [--user=user] [--password=password] [--authenticationdatabase=authenticationdatabase] [--database=database] [--host=host] [--port=port] --command=&quot;command&quot; [--eval] Arguments: -u, --user=: The user name to connect as-p, --password=: The user password-d, --authenticationdatabase=: The authenticationdatabase to connect to-d, --database=: The database to connect to-h, --host=: The host to connect to-P, --port=: The port to connect to-c, --command=: The command to evaluate-e, --eval: Evaluate instead of execute the command. Dude, show me the code!  ynh_mongo_dump_db Dump a database Usage: ynh_mongo_dump_db --database=database Arguments: -d, --database=: The database name to dump Returns: the mongodump output Example: ynh_mongo_dump_db --database=wekan &gt; ./dump.bson Dude, show me the code!  ynh_mongo_database_exists Check if a mongo database exists Usage: ynh_mongo_database_exists --database=database | exit: Return 1 if the database doesn't exist, 0 otherwise Arguments: -d, --database=: The database for which to check existence Dude, show me the code!  ynh_mongo_restore_db Restore a database Usage: ynh_mongo_restore_db --database=database Arguments: -d, --database=: The database name to restore Example: ynh_mongo_restore_db --database=wekan &lt; ./dump.bson Dude, show me the code!  ynh_mongo_setup_db Create a database, an user and its password. Then store the password in the app's config Usage: ynh_mongo_setup_db --db_user=user --db_name=name [--db_pwd=pwd] Arguments: -u, --db_user=: Owner of the database-n, --db_name=: Name of the database-p, --db_pwd=: Password of the database. If not provided, a password will be generated Details: After executing this helper, the password of the created database will be available in $db_pwd It will also be stored as &quot;mongopwd&quot; into the app settings. Dude, show me the code!  ynh_mongo_remove_db Remove a database if it exists, and the associated user Usage: ynh_mongo_remove_db --db_user=user --db_name=name Arguments: -u, --db_user=: Owner of the database-n, --db_name=: Name of the database Dude, show me the code!  ynh_install_mongo Install MongoDB and integrate MongoDB service in YunoHost Usage: ynh_install_mongo [--mongo_version=mongo_version] Arguments: -m, --mongo_version=: Version of MongoDB to install Dude, show me the code!  ynh_remove_mongo Remove MongoDB Only remove the MongoDB service integration in YunoHost for now if MongoDB package as been removed Usage: ynh_remove_mongo Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Redis​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#redis","content":" ynh_redis_get_free_db get the first available redis database Usage: ynh_redis_get_free_db Returns: the database number to use Dude, show me the code!  ynh_redis_remove_db Create a master password and set up global settings Please always call this script in install and restore scripts Usage: ynh_redis_remove_db database Arguments: database: the database to erase Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Configurations / Templating​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#configurations--templating","content":" ","version":"Next","tagName":"h2"},{"title":"Templating​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#templating","content":" ynh_add_config Create a dedicated config file from a template Usage: ynh_add_config --template=&quot;template&quot; --destination=&quot;destination&quot; Arguments: -t, --template=: Template config file to use-d, --destination=: Destination of the config file-j, --jinja: Use jinja template instead of the simple __MY_VAR__ templating format Examples: ynh_add_config --template=&quot;.env&quot; --destination=&quot;$install_dir/.env&quot; # (use the template file &quot;conf/.env&quot; from the app's package)ynh_add_config --jinja --template=&quot;config.j2&quot; --destination=&quot;$install_dir/config&quot; # (use the template file &quot;conf/config.j2&quot; from the app's package) Details: The template can be by default the name of a file in the conf directory of a YunoHost Package, a relative path or an absolute path. The helper will use the template template to generate a config filedestination by replacing the following keywords with global variables that should be defined before calling this helper : __PATH__ by $path_url __NAME__ by $app __NAMETOCHANGE__ by $app __USER__ by $app __FINALPATH__ by $final_path __PHPVERSION__ by $YNH_PHP_VERSION (packaging v1 only, packaging v2 uses phpversion setting implicitly set by apt resource) __YNH_NODE_LOAD_PATH__ by $ynh_node_load_PATH And any dynamic variables that should be defined before calling this helper like: __DOMAIN__ by $domain __APP__ by $app __VAR_1__ by $var_1 __VAR_2__ by $var_2 When --jinja is enabled​ This option is meant for advanced use-cases where the &quot;simple&quot; templating mode ain't enough because you need conditional blocks or loops. For a full documentation of jinja's syntax you can refer to:https://jinja.palletsprojects.com/en/3.1.x/templates/ Note that in YunoHost context, all variables are from shell variables and therefore are strings Keeping track of manual changes by the admin​ The helper will verify the checksum and backup the destination file if it's different before applying the new template. And it will calculate and store the destination file checksum into the app settings when configuration is done. Requires YunoHost version 4.1.0 or higher. Dude, show me the code!  ynh_read_var_in_file Get a value from heterogeneous file (yaml, json, php, python...) Usage: ynh_read_var_in_file --file=PATH --key=KEY Arguments: -f, --file=: the path to the file-k, --key=: the key to get-a, --after=: the line just before the key (in case of multiple lines with the name of the key in the file) Details: This helpers match several var affectation use case in several languages We don't use jq or equivalent to keep comments and blank space in files This helpers work line by line, it is not able to work correctly if you have several identical keys in your files Example of line this helpers can managed correctly .yml title: YunoHost documentation email: 'yunohost@yunohost.org' .json &quot;theme&quot;: &quot;colib'ris&quot;, &quot;port&quot;: 8102 &quot;some_boolean&quot;: false, &quot;user&quot;: null .ini some_boolean = On action = &quot;Clear&quot; port = 20 .php $user= user =&gt; 20 .py USER = 8102 user = 'https://donate.local' CUSTOM['user'] = 'YunoHost' Requires YunoHost version 4.3 or higher. Dude, show me the code!  ynh_write_var_in_file Set a value into heterogeneous file (yaml, json, php, python...) Usage: ynh_write_var_in_file --file=PATH --key=KEY --value=VALUE Arguments: -f, --file=: the path to the file-k, --key=: the key to set-v, --value=: the value to set-a, --after=: the line just before the key (in case of multiple lines with the name of the key in the file) Details: Requires YunoHost version 4.3 or higher. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Nginx​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#nginx","content":" ynh_add_nginx_config Create a dedicated nginx config Usage: ynh_add_nginx_config Details: This will use a template in ../conf/nginx.confSee the documentation of ynh_add_config for a description of the template format and how placeholders are replaced with actual variables. Additionally, ynh_add_nginx_config will replace: #sub_path_only by empty string if path_url is not '/'#root_path_only by empty string if path_url is '/' This allows to enable/disable specific behaviors dependenging on the install location Requires YunoHost version 4.1.0 or higher. Dude, show me the code!  ynh_remove_nginx_config Remove the dedicated nginx config Usage: ynh_remove_nginx_config Details: Requires YunoHost version 2.7.2 or higher. Dude, show me the code!  ynh_change_url_nginx_config Regen the nginx config in a change url context Usage: ynh_change_url_nginx_config Details: Requires YunoHost version 11.1.9 or higher. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Php​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#php","content":" ynh_add_fpm_config Create a dedicated PHP-FPM config Usage: ynh_add_fpm_config Details: Case 1 (recommended) : your provided a snippet conf/extra_php-fpm.conf The actual PHP configuration will be automatically generated, and your extra_php-fpm.conf will be appended (typically contains PHP upload limits) The resulting configuration will be deployed to the appropriate place, /etc/php/$phpversion/fpm/pool.d/$app.conf Performance-related options in the PHP conf, such as : pm.max_children, pm.start_servers, pm.min_spare_servers pm.max_spare_servers are computed from two parameters called &quot;usage&quot; and &quot;footprint&quot; which can be set to low/medium/high. (cf details below) If you wish to tweak those, please initialize the settings fpm_usage and fpm_footprintprior to calling this helper. Otherwise, &quot;low&quot; will be used as a default for both values. Otherwise, if you want the user to have control over these, we encourage to create a config panel (which should ultimately be standardized by the core ...) Case 2 (deprecate) : you provided an entire conf/php-fpm.conf The configuration will be hydrated, replacing FOOBAR placeholders with $foobar values, etc. The resulting configuration will be deployed to the appropriate place, /etc/php/$phpversion/fpm/pool.d/$app.conf fpm_footprint: Memory footprint of the service (low/medium/high). low - Less than 20 MB of RAM by pool. medium - Between 20 MB and 40 MB of RAM by pool. high - More than 40 MB of RAM by pool. N - Or you can specify a quantitative footprint as MB by pool (use watch -n0.5 ps -o user,cmd,%cpu,rss -u APP) fpm_usage: Expected usage of the service (low/medium/high). low - Personal usage, behind the SSO. medium - Low usage, few people or/and publicly accessible. high - High usage, frequently visited website. The footprint of the service will be used to defined the maximum footprint we can allow, which is half the maximum RAM. So it will be used to defined 'pm.max_children' A lower value for the footprint will allow more children for 'pm.max_children'. And so for 'pm.start_servers', 'pm.min_spare_servers' and 'pm.max_spare_servers' which are defined from the value of 'pm.max_children' NOTE: 'pm.max_children' can't exceed 4 times the number of processor's cores. The usage value will defined the way php will handle the children for the pool. A value set as 'low' will set the process manager to 'ondemand'. Children will start only if the service is used, otherwise no child will stay alive. This config gives the lower footprint when the service is idle. But will use more proc since it has to start a child as soon it's used. Set as 'medium', the process manager will be at dynamic. If the service is idle, a number of children equal to pm.min_spare_servers will stay alive. So the service can be quick to answer to any request. The number of children can grow if needed. The footprint can stay low if the service is idle, but not null. The impact on the proc is a little bit less than 'ondemand' as there's always a few children already available. Set as 'high', the process manager will be set at 'static'. There will be always as many children as 'pm.max_children', the footprint is important (but will be set as maximum a quarter of the maximum RAM) but the impact on the proc is lower. The service will be quick to answer as there's always many children ready to answer. Requires YunoHost version 4.1.0 or higher. Dude, show me the code!  ynh_remove_fpm_config Remove the dedicated PHP-FPM config Usage: ynh_remove_fpm_config Details: Requires YunoHost version 2.7.2 or higher. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Systemd​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#systemd","content":" ynh_add_systemd_config Create a dedicated systemd config Usage: ynh_add_systemd_config [--service=service] [--template=template] Arguments: -s, --service=: Service name (optionnal, $app by default)-t, --template=: Name of template file (optionnal, this is 'systemd' by default, meaning ../conf/systemd.service will be used as template) Details: This will use the template ../conf/&lt;templatename&gt;.service. See the documentation of ynh_add_config for a description of the template format and how placeholders are replaced with actual variables. Requires YunoHost version 4.1.0 or higher. Dude, show me the code!  ynh_remove_systemd_config Remove the dedicated systemd config Usage: ynh_remove_systemd_config [--service=service] Arguments: -s, --service=: Service name (optionnal, $app by default) Details: Requires YunoHost version 2.7.2 or higher. Dude, show me the code!  ynh_systemd_action Start (or other actions) a service, print a log in case of failure and optionnaly wait until the service is completely started Usage: ynh_systemd_action [--service_name=service_name] [--action=action] [ [--line_match=&quot;line to match&quot;] [--log_path=log_path] [--timeout=300] [--length=20] ] Arguments: -n, --service_name=: Name of the service to start. Default : $app-a, --action=: Action to perform with systemctl. Default: start-l, --line_match=: Line to match - The line to find in the log to attest the service have finished to boot. If not defined it don't wait until the service is completely started.-p, --log_path=: Log file - Path to the log file. Default : /var/log/$app/$app.log-t, --timeout=: Timeout - The maximum time to wait before ending the watching. Default : 300 seconds.-e, --length=: Length of the error log displayed for debugging : Default : 20 Details: Requires YunoHost version 3.5.0 or higher. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Fail2ban​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#fail2ban","content":" ynh_add_fail2ban_config Create a dedicated fail2ban config (jail and filter conf files) Usage: 1: ynh_add_fail2ban_config --logpath=log_file --failregex=filter [--max_retry=max_retry] [--ports=ports] 2: ynh_add_fail2ban_config --use_template Arguments: -l, --logpath=: Log file to be checked by fail2ban-r, --failregex=: Failregex to be looked for by fail2ban-m, --max_retry=: Maximum number of retries allowed before banning IP address - default: 3-p, --ports=: Ports blocked for a banned IP address - default: http,https-t, --use_template: Use this helper in template mode Details: This will use a template in ../conf/f2b_jail.conf and ../conf/f2b_filter.confSee the documentation of ynh_add_config for a description of the template format and how placeholders are replaced with actual variables. Generally your template will look like that by example (for synapse): f2b_jail.conf: [__APP__] enabled = true port = http,https filter = __APP__ logpath = /var/log/__APP__/logfile.log maxretry = 3 f2b_filter.conf: [INCLUDES] before = common.conf [Definition] # Part of regex definition (just used to make more easy to make the global regex) __synapse_start_line = .? \\- synapse\\..+ \\- # Regex definition. failregex = ^%(__synapse_start_line)s INFO \\- POST\\-(\\d+)\\- &lt;HOST&gt; \\- \\d+ \\- Received request\\: POST /_matrix/client/r0/login\\??&lt;SKIPLINES&gt;%(__synapse_start_line)s INFO \\- POST\\-\\1\\- Got login request with identifier: \\{u'type': u'm.id.user', u'user'\\: u'(.+?)'\\}, medium\\: None, address: None, user\\: u'\\5'&lt;SKIPLINES&gt;%(__synapse_start_line)s WARNING \\- \\- (Attempted to login as @\\5\\:.+ but they do not exist|Failed password login for user @\\5\\:.+)$ ignoreregex = Note about the &quot;failregex&quot; option:​ regex to match the password failure messages in the logfile. The host must be matched by a group named &quot;host&quot;. The tag &quot;&lt;HOST&gt;&quot; can be used for standard IP/hostname matching and is only an alias for (?:::f{4,6}:)?(?P&lt;host&gt;[\\w\\-.^_]+) You can find some more explainations about how to make a regex here :https://www.fail2ban.org/wiki/index.php/MANUAL_0_8#Filters To validate your regex you can test with this command: fail2ban-regex /var/log/YOUR_LOG_FILE_PATH /etc/fail2ban/filter.d/YOUR_APP.conf Requires YunoHost version 4.1.0 or higher. Dude, show me the code!  ynh_remove_fail2ban_config Remove the dedicated fail2ban config (jail and filter conf files) Usage: ynh_remove_fail2ban_config Details: Requires YunoHost version 3.5.0 or higher. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Logrotate​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#logrotate","content":" ynh_use_logrotate Use logrotate to manage the logfile Usage: ynh_use_logrotate [--logfile=/log/file] [--specific_user=user/group] Arguments: -l, --logfile=: absolute path of logfile-u, --specific_user=: run logrotate as the specified user and group. If not specified logrotate is runned as root. Details: If no --logfile is provided, /var/log/$app will be used as default.logfile can point to a directory or a file. Requires YunoHost version 2.6.4 or higher. Dude, show me the code!  ynh_remove_logrotate Remove the app's logrotate config. Usage: ynh_remove_logrotate Details: Requires YunoHost version 2.6.4 or higher. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Misc Tools​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#misc-tools","content":" ","version":"Next","tagName":"h2"},{"title":"Utils​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#utils","content":" ynh_local_curl Curl abstraction to help with POST requests to local pages (such as installation forms) Usage: ynh_local_curl &quot;page_uri&quot; &quot;key1=value1&quot; &quot;key2=value2&quot; ... Arguments: page_uri: Path (relative to $path_url) of the page where POST data will be sentkey1=value1: (Optionnal) POST key and corresponding valuekey2=value2: (Optionnal) Another POST key and corresponding value...: (Optionnal) More POST keys and values Example: ynh_local_curl &quot;/install.php?installButton&quot; &quot;foo=$var1&quot; &quot;bar=$var2&quot; Details: For multiple calls, cookies are persisted between each call for the same app $domain and $path_url should be defined externally (and correspond to the domain.tld and the /path (of the app?)) Requires YunoHost version 2.6.4 or higher. Dude, show me the code!  ynh_secure_remove Remove a file or a directory securely Usage: ynh_secure_remove --file=path_to_remove Arguments: -f, --file=: File or directory to remove Details: Requires YunoHost version 2.6.4 or higher. Dude, show me the code!  ynh_read_manifest Read the value of a key in a ynh manifest file Usage: ynh_read_manifest --manifest=&quot;manifest.json&quot; --manifest_key=&quot;key&quot; Arguments: -m, --manifest=: Path of the manifest to read-k, --manifest_key=: Name of the key to find Returns: the value associate to that key Details: Requires YunoHost version 3.5.0 or higher. Dude, show me the code!  ynh_app_upstream_version Read the upstream version from the manifest or $YNH_APP_MANIFEST_VERSION Usage: ynh_app_upstream_version [--manifest=&quot;manifest.json&quot;] Arguments: -m, --manifest=: Path of the manifest to read Returns: the version number of the upstream app Details: If the manifest is not specified, the envvar $YNH_APP_MANIFEST_VERSION will be used. The version number in the manifest is defined by &lt;upstreamversion&gt;~ynh&lt;packageversion&gt;. For example, if the manifest contains 4.3-2~ynh3 the function will return 4.3-2 Requires YunoHost version 3.5.0 or higher. Dude, show me the code!  ynh_check_app_version_changed Checks the app version to upgrade with the existing app version and returns: Usage: ynh_check_app_version_changed Returns: UPGRADE_APP if the upstream version changed, UPGRADE_PACKAGE otherwise. Details: This helper should be used to avoid an upgrade of an app, or the upstream part of it, when it's not needed Requires YunoHost version 3.5.0 or higher. Dude, show me the code!  ynh_compare_current_package_version Compare the current package version against another version given as an argument. Usage: ynh_compare_current_package_version --comparison (lt|le|eq|ne|ge|gt) --version &lt;X~ynhY&gt; Arguments: --comparison: Comparison type. Could be : lt (lower than), le (lower or equal), eq (equal), ne (not equal), ge (greater or equal), gt (greater than)--version: The version to compare. Need to be a version in the yunohost package version type (like 2.3.1~ynh4) Returns: 0 if the evaluation is true, 1 if false. Example: ynh_compare_current_package_version --comparison lt --version 2.3.2~ynh1 Details: This helper is usually used when we need to do some actions only for some old package versions. Generally you might probably use it as follow in the upgrade script : if ynh_compare_current_package_version --comparison lt --version 2.3.2~ynh1 then # Do something that is needed for the package version older than 2.3.2~ynh1 fi Requires YunoHost version 3.8.0 or higher. Dude, show me the code!  ynh_user_exists Check if a YunoHost user exists Usage: ynh_user_exists --username=username Arguments: -u, --username=: the username to check Returns: 0 if the user exists, 1 otherwise. Example: ynh_user_exists 'toto' || echo &quot;User does not exist&quot; Details: Requires YunoHost version 2.2.4 or higher. Dude, show me the code!  ynh_user_get_info Retrieve a YunoHost user information Usage: ynh_user_get_info --username=username --key=key Arguments: -u, --username=: the username to retrieve info from-k, --key=: the key to retrieve Returns: the value associate to that key Example: mail=$(ynh_user_get_info --username=&quot;toto&quot; --key=mail) Details: Requires YunoHost version 2.2.4 or higher. Dude, show me the code!  ynh_user_list Get the list of YunoHost users Usage: ynh_user_list Returns: one username per line as strings Example: for u in $(ynh_user_list); do ... ; done Details: Requires YunoHost version 2.4.0 or higher. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Setting​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#setting","content":" ynh_app_setting_get Get an application setting Usage: ynh_app_setting_get --app=app --key=key Arguments: -a, --app=: the application id-k, --key=: the setting to get Details: Requires YunoHost version 2.2.4 or higher. Dude, show me the code!  ynh_app_setting_set Set an application setting Usage: ynh_app_setting_set --app=app --key=key --value=value Arguments: -a, --app=: the application id-k, --key=: the setting name to set-v, --value=: the setting value to set Details: When choosing the setting key's name, note that including the following keywords will make the associated setting's value appear masked in the debug logs (cf. related code): pwd, pass, passwd, password, passphrase, secret\\w* (regex), \\w+key (regex), token, PASSPHRASEThis is meant to allow sharing the logs while preserving confidential data, but having this in mind is useful would you expect to see those values while debugging your scripts. Requires YunoHost version 2.2.4 or higher. Dude, show me the code!  ynh_app_setting_set_default Set an application setting but only if the &quot;$key&quot; variable ain't set yet Usage: ynh_app_setting_set_default --app=app --key=key --value=value Arguments: -a, --app=: the application id-k, --key=: the setting name to set-v, --value=: the default setting value to set Details: Note that it doesn't just define the setting but ALSO define the $foobar variable Hence it's meant as a replacement for this legacy overly complex syntax: if [ -z &quot;${foo:-}&quot; ] then foo=&quot;bar&quot; ynh_app_setting_set --key=&quot;foo&quot; --value=&quot;$foo&quot; fi Requires YunoHost version 11.1.16 or higher. Dude, show me the code!  ynh_app_setting_delete Delete an application setting Usage: ynh_app_setting_delete --app=app --key=key Arguments: -a, --app=: the application id-k, --key=: the setting to delete Details: Requires YunoHost version 2.2.4 or higher. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"String​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#string","content":" ynh_string_random Generate a random string Usage: ynh_string_random [--length=string_length] Arguments: -l, --length=: the string length to generate (default: 24)-f, --filter=: the kind of characters accepted in the output (default: 'A-Za-z0-9') Returns: the generated string Example: pwd=$(ynh_string_random --length=8) Details: Requires YunoHost version 2.2.4 or higher. Dude, show me the code!  ynh_replace_string Substitute/replace a string (or expression) by another in a file Usage: ynh_replace_string --match_string=match_string --replace_string=replace_string --target_file=target_file Arguments: -m, --match_string=: String to be searched and replaced in the file-r, --replace_string=: String that will replace matches-f, --target_file=: File in which the string will be replaced. Details: As this helper is based on sed command, regular expressions and references to sub-expressions can be used (see sed manual page for more information) Requires YunoHost version 2.6.4 or higher. Dude, show me the code!  ynh_replace_special_string Substitute/replace a special string by another in a file Usage: ynh_replace_special_string --match_string=match_string --replace_string=replace_string --target_file=target_file Arguments: -m, --match_string=: String to be searched and replaced in the file-r, --replace_string=: String that will replace matches-t, --target_file=: File in which the string will be replaced. Details: This helper will use ynh_replace_string, but as you can use special characters, you can't use some regular expressions and sub-expressions. Requires YunoHost version 2.7.7 or higher. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Backup​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#backup","content":" ynh_backup Add a file or a directory to the list of paths to backup Usage: ynh_backup --src_path=src_path [--dest_path=dest_path] [--is_big] [--not_mandatory] Arguments: -s, --src_path=: file or directory to bind or symlink or copy. it shouldn't be in the backup dir.-d, --dest_path=: destination file or directory inside the backup dir-b, --is_big: Indicate data are big (mail, video, image ...)-m, --not_mandatory: Indicate that if the file is missing, the backup can ignore it. Details: This helper can be used both in a system backup hook, and in an app backup script ynh_backup writes src_path and the relative dest_path into a CSV file, and it creates the parent destination directory If dest_path is ended by a slash it complete this path with the basename of src_path. Example in the context of a wordpress app : ynh_backup &quot;/etc/nginx/conf.d/$domain.d/$app.conf&quot; # =&gt; This line will be added into CSV file # &quot;/etc/nginx/conf.d/$domain.d/$app.conf&quot;,&quot;apps/wordpress/etc/nginx/conf.d/$domain.d/$app.conf&quot; ynh_backup &quot;/etc/nginx/conf.d/$domain.d/$app.conf&quot; &quot;conf/nginx.conf&quot; # =&gt; &quot;/etc/nginx/conf.d/$domain.d/$app.conf&quot;,&quot;apps/wordpress/conf/nginx.conf&quot; ynh_backup &quot;/etc/nginx/conf.d/$domain.d/$app.conf&quot; &quot;conf/&quot; # =&gt; &quot;/etc/nginx/conf.d/$domain.d/$app.conf&quot;,&quot;apps/wordpress/conf/$app.conf&quot; ynh_backup &quot;/etc/nginx/conf.d/$domain.d/$app.conf&quot; &quot;conf&quot; # =&gt; &quot;/etc/nginx/conf.d/$domain.d/$app.conf&quot;,&quot;apps/wordpress/conf&quot; #Deprecated usages (maintained for retro-compatibility) ynh_backup &quot;/etc/nginx/conf.d/$domain.d/$app.conf&quot; &quot;${backup_dir}/conf/nginx.conf&quot; # =&gt; &quot;/etc/nginx/conf.d/$domain.d/$app.conf&quot;,&quot;apps/wordpress/conf/nginx.conf&quot; ynh_backup &quot;/etc/nginx/conf.d/$domain.d/$app.conf&quot; &quot;/conf/&quot; # =&gt; &quot;/etc/nginx/conf.d/$domain.d/$app.conf&quot;,&quot;apps/wordpress/conf/$app.conf&quot; How to use --is_big: --is_big is used to specify that this part of the backup can be quite huge. So, you don't want that your package does backup that part during ynh_backup_before_upgrade. In the same way, an user may doesn't want to backup this big part of the app for each of his backup. And so handle that part differently. As this part of your backup may not be done, your restore script has to handle it. In your restore script, use --not_mandatory with ynh_restore_fileAs well in your remove script, you should not remove those data ! Or an user may end up with a failed upgrade restoring an app without data anymore ! To have the benefit of --is_big while doing a backup, you can whether set the environement variable BACKUP_CORE_ONLY to 1 (BACKUP_CORE_ONLY=1) before the backup command. It will affect only that backup command. Or set the config do_not_backup_data to 1 into the settings.yml of the app. This will affect all backups for this app until the setting is removed. Requires YunoHost version 2.4.0 or higher. Requires YunoHost version 3.5.0 or higher for the argument --not_mandatory Dude, show me the code!  ynh_restore Restore all files that were previously backuped in a core backup script or app backup script Usage: ynh_restore Details: Requires YunoHost version 2.6.4 or higher. Dude, show me the code!  ynh_restore_file Restore a file or a directory Usage: ynh_restore_file --origin_path=origin_path [--dest_path=dest_path] [--not_mandatory] Arguments: -o, --origin_path=: Path where was located the file or the directory before to be backuped or relative path to $YNH_CWD where it is located in the backup archive-d, --dest_path=: Path where restore the file or the dir. If unspecified, the destination will be ORIGIN_PATH or if the ORIGIN_PATH doesn't exist in the archive, the destination will be searched into backup.csv-m, --not_mandatory: Indicate that if the file is missing, the restore process can ignore it. Examples: ynh_restore_file -o &quot;/etc/nginx/conf.d/$domain.d/$app.conf&quot;You can also use relative paths:ynh_restore_file -o &quot;conf/nginx.conf&quot; Details: Use the registered path in backup_list by ynh_backup to restore the file at the right place. If DEST_PATH already exists and is lighter than 500 Mo, a backup will be made in/var/cache/yunohost/appconfbackup/. Otherwise, the existing file is removed. if apps/$app/etc/nginx/conf.d/$domain.d/$app.conf exists, restore it into/etc/nginx/conf.d/$domain.d/$app.confif no, search for a match in the csv (eg: conf/nginx.conf) and restore it into/etc/nginx/conf.d/$domain.d/$app.conf Requires YunoHost version 2.6.4 or higher. Requires YunoHost version 3.5.0 or higher for the argument --not_mandatory Dude, show me the code!  ynh_store_file_checksum Calculate and store a file checksum into the app settings Usage: ynh_store_file_checksum --file=file Arguments: -f, --file=: The file on which the checksum will performed, then stored. Details: $app should be defined when calling this helper Requires YunoHost version 2.6.4 or higher. Dude, show me the code!  ynh_backup_if_checksum_is_different Verify the checksum and backup the file if it's different Usage: ynh_backup_if_checksum_is_different --file=file Arguments: -f, --file=: The file on which the checksum test will be perfomed. Returns: the name of a backup file, or nothing Details: This helper is primarily meant to allow to easily backup personalised/manually modified config files. Requires YunoHost version 2.6.4 or higher. Dude, show me the code!  ynh_delete_file_checksum Delete a file checksum from the app settings Usage: ynh_delete_file_checksum --file=file Arguments: -f, --file=: The file for which the checksum will be deleted Details: $app should be defined when calling this helper Requires YunoHost version 3.3.1 or higher. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Logging​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#logging","content":" ynh_die Print a message to stderr and exit Usage: ynh_die --message=MSG [--ret_code=RETCODE] Arguments: -m, --message=: Message to display-c, --ret_code=: Exit code to exit with Details: Requires YunoHost version 2.4.0 or higher. Dude, show me the code!  ynh_print_info Display a message in the 'INFO' logging category Usage: ynh_print_info --message=&quot;Some message&quot; Arguments: -m, --message=: Message to display Details: Requires YunoHost version 3.2.0 or higher. Dude, show me the code!  ynh_print_warn Print a warning on stderr Usage: ynh_print_warn --message=&quot;Text to print&quot; Arguments: -m, --message=: The text to print Details: Requires YunoHost version 3.2.0 or higher. Dude, show me the code!  ynh_print_err Print an error on stderr Usage: ynh_print_err --message=&quot;Text to print&quot; Arguments: -m, --message=: The text to print Details: Requires YunoHost version 3.2.0 or higher. Dude, show me the code!  ynh_exec_err Execute a command and print the result as an error Usage: ynh_exec_err your command and args Arguments: command: command to execute Details: Note that you should NOT quote the command but only prefix it with ynh_exec_err Requires YunoHost version 3.2.0 or higher. Dude, show me the code!  ynh_exec_warn Execute a command and print the result as a warning Usage: ynh_exec_warn your command and args Arguments: command: command to execute Details: Note that you should NOT quote the command but only prefix it with ynh_exec_warn Requires YunoHost version 3.2.0 or higher. Dude, show me the code!  ynh_exec_warn_less Execute a command and force the result to be printed on stdout Usage: ynh_exec_warn_less your command and args Arguments: command: command to execute Details: Note that you should NOT quote the command but only prefix it with ynh_exec_warn Requires YunoHost version 3.2.0 or higher. Dude, show me the code!  ynh_exec_quiet Execute a command and redirect stdout in /dev/null Usage: ynh_exec_quiet your command and args Arguments: command: command to execute Details: Note that you should NOT quote the command but only prefix it with ynh_exec_warn Requires YunoHost version 3.2.0 or higher. Dude, show me the code!  ynh_exec_fully_quiet Execute a command and redirect stdout and stderr in /dev/null Usage: ynh_exec_quiet your command and args Arguments: command: command to execute Details: Note that you should NOT quote the command but only prefix it with ynh_exec_quiet Requires YunoHost version 3.2.0 or higher. Dude, show me the code!  ynh_exec_and_print_stderr_only_if_error Execute a command and redirect stderr in /dev/null. Print stderr on error. Usage: ynh_exec_and_print_stderr_only_if_error your command and args Arguments: command: command to execute Details: Note that you should NOT quote the command but only prefix it with ynh_exec_and_print_stderr_only_if_error Requires YunoHost version 11.2 or higher. Dude, show me the code!  ynh_script_progression Print a progress bar showing the progression of an app script Usage: ynh_script_progression --message=message [--weight=weight] [--time] Arguments: -m, --message=: The text to print-w, --weight=: The weight for this progression. This value is 1 by default. Use a bigger value for a longer part of the script.-t, --time: Print the execution time since the last call to this helper. Especially usefull to define weights. The execution time is given for the duration since the previous call. So the weight should be applied to this previous call.-l, --last: Use for the last call of the helper, to fill the progression bar. Details: Requires YunoHost version 3.5.0 or higher. Dude, show me the code!  ynh_return Return data to the YunoHost core for later processing (to be used by special hooks like app config panel and core diagnosis) Usage: ynh_return somedata Details: Requires YunoHost version 3.6.0 or higher. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Multimedia​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#multimedia","content":" ynh_multimedia_build_main_dir Initialize the multimedia directory system Usage: ynh_multimedia_build_main_dir Details: Requires YunoHost version 4.2 or higher. Dude, show me the code!  ynh_multimedia_addfolder Add a directory in yunohost.multimedia Usage: ynh_multimedia_addfolder --source_dir=&quot;source_dir&quot; --dest_dir=&quot;dest_dir&quot; Arguments: -s, --source_dir=: Source directory - The real directory which contains your medias.-d, --dest_dir=: Destination directory - The name and the place of the symbolic link, relative to &quot;/home/yunohost.multimedia&quot; Details: This &quot;directory&quot; will be a symbolic link to a existing directory. Requires YunoHost version 4.2 or higher. Dude, show me the code!  ynh_multimedia_addaccess Allow an user to have an write authorisation in multimedia directories Usage: ynh_multimedia_addaccess user_name Arguments: -u, --user_name=: The name of the user which gain this access. Details: Requires YunoHost version 4.2 or higher. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Deprecated Or Handled By The Core / App Resources Since V2​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#deprecated-or-handled-by-the-core--app-resources-since-v2","content":" ","version":"Next","tagName":"h2"},{"title":"Permission​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#permission","content":" ynh_permission_create Create a new permission for the app Usage: ynh_permission_create --permission=&quot;permission&quot; [--url=&quot;url&quot;] [--additional_urls=&quot;second-url&quot; [ &quot;third-url&quot; ]] [--auth_header=true|false] [--allowed=group1 [ group2 ]] [--show_tile=true|false] [--protected=true|false] Arguments: -p, --permission=: the name for the permission (by default a permission named &quot;main&quot; already exist)-u, --url=: (optional) URL for which access will be allowed/forbidden. Note that if 'show_tile' is enabled, this URL will be the URL of the tile.-A, --additional_urls=: (optional) List of additional URL for which access will be allowed/forbidden-h, --auth_header=: (optional) Define for the URL of this permission, if SSOwat pass the authentication header to the application. Default is true-a, --allowed=: (optional) A list of group/user to allow for the permission-t, --show_tile=: (optional) Define if a tile will be shown in the SSO. If yes the name of the tile will be the 'label' parameter. Defaults to false for the permission different than 'main'.-P, --protected=: (optional) Define if this permission is protected. If it is protected the administrator won't be able to add or remove the visitors group of this permission. Defaults to 'false'. Details: Example 1: ynh_permission_create --permission=admin --url=/admin --additional_urls=domain.tld/admin /superadmin --allowed=alice bob \\ --show_tile=true This example will create a new permission permission with this following effect: A tile named &quot;My app admin&quot; in the SSO will be available for the users alice and bob. This tile will point to the relative url '/admin'.Only the user alice and bob will have the access to theses following url: /admin, domain.tld/admin, /superadmin Example 2: ynh_permission_create --permission=api --url=domain.tld/api --auth_header=false --allowed=visitors --protected=true This example will create a new protected permission. So the admin won't be able to add/remove the visitors group of this permission. In case of an API with need to be always public it avoid that the admin break anything. With this permission all client will be allowed to access to the url 'domain.tld/api'. Note that in this case no tile will be show on the SSO. Note that the auth_header parameter is to 'false'. So no authentication header will be passed to the application. Generally the API is requested by an application and enabling the auth_header has no advantage and could bring some issues in some case. So in this case it's better to disable this option for all API. If provided, 'url' or 'additional_urls' is assumed to be relative to the app domain/path if they start with '/'. For example: / -&gt; domain.tld/app /admin -&gt; domain.tld/app/admin domain.tld/app/api -&gt; domain.tld/app/api 'url' or 'additional_urls' can be treated as a PCRE (not lua) regex if it starts with &quot;re:&quot;. For example: re:/api/[A-Z]$ -&gt; domain.tld/app/api/[A-Z]$ re:domain.tld/app/api/[A-Z]$ -&gt; domain.tld/app/api/[A-Z]$ Note that globally the parameter 'url' and 'additional_urls' are same. The only difference is: 'url' is only one url, 'additional_urls' can be a list of urls. There are no limitation of 'additional_urls''url' is used for the url of tile in the SSO (if enabled with the 'show_tile' parameter) About the authentication header (auth_header parameter). The SSO pass (by default) to the application theses following HTTP header (linked to the authenticated user) to the application: &quot;Auth-User&quot;: username&quot;Remote-User&quot;: username&quot;Email&quot;: user email Generally this feature is usefull to authenticate automatically the user in the application but in some case the application don't work with theses header and theses header need to be disabled to have the application to work correctly. See https://github.com/YunoHost/issues/issues/1420 for more informations Requires YunoHost version 3.7.0 or higher. Dude, show me the code!  ynh_permission_delete Remove a permission for the app (note that when the app is removed all permission is automatically removed) Usage: ynh_permission_delete --permission=&quot;permission&quot; Arguments: -p, --permission=: the name for the permission (by default a permission named &quot;main&quot; is removed automatically when the app is removed) Example: ynh_permission_delete --permission=editors Details: Requires YunoHost version 3.7.0 or higher. Dude, show me the code!  ynh_permission_exists Check if a permission exists Usage: ynh_permission_exists --permission=permission | exit: Return 1 if the permission doesn't exist, 0 otherwise Arguments: -p, --permission=: the permission to check Details: Requires YunoHost version 3.7.0 or higher. Dude, show me the code!  ynh_permission_url Redefine the url associated to a permission Usage: ynh_permission_url --permission &quot;permission&quot; [--url=&quot;url&quot;] [--add_url=&quot;new-url&quot; [ &quot;other-new-url&quot; ]] [--remove_url=&quot;old-url&quot; [ &quot;other-old-url&quot; ]] [--auth_header=true|false] [--clear_urls] Arguments: -p, --permission=: the name for the permission (by default a permission named &quot;main&quot; is removed automatically when the app is removed)-u, --url=: (optional) URL for which access will be allowed/forbidden. Note that if you want to remove url you can pass an empty sting as arguments (&quot;&quot;).-a, --add_url=: (optional) List of additional url to add for which access will be allowed/forbidden.-r, --remove_url=: (optional) List of additional url to remove for which access will be allowed/forbidden-h, --auth_header=: (optional) Define for the URL of this permission, if SSOwat pass the authentication header to the application-c, --clear_urls: (optional) Clean all urls (url and additional_urls) Details: Requires YunoHost version 3.7.0 or higher. Dude, show me the code!  ynh_permission_update Update a permission for the app Usage: ynh_permission_update --permission &quot;permission&quot; [--add=&quot;group&quot; [&quot;group&quot; ...]] [--remove=&quot;group&quot; [&quot;group&quot; ...]] [--show_tile=true|false] [--protected=true|false] Arguments: -p, --permission=: the name for the permission (by default a permission named &quot;main&quot; already exist)-a, --add=: the list of group or users to enable add to the permission-r, --remove=: the list of group or users to remove from the permission-t, --show_tile=: (optional) Define if a tile will be shown in the SSO-P, --protected=: (optional) Define if this permission is protected. If it is protected the administrator won't be able to add or remove the visitors group of this permission. Details: Requires YunoHost version 3.7.0 or higher. Dude, show me the code!  ynh_permission_has_user Check if a permission has an user Usage: ynh_permission_has_user --permission=permission --user=user | exit: Return 1 if the permission doesn't have that user or doesn't exist, 0 otherwise Arguments: -p, --permission=: the permission to check-u, --user=: the user seek in the permission Example: ynh_permission_has_user --permission=main --user=visitors Details: Requires YunoHost version 3.7.1 or higher. Dude, show me the code!  ynh_legacy_permissions_exists Check if a legacy permissions exist Usage: ynh_legacy_permissions_exists | exit: Return 1 if the permission doesn't exist, 0 otherwise Details: Requires YunoHost version 4.1.2 or higher. Dude, show me the code!  ynh_legacy_permissions_delete_all Remove all legacy permissions Usage: ynh_legacy_permissions_delete_all Example: if ynh_legacy_permissions_exists then ynh_legacy_permissions_delete_all # You can recreate the required permissions here with ynh_permission_create fi Requires YunoHost version 4.1.2 or higher. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Apt​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#apt","content":" ynh_package_is_installed Check either a package is installed or not Usage: ynh_package_is_installed --package=name Arguments: -p, --package=: the package name to check Returns: 0 if the package is installed, 1 else. Example: ynh_package_is_installed --package=yunohost &amp;&amp; echo &quot;installed&quot; Details: Requires YunoHost version 2.2.4 or higher. Dude, show me the code!  ynh_install_app_dependencies Define and install dependencies with a equivs control file Usage: ynh_install_app_dependencies dep [dep [...]] Arguments: dep: the package name to install in dependence.&quot;dep1|dep2|…&quot;: You can specify alternatives. It will require to install (dep1 or dep2, etc). Details: This helper can/should only be called once per app example : ynh_install_app_dependencies dep1 dep2 &quot;dep3|dep4|dep5&quot; Requires YunoHost version 2.6.4 or higher. Dude, show me the code!  ynh_remove_app_dependencies Remove fake package and its dependencies Usage: ynh_remove_app_dependencies Details: Dependencies will removed only if no other package need them. Requires YunoHost version 2.6.4 or higher. Dude, show me the code!  ynh_install_extra_app_dependencies Install packages from an extra repository properly. Usage: ynh_install_extra_app_dependencies --repo=&quot;repo&quot; --package=&quot;dep1 dep2&quot; [--key=key_url] [--name=name] Arguments: -r, --repo=: Complete url of the extra repository.-p, --package=: The packages to install from this extra repository-k, --key=: url to get the public key.-n, --name=: Name for the files for this repo, $app as default value. Details: Requires YunoHost version 3.8.1 or higher. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Systemuser​","type":1,"pageTitle":"App helpers (v2)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.0#systemuser","content":" ynh_system_user_create Create a system user Usage: ynh_system_user_create --username=user_name [--home_dir=home_dir] [--use_shell] [--groups=&quot;group1 group2&quot;] Arguments: -u, --username=: Name of the system user that will be create-h, --home_dir=: Path of the home dir for the user. Usually the final path of the app. If this argument is omitted, the user will be created without home-s, --use_shell: Create a user using the default login shell if present. If this argument is omitted, the user will be created with /usr/sbin/nologin shell-g, --groups: Add the user to system groups. Typically meant to add the user to the ssh.app / sftp.app group (e.g. for borgserver, my_webapp) Details: Create a nextcloud user with no home directory and /usr/sbin/nologin login shell (hence no login capability) : ynh_system_user_create --username=nextcloud Create a discourse user using /var/www/discourse as home directory and the default login shell : ynh_system_user_create --username=discourse --home_dir=/var/www/discourse --use_shell Requires YunoHost version 2.6.4 or higher. Dude, show me the code!  ynh_system_user_delete Delete a system user Usage: ynh_system_user_delete --username=user_name Arguments: -u, --username=: Name of the system user that will be create Details: Requires YunoHost version 2.6.4 or higher. Dude, show me the code!  ynh_exec_as Execute a command as another user Usage: ynh_exec_as $USER COMMAND [ARG ...] Details: Requires YunoHost version 4.1.7 or higher. Dude, show me the code!   ","version":"Next","tagName":"h3"},{"title":"App helpers (v2.1)","type":0,"sectionRef":"#","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1","content":"","keywords":"","version":"Next"},{"title":"Sources​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#sources","content":" This is coupled to the 'sources' resource in the manifest.toml  ","version":"Next","tagName":"h2"},{"title":"Sources​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#sources-1","content":" ynh_setup_source Download, check integrity, uncompress and patch upstream sources Usage: ynh_setup_source --dest_dir=dest_dir [--source_id=source_id] [--keep=&quot;file1 file2&quot;] [--full_replace] Arguments: --dest_dir=: Directory where to setup sources--source_id=: Name of the source, defaults to main (when the sources resource exists in manifest.toml) or (legacy) app otherwise--keep=: Space-separated list of files/folders that will be backup/restored in $dest_dir, such as a config file you don't want to overwrite. For example 'conf.json secrets.json logs' (no trailing / for folders)--full_replace=: Remove previous sources before installing new sources (can be 1 or 0, default to 0) Details: This helper will read infos from the 'sources' resources in the manifest.toml of the app and expect a structure like: [resources.sources] [resources.sources.main] url = &quot;https://some.address.to/download/the/app/archive&quot; sha256 = &quot;0123456789abcdef&quot; # The sha256 sum of the asset obtained from the URL (See also the resources documentation which may be more complete?) Optional flags in the 'sources' resource​ format = &quot;tar.gz&quot;/xz/bz2/tar # automatically guessed from the extension of the URL, but can be set explicitly. Will use `tar` to extract &quot;zip&quot; # automatically guessed from the extension of the URL, but can be set explicitly. Will use `unzip` to extract &quot;docker&quot; # useful to extract files from an already-built docker image (instead of rebuilding them locally). Will use `docker-image-extract` to extract &quot;whatever&quot; # an arbitrary value, not really meaningful except to imply that the file won't be extracted in_subdir = true # default, there's an intermediate subdir in the archive before accessing the actual files false # sources are directly in the archive root n # (special cases) an integer representing a number of subdirs levels to get rid of extract = true # default if file is indeed an archive such as .zip, .tar.gz, .tar.bz2, ... = false # default if file 'format' is not set and the file is not to be extracted because it is not an archive but a script or binary or whatever asset. # in which case the file will only be `mv`ed to the location possibly renamed using the `rename` value rename = &quot;whatever_your_want&quot; # to be used for convenience when `extract` is false and the default name of the file is not practical platform = &quot;linux/amd64&quot; # (defaults to &quot;linux/$YNH_ARCH&quot;) to be used in conjonction with `format = &quot;docker&quot;` to specify which architecture to extract for You may also define assets url and checksum per-architectures such as: [resources.sources] [resources.sources.main] amd64.url = &quot;https://some.address.to/download/the/app/archive/when/amd64&quot; amd64.sha256 = &quot;0123456789abcdef&quot; armhf.url = &quot;https://some.address.to/download/the/app/archive/when/armhf&quot; armhf.sha256 = &quot;fedcba9876543210&quot; In which case ynh_setup_source --dest_dir=&quot;$install_dir&quot; will automatically pick the appropriate source depending on the arch The helper will: Download the specific URL if there is no local archiveCheck the integrity with the specific sha256 sumUncompress the archive to $dest_dir. If in_subdir is true, the first level directory of the archive will be removed.If in_subdir is a numeric value, the N first level directories will be removed. Patches named patches/${src_id}/*.patch will be applied to $dest_dirApply sane default permissions (see _ynh_apply_default_permissions) Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"App Technologies​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#app-technologies","content":" These allow to install specific version of the technology required to run some apps  ","version":"Next","tagName":"h2"},{"title":"Nodejs​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#nodejs","content":" ynh_nodejs_install Install a specific version of nodejs, using 'n' Usage: ynh_nodejs_install Details: The installed version is defined by $nodejs_version which should be defined as global prior to calling this helper n (Node version management) uses the PATH variable to store the path of the version of node it is going to use. That's how it changes the version The helper adds the appropriate, specific version of nodejs to the $PATH variable (which is preserved when calling ynh_exec_as_app). Also defines: $path_with_nodejs to be used in the systemd config (Environment=&quot;PATH=__PATH_WITH_NODEJS__&quot;)$nodejs_dir, the directory containing the specific version of nodejs, which may be used in the systemd config too (e.g. ExecStart=__NODEJS_DIR__/node foo bar) Dude, show me the code!  ynh_nodejs_remove Remove the version of node used by the app. Usage: ynh_nodejs_remove Details: This helper will check if another app uses the same version of node. If not, this version of node will be removed.If no other app uses node, n will be also removed. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Ruby​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#ruby","content":" ynh_ruby_install Install a specific version of Ruby using rbenv Usage: ynh_ruby_install Details: The installed version is defined by $ruby_version which should be defined as global prior to calling this helper The helper adds the appropriate, specific version of ruby to the $PATH variable (which is preserved when calling ynh_exec_as_app). Also defines: $path_with_ruby to be used in the systemd config (Environment=&quot;PATH=__PATH_WITH_RUBY__&quot;)$ruby_dir, the directory containing the specific version of ruby, which may be used in the systemd config too (e.g. ExecStart=__RUBY_DIR__/ruby foo bar) Dude, show me the code!  ynh_ruby_remove Remove the version of Ruby used by the app. Usage: ynh_ruby_remove Details: This helper will also cleanup unused Ruby versions Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Go​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#go","content":" ynh_go_install Install a specific version of Go using goenv Usage: ynh_go_install Details: The installed version is defined by $go_version which should be defined as global prior to calling this helper The helper adds the appropriate, specific version of go to the $PATH variable (which is preserved when calling ynh_exec_as_app). Also defines: $path_with_go (the value of the modified $PATH, but you dont really need it?)$go_dir (the directory containing the specific go version) Dude, show me the code!  ynh_go_remove Remove the version of Go used by the app. Usage: ynh_go_remove Details: This helper will also cleanup Go versions Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Composer​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#composer","content":" ynh_composer_install Install and initialize Composer in the given directory Usage: ynh_composer_install Details: The installed version is defined by $composer_version which should be defined as global prior to calling this helper. Will use $install_dir as workdir unless $composer_workdir exists (but that shouldnt be necessary) Dude, show me the code!  ynh_composer_exec Execute a command with Composer Usage: ynh_composer_exec commands Details: Will use $install_dir as workdir unless $composer_workdir exists (but that shouldnt be necessary) You may also define composer_user=root prior to call this helper if you absolutely need composer to run as root, but this is discouraged... Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Databases​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#databases","content":" This is coupled to the 'database' resource in the manifest.toml - at least for mysql/postgresql. Mongodb/redis may have better integration in the future.  ","version":"Next","tagName":"h2"},{"title":"Mysql​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#mysql","content":" ynh_mysql_db_shell Run SQL instructions in a database ($db_name by default) Usage: ynh_mysql_db_shell [database] &lt;&lt;&lt; &quot;instructions&quot; Arguments: database=: the database to connect to (by default, $db_name) Examples: ynh_mysql_db_shell $db_name &lt;&lt;&lt; &quot;UPDATE ...;&quot;ynh_mysql_db_shell &lt; /path/to/file.sql Dude, show me the code!  ynh_mysql_dump_db Dump a database Usage: ynh_mysql_dump_db database Arguments: database: the database name to dump (by default, $db_name) Returns: The mysqldump output Example: ynh_mysql_dump_db &quot;roundcube&quot; &gt; ./dump.sql Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Postgresql​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#postgresql","content":" ynh_psql_db_shell Run SQL instructions in a database ($db_name by default) Usage: ynh_psql_db_shell database &lt;&lt;&lt; &quot;instructions&quot; Arguments: database: the database to connect to (by default, $db_name) Examples: ynh_psql_db_shell $db_name &lt;&lt;&lt; &quot;UPDATE ...;&quot;ynh_psql_db_shell &lt; /path/to/file.sql Dude, show me the code!  ynh_psql_dump_db Dump a database Usage: ynh_psql_dump_db database Arguments: database: the database name to dump (by default, $db_name) Returns: the psqldump output Example: ynh_psql_dump_db 'roundcube' &gt; ./dump.sql Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Mongodb​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#mongodb","content":" ynh_mongo_exec Execute a mongo command Usage: ynh_mongo_exec [--database=database] --command=&quot;command&quot; Arguments: --database=: The database to connect to--command=: The command to evaluate Example: ynh_mongo_exec --command='db.getMongo().getDBNames().indexOf(&quot;wekan&quot;)' example: ynh_mongo_exec --command=&quot;db.getMongo().getDBNames().indexOf(\\&quot;wekan\\&quot;)&quot; Dude, show me the code!  ynh_mongo_dump_db Dump a database Usage: ynh_mongo_dump_db --database=database Arguments: --database=: The database name to dump Returns: the mongodump output Example: ynh_mongo_dump_db --database=wekan &gt; ./dump.bson Dude, show me the code!  ynh_mongo_database_exists Check if a mongo database exists Usage: ynh_mongo_database_exists --database=database | exit: Return 1 if the database doesn't exist, 0 otherwise Arguments: --database=: The database for which to check existence Dude, show me the code!  ynh_mongo_restore_db Restore a database Usage: ynh_mongo_restore_db --database=database Arguments: --database=: The database name to restore Example: ynh_mongo_restore_db --database=wekan &lt; ./dump.bson Dude, show me the code!  ynh_mongo_setup_db Create a database, an user and its password. Then store the password in the app's config Usage: ynh_mongo_setup_db --db_user=user --db_name=name [--db_pwd=pwd] Arguments: --db_user=: Owner of the database--db_name=: Name of the database--db_pwd=: Password of the database. If not provided, a password will be generated Details: After executing this helper, the password of the created database will be available in $db_pwd It will also be stored as &quot;mongopwd&quot; into the app settings. Dude, show me the code!  ynh_mongo_remove_db Remove a database if it exists, and the associated user Usage: ynh_mongo_remove_db --db_user=user --db_name=name Arguments: --db_user=: Owner of the database--db_name=: Name of the database Dude, show me the code!  ynh_install_mongo Install MongoDB and integrate MongoDB service in YunoHost Usage: ynh_install_mongo Details: The installed version is defined by $mongo_version which should be defined as global prior to calling this helper Dude, show me the code!  ynh_remove_mongo Remove MongoDB Only remove the MongoDB service integration in YunoHost for now if MongoDB package as been removed Usage: ynh_remove_mongo Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Redis​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#redis","content":" ynh_redis_get_free_db get the first available redis database Usage: ynh_redis_get_free_db Returns: the database number to use Dude, show me the code!  ynh_redis_remove_db Erase a redis database so it can be reused by other apps. Usage: ynh_redis_remove_db database Arguments: database: the database to erase Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Configurations / Templating​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#configurations--templating","content":" ","version":"Next","tagName":"h2"},{"title":"Templating​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#templating","content":" ynh_config_add Create a dedicated config file from a template Usage: ynh_config_add --template=&quot;template&quot; --destination=&quot;destination&quot; Arguments: --template=: Template config file to use--destination=: Destination of the config file--jinja: Use jinja template instead of the simple __MY_VAR__ templating format Examples: ynh_config_add --template=&quot;.env&quot; --destination=&quot;$install_dir/.env&quot; # (use the template file &quot;conf/.env&quot; from the app's package)ynh_config_add --jinja --template=&quot;config.j2&quot; --destination=&quot;$install_dir/config&quot; # (use the template file &quot;conf/config.j2&quot; from the app's package) Details: The template can be 1) the name of a file in the conf directory of the app, 2) a relative path or 3) an absolute path. This applies a simple templating format which covers a good 95% of cases, where patterns like __FOO__ are replaced by the bash variable $foo, for example:__DOMAIN__ by $domain__PATH__ by $path__APP__ by $app__VAR_1__ by $var_1__VAR_2__ by $var_2 Special case for __PATH__/ which is replaced by / instead of // if $path is / When --jinja is enabled​ This option is meant for advanced use-cases where the &quot;simple&quot; templating mode ain't enough because you need conditional blocks or loops. For a full documentation of jinja's syntax you can refer to the official Jinja documentation. Note that in YunoHost context, all variables are from shell variables and therefore are strings To help handling complex data Jinja engine are executed with theses additional filters: from_json: load a string as Json and return an objectfrom_yaml: load a string as Yaml and return an objectfrom_toml: load a string as Toml and return an objectto_json: serialize to string an object to Jsonto_yaml: serialize to string an object to Yamlto_toml: serialize to string an object to Toml So by example, if you want to convert a json string $my_json to Toml, you can to this way:{{ my_json | from_json | to_toml }}Or you can iterate on a Json list my_list='[&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]' this way: {% for i in my_list | from_json %} value {{ i }} {% endfor }} which will result: value a value b value c Keeping track of manual changes by the admin​ The helper will verify the checksum and backup the destination file if it's different before applying the new template. And it will calculate and store the destination file checksum into the app settings when configuration is done. Dude, show me the code!  ynh_read_var_in_file Get a value from heterogeneous file (yaml, json, php, python...) Usage: ynh_read_var_in_file --file=PATH --key=KEY Arguments: --file=: the path to the file--key=: the key to get--after=: the line just before the key (in case of multiple lines with the name of the key in the file) Details: This helpers match several var affectation use case in several languages We don't use jq or equivalent to keep comments and blank space in files This helpers work line by line, it is not able to work correctly if you have several identical keys in your files Example of line this helpers can managed correctly .yml title: YunoHost documentation email: 'yunohost@yunohost.org' .json &quot;theme&quot;: &quot;colib'ris&quot;, &quot;port&quot;: 8102 &quot;some_boolean&quot;: false, &quot;user&quot;: null .ini some_boolean = On action = &quot;Clear&quot; port = 20 .php $user= user =&gt; 20 .py USER = 8102 user = 'https://donate.local' CUSTOM['user'] = 'YunoHost' Dude, show me the code!  ynh_write_var_in_file Set a value into heterogeneous file (yaml, json, php, python...) Usage: ynh_write_var_in_file --file=PATH --key=KEY --value=VALUE Arguments: --file=: the path to the file--key=: the key to set--value=: the value to set--after=: the line just before the key (in case of multiple lines with the name of the key in the file) Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Nginx​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#nginx","content":" ynh_config_add_nginx Create a dedicated nginx config Usage: ynh_config_add_nginx Details: This will use a template in ../conf/nginx.confSee the documentation of ynh_config_add for a description of the template format and how placeholders are replaced with actual variables. Additionally, ynh_config_add_nginx will replace: #sub_path_only by empty string if path is not '/'#root_path_only by empty string if path is '/' This allows to enable/disable specific behaviors dependenging on the install location Dude, show me the code!  ynh_config_remove_nginx Remove the dedicated nginx config Usage: ynh_config_remove_nginx Dude, show me the code!  ynh_config_change_url_nginx Regen the nginx config in a change url context Usage: ynh_config_change_url_nginx Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Php​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#php","content":" ynh_config_add_phpfpm Create a dedicated PHP-FPM config Usage: ynh_config_add_phpfpm Details: This will automatically generate an appropriate PHP-FPM configuration for this app. The resulting configuration will be deployed to the appropriate place:/etc/php/$php_version/fpm/pool.d/$app.conf If the app provides a conf/extra_php-fpm.conf template, it will be appended to the generated configuration. (In the vast majority of cases, this shouldnt be necessary) $php_version should be defined prior to calling this helper, but there should be no reason to manually set it, as it is automatically set by the apt helpers/resources when installing phpX.Y dependencies (PHP apps should at least install phpX.Y-fpm using the apt helper/resource) $php_group can be defined as a global (from _common.sh) if the worker processes should run with a different group than $app Additional &quot;pm&quot; and &quot;php_admin_value&quot; settings which are meant to be possibly configurable by admins from a future standard config panel at some point, related to performance and availability of the app, for which tweaking may be required if the app is used by &quot;plenty&quot; of users and other memory/CPU load considerations.... If you have good reasons to be willing to use different defaults than the one set by this helper (while still allowing admin to override it) you should use ynh_app_setting_set_default $php_upload_max_filezise: corresponds upload_max_filesize and post_max_size. Defaults to 50M$php_process_management: corresponds to &quot;pm&quot; (ondemand, dynamic, static). Defaults to ondemand$php_max_children: by default, computed from &quot;total RAM&quot; divided by 40, cf _default_php_max_children$php_memory_limit: by default, 128M (from global php.ini) Note that if $php_process_management is set to &quot;dynamic&quot;, then these variables MUST be defined prior to calling the helper (no default value) ... Check PHP-FPM's manual for more info on what these are (: ... $php_start_servers$php_min_spare_servers$php_max_spare_servers Dude, show me the code!  ynh_config_remove_phpfpm Remove the dedicated PHP-FPM config Usage: ynh_config_remove_phpfpm Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Systemd​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#systemd","content":" ynh_config_add_systemd Create a dedicated systemd config Usage: ynh_config_add_systemd [--service=service] [--template=template] Arguments: --service=: Service name (optionnal, $app by default)--template=: Name of template file (optionnal, this is 'systemd' by default, meaning ../conf/systemd.service will be used as template) Details: This will use the template ../conf/&lt;templatename&gt;.service. See the documentation of ynh_config_add for a description of the template format and how placeholders are replaced with actual variables. Dude, show me the code!  ynh_config_remove_systemd Remove the dedicated systemd config Usage: ynh_config_remove_systemd service Arguments: service: Service name (optionnal, $app by default) Dude, show me the code!  ynh_systemctl Start (or other actions) a service, print a log in case of failure and optionnaly wait until the service is completely started Usage: ynh_systemctl [--service=service] [--action=action] [ [--wait_until=&quot;line to match&quot;] [--log_path=log_path] [--timeout=300] [--length=20] ] Arguments: --service=: Name of the service to start. Default : $app--action=: Action to perform with systemctl. Default: start--wait_until=: The pattern to find in the log to attest the service is effectively fully started.--log_path=: Log file - Path to the log file. Default : /var/log/$app/$app.log; systemd to listen on journalctl --unit=$service--timeout=: Timeout - The maximum time to wait before ending the watching. Default : 60 seconds.--length=: Length of the error log displayed for debugging : Default : 20 Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Fail2ban​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#fail2ban","content":" ynh_config_add_fail2ban Create a dedicated fail2ban config (jail and filter conf files) Usage: ynh_config_add_fail2ban --logpath=log_file --failregex=filter Arguments: --logpath=: Log file to be checked by fail2ban--failregex=: Failregex to be looked for by fail2ban Details: If --logpath / --failregex are provided, the helper will generate the appropriate conf using these. Otherwise, it will assume that the app provided templates, namely../conf/f2b_jail.conf and ../conf/f2b_filter.conf They will typically look like (for example here for synapse): f2b_jail.conf: [__APP__] enabled = true port = http,https filter = __APP__ logpath = /var/log/__APP__/logfile.log maxretry = 5 f2b_filter.conf: [INCLUDES] before = common.conf [Definition] # Part of regex definition (just used to make more easy to make the global regex) __synapse_start_line = .? \\- synapse\\..+ \\- # Regex definition. failregex = ^%(__synapse_start_line)s INFO \\- POST\\-(\\d+)\\- &lt;HOST&gt; \\- \\d+ \\- Received request\\: POST /_matrix/client/r0/login\\??&lt;SKIPLINES&gt;%(__synapse_start_line)s INFO \\- POST\\-\\1\\- Got login request with identifier: \\{u'type': u'm.id.user', u'user'\\: u'(.+?)'\\}, medium\\: None, address: None, user\\: u'\\5'&lt;SKIPLINES&gt;%(__synapse_start_line)s WARNING \\- \\- (Attempted to login as @\\5\\:.+ but they do not exist|Failed password login for user @\\5\\:.+)$ ignoreregex = Regarding the the failregex option​ regex to match the password failure messages in the logfile. The host must be matched by a group named &quot;host&quot;. The tag &quot;&lt;HOST&gt;&quot; can be used for standard IP/hostname matching and is only an alias for (?:::f{4,6}:)?(?P&lt;host&gt;[\\w\\-.^_]+) You can find some more explainations about how to make a regex on the official fail2ban documentation. To validate your regex you can test with this command: fail2ban-regex /var/log/YOUR_LOG_FILE_PATH /etc/fail2ban/filter.d/YOUR_APP.conf Dude, show me the code!  ynh_config_remove_fail2ban Remove the dedicated fail2ban config (jail and filter conf files) Usage: ynh_config_remove_fail2ban Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Logrotate​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#logrotate","content":" ynh_config_add_logrotate Add a logrotate configuration to manage log files / log directory Usage: ynh_config_add_logrotate [/path/to/log/file/or/folder] Details: If not argument is provided, /var/log/$app/*.log is used as default. The configuration is autogenerated by YunoHost (ie it doesnt come from a specific app template like nginx or systemd conf) Dude, show me the code!  ynh_config_remove_logrotate Remove the app's logrotate config. Usage: `` Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Misc Tools​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#misc-tools","content":" ","version":"Next","tagName":"h2"},{"title":"Utils​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#utils","content":" ynh_exec_as_app Execute a command after sudoing as $app Usage: ynh_exec_as_app COMMAND [ARG ...] Details: Note that the $PATH variable is preserved (using env PATH=$PATH) Dude, show me the code!  ynh_local_curl Curl abstraction to help with POST requests to local pages (such as installation forms) Usage: ynh_local_curl &quot;page_uri&quot; &quot;key1=value1&quot; &quot;key2=value2&quot; ... Arguments: page_uri: Path (relative to $path) of the page where POST data will be sentkey1=value1: (Optionnal) POST key and corresponding valuekey2=value2: (Optionnal) Another POST key and corresponding value...: (Optionnal) More POST keys and values Example: ynh_local_curl &quot;/install.php?installButton&quot; &quot;foo=$var1&quot; &quot;bar=$var2&quot; Details: For multiple calls, cookies are persisted between each call for the same app $domain and $path should be defined externally (and correspond to the domain.tld and the /path (of the app?)) Dude, show me the code!  ynh_safe_rm Remove a file or a directory, checking beforehand that it's not a disastrous location to rm such as entire /var or /home Usage: ynh_safe_rm path_to_remove Dude, show me the code!  ynh_read_manifest Read the value of a key in the app's manifest Usage: ynh_read_manifest &quot;key&quot; Arguments: key: Name of the key to find Returns: the value associate to that key Dude, show me the code!  ynh_app_upstream_version Return the app upstream version, deduced from $YNH_APP_MANIFEST_VERSION and strippig the ~ynhX part Usage: ynh_app_upstream_version Returns: the version number of the upstream app Details: For example, if the manifest contains 4.3-2~ynh3 the function will return 4.3-2 Dude, show me the code!  ynh_app_upstream_version_changed Return 0 if the &quot;upstream&quot; part of the version changed, or 1 otherwise (ie only the ~ynh suffix changed) Usage: if ynh_app_upstream_version_changed; then ... Dude, show me the code!  ynh_app_upgrading_from_version_before Compare the current package version is strictly lower than another version given as an argument Usage: `` Example: if ynh_app_upgrading_from_version_before 2.3.2~ynh1; then ... Dude, show me the code!  ynh_app_upgrading_from_version_before_or_equal_to Compare the current package version is lower or equal to another version given as an argument Usage: `` Example: if ynh_app_upgrading_from_version_before_or_equal_to 2.3.2~ynh1; then ... Dude, show me the code!  ynh_validate_ip Validate an IP address Usage: ynh_validate_ip --family=family --ip_address=ip_address Returns: 0 for valid ip addresses, 1 otherwise Example: ynh_validate_ip 4 111.222.333.444 Dude, show me the code!  ynh_in_ci_tests Check if the scripts are being run by the package_check in CI Usage: ynh_in_ci_tests Details: Return 0 if in CI, 1 otherwise Dude, show me the code!  ynh_user_get_info Retrieve a YunoHost user information Usage: ynh_user_get_info --username=username --key=key Arguments: --username=: the username to retrieve info from--key=: the key to retrieve Returns: the value associate to that key Example: mail=$(ynh_user_get_info --username=&quot;toto&quot; --key=mail) Dude, show me the code!  ynh_user_list Get the list of YunoHost users Usage: ynh_user_list Returns: one username per line as strings Example: for u in $(ynh_user_list); do ... ; done Dude, show me the code!  ynh_spawn_app_shell Spawn a Bash shell with the app environment loaded Usage: ynh_spawn_app_shell Examples: ynh_spawn_app_shell &lt;&lt;&lt; 'echo &quot;$USER&quot;'ynh_spawn_app_shell &lt; /tmp/some_script.bash Details: The spawned shell will have environment variables loaded and environment files sourced from the app's service configuration file (defaults to $app.service, overridable by the packager with service setting). If the app relies on a specific PHP version, then php will be aliased that version. The PHP command will also be appended with the phpflags settings. Dude, show me the code!  ynh_add_swap Add swap Usage: ynh_add_swap --size=SWAP in Mb Arguments: -s, --size=: Amount of SWAP to add in Mb. Dude, show me the code!  ynh_smart_mktemp Check available space before creating a temp directory. Usage: ynh_smart_mktemp --min_size=&quot;Min size&quot; Arguments: -s, --min_size=: Minimal size needed for the temporary directory, in Mb Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Setting​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#setting","content":" ynh_app_setting_get Get an application setting Usage: ynh_app_setting_get --key=key Arguments: --app=: the application id (global $app by default)--key=: the setting to get Dude, show me the code!  ynh_app_setting_set Set an application setting Usage: ynh_app_setting_set --key=key --value=value Arguments: --app=: the application id (global $app by default)--key=: the setting name to set--value=: the setting value to set Details: When choosing the setting key's name, note that including the following keywords will make the associated setting's value appear masked in the debug logs (cf. related code): pwd, pass, passwd, password, passphrase, secret\\w* (regex), \\w+key (regex), token, PASSPHRASEThis is meant to allow sharing the logs while preserving confidential data, but having this in mind is useful would you expect to see those values while debugging your scripts. Dude, show me the code!  ynh_app_setting_set_default Set an application setting but only if the &quot;$key&quot; variable ain't set yet Usage: ynh_app_setting_set_default --key=key --value=value Arguments: --app=: the application id (global $app by default)--key=: the setting name to set--value=: the default setting value to set Details: Note that it doesn't just define the setting but ALSO define the $foobar variable Hence it's meant as a replacement for this legacy overly complex syntax: if [ -z &quot;${foo:-}&quot; ] then foo=&quot;bar&quot; ynh_app_setting_set --key=&quot;foo&quot; --value=&quot;$foo&quot; fi Dude, show me the code!  ynh_app_setting_delete Delete an application setting Usage: ynh_app_setting_delete --key=key Arguments: --app=: the application id (global $app by default)--key=: the setting to delete Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"String​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#string","content":" ynh_string_random Generate a random string Usage: ynh_string_random [--length=string_length] Arguments: --length=: the string length to generate (default: 24)--filter=: the kind of characters accepted in the output (default: 'A-Za-z0-9') Returns: the generated string Example: pwd=$(ynh_string_random --length=8) Dude, show me the code!  ynh_replace Substitute/replace a string (or expression) by another in a file Usage: ynh_replace --match=match --replace=replace --file=file Arguments: --match=: String to be searched and replaced in the file--replace=: String that will replace matches--file=: File in which the string will be replaced. Details: As this helper is based on sed command, regular expressions and references to sub-expressions can be used (see sed manual page for more information) Dude, show me the code!  ynh_replace_regex Substitute/replace a regex in a file Usage: ynh_replace_regex --match=match --replace=replace --file=file Arguments: --match=: String to be searched and replaced in the file--replace=: String that will replace matches--file=: File in which the string will be replaced. Details: This helper will use ynh_replace, but as you can use special characters, you can't use some regular expressions and sub-expressions. Dude, show me the code!  ynh_normalize_url_path Normalize the url path syntax Usage: ynh_normalize_url_path path_to_normalize Examples: url_path=$(ynh_normalize_url_path $url_path)ynh_normalize_url_path example # -&gt; /exampleynh_normalize_url_path /example # -&gt; /exampleynh_normalize_url_path /example/ # -&gt; /exampleynh_normalize_url_path / # -&gt; / Details: Handle the slash at the beginning of path and its absence at ending Return a normalized url path Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Backup​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#backup","content":" ynh_backup Add a file or a directory to the list of paths to backup Usage: ynh_backup /path/to/stuff Details: NB : note that this helper does NOT perform any copy in itself, it only declares stuff to be backuped via a CSV which is later picked up by the core NB 2 : there is a specific behavior for $data_dir (or childs of $data_dir) and /var/log/$app which are NOT backedup during safety-backup-before-upgrade, OR if the setting &quot;do_not_backup_data&quot; is equals 1 for that app The rationale is that these directories are usually too heavy to be integrated in every backup (think for example about Nextcloud with quite a lot of data, or an app with a lot of media files...) This is coupled to the fact that $data_dir and the log dir won't be (and should NOT) be deleted during remove, unless --purge is used. Hence, if the upgrade fails and the script is removed prior to restoring the backup, the data/logs are not destroyed. Dude, show me the code!  ynh_restore Restore a file or a directory from the backup archive Usage: ynh_restore /path/to/stuff Examples: ynh_restore &quot;/etc/nginx/conf.d/$domain.d/$app.conf&quot; Details: If the file or dir to be restored already exists on the system and is lighter than 500 Mo, it is backed up in /var/cache/yunohost/appconfbackup/. Otherwise, the existing file or dir is removed. if apps/$app/etc/nginx/conf.d/$domain.d/$app.conf exists, restore it into/etc/nginx/conf.d/$domain.d/$app.confotheriwse, search for a match in the csv (eg: conf/nginx.conf) and restore it into/etc/nginx/conf.d/$domain.d/$app.conf Dude, show me the code!  ynh_restore_everything Restore all files that were previously backuped in an app backup script Usage: ynh_restore_everything Dude, show me the code!  ynh_store_file_checksum Calculate and store a file checksum into the app settings Usage: ynh_store_file_checksum /path/to/file Dude, show me the code!  ynh_backup_if_checksum_is_different Verify the checksum and backup the file if it's different Usage: ynh_backup_if_checksum_is_different /path/to/file Details: This helper is primarily meant to allow to easily backup personalised/manually modified config files. Dude, show me the code!  ynh_delete_file_checksum Delete a file checksum from the app settings Usage: ynh_delete_file_checksum /path/to/file Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Logging​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#logging","content":" ynh_die Print a message to stderr and terminate the current script Usage: ynh_die &quot;Some message&quot; Dude, show me the code!  ynh_print_info Print an &quot;INFO&quot; message Usage: ynh_print_info &quot;Some message&quot; Dude, show me the code!  ynh_print_warn Print a warning on stderr Usage: ynh_print_warn &quot;Some message&quot; Dude, show me the code!  ynh_hide_warnings Execute a command and redirect stderr to stdout Usage: ynh_hide_warnings your command and args Arguments: command: command to execute Dude, show me the code!  ynh_exec_and_print_stderr_only_if_error Execute a command and redirect stderr in /dev/null. Print stderr on error. Usage: ynh_exec_and_print_stderr_only_if_error your command and args Arguments: command: command to execute Details: Note that you should NOT quote the command but only prefix it with ynh_exec_and_print_stderr_only_if_error Dude, show me the code!  ynh_return Return data to the YunoHost core for later processing (to be used by special hooks like app config panel and core diagnosis) Usage: ynh_return somedata Dude, show me the code!  ynh_script_progression Print a progress bar showing the progression of an app script Usage: ynh_script_progression &quot;Some message&quot; Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Multimedia​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#multimedia","content":" ynh_multimedia_build_main_dir Initialize the multimedia directory system Usage: ynh_multimedia_build_main_dir Dude, show me the code!  ynh_multimedia_addfolder Add a directory in yunohost.multimedia Usage: ynh_multimedia_addfolder --source_dir=&quot;source_dir&quot; --dest_dir=&quot;dest_dir&quot; Arguments: --source_dir=: Source directory - The real directory which contains your medias.--dest_dir=: Destination directory - The name and the place of the symbolic link, relative to /home/yunohost.multimedia Details: This &quot;directory&quot; will be a symbolic link to a existing directory. Dude, show me the code!  ynh_multimedia_addaccess Add an user to the multimedia group, in turn having write permission in multimedia directories Usage: ynh_multimedia_addaccess user_name Arguments: user_name: The name of the user which gain this access. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Deprecated Or Handled By The Core / App Resources Since V2​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#deprecated-or-handled-by-the-core--app-resources-since-v2","content":" ","version":"Next","tagName":"h2"},{"title":"Permission​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#permission","content":" ynh_permission_delete Remove a permission for the app (note that when the app is removed all permission is automatically removed) Usage: ynh_permission_delete --permission=&quot;permission&quot; Arguments: --permission=: the name for the permission (by default a permission named &quot;main&quot; is removed automatically when the app is removed) Example: ynh_permission_delete --permission=editors Dude, show me the code!  ynh_permission_exists Check if a permission exists Usage: ynh_permission_exists --permission=permission | exit: Return 1 if the permission doesn't exist, 0 otherwise Arguments: --permission=: the permission to check Dude, show me the code!  ynh_permission_url Redefine the url associated to a permission Usage: ynh_permission_url --permission &quot;permission&quot; [--url=&quot;url&quot;] [--add_url=&quot;new-url&quot; [ &quot;other-new-url&quot; ]] [--remove_url=&quot;old-url&quot; [ &quot;other-old-url&quot; ]] [--auth_header=true|false] [--clear_urls] Arguments: --permission=: the name for the permission (by default a permission named &quot;main&quot; is removed automatically when the app is removed)--url=: (optional) URL for which access will be allowed/forbidden. Note that if you want to remove url you can pass an empty sting as arguments (&quot;&quot;).--add_url=: (optional) List of additional url to add for which access will be allowed/forbidden.--remove_url=: (optional) List of additional url to remove for which access will be allowed/forbidden--auth_header=: (optional) Define for the URL of this permission, if SSOwat pass the authentication header to the application--clear_urls: (optional) Clean all urls (url and additional_urls) Dude, show me the code!  ynh_permission_update Update a permission for the app Usage: ynh_permission_update --permission &quot;permission&quot; [--add=&quot;group&quot; [&quot;group&quot; ...]] [--remove=&quot;group&quot; [&quot;group&quot; ...]] Arguments: --permission=: the name for the permission (by default a permission named &quot;main&quot; already exist)--add=: the list of group or users to enable add to the permission--remove=: the list of group or users to remove from the permission Dude, show me the code!  ynh_permission_has_user Check if a permission has an user Usage: ynh_permission_has_user --permission=permission --user=user | exit: Return 1 if the permission doesn't have that user or doesn't exist, 0 otherwise Arguments: --permission=: the permission to check--user=: the user seek in the permission Example: ynh_permission_has_user --permission=main --user=visitors Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Apt​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#apt","content":" ynh_apt_install_dependencies Define and install dependencies with a equivs control file Usage: ynh_apt_install_dependencies dep [dep [...]] Arguments: dep: the package name to install in dependence.&quot;dep1|dep2|…&quot;: You can specify alternatives. It will require to install (dep1 or dep2, etc). Details: example : ynh_apt_install_dependencies dep1 dep2 &quot;dep3|dep4|dep5&quot; Dude, show me the code!  ynh_apt_remove_dependencies Remove fake package and its dependencies Usage: ynh_apt_remove_dependencies Details: Dependencies will removed only if no other package need them. Dude, show me the code!  ynh_apt_install_dependencies_from_extra_repository Install packages from an extra repository properly. Usage: ynh_apt_install_dependencies_from_extra_repository --repo=&quot;repo&quot; --package=&quot;dep1 dep2&quot; --key=key_url Arguments: --repo=: Complete url of the extra repository.--package=: The packages to install from this extra repository--key=: url to get the public key. Dude, show me the code!    ","version":"Next","tagName":"h3"},{"title":"Systemuser​","type":1,"pageTitle":"App helpers (v2.1)","url":"/doc/pr-2672/en/packaging/scripts/helpers_v2.1#systemuser","content":" ynh_system_user_exists Check if a user exists on the system Usage: ynh_system_user_exists --username=username Arguments: --username=: the username to check Returns: 0 if the user exists, 1 otherwise. Dude, show me the code!  ynh_system_group_exists Check if a group exists on the system Usage: ynh_system_group_exists --group=group Arguments: --group=: the group to check Returns: 0 if the group exists, 1 otherwise. Dude, show me the code!  ynh_system_user_create Create a system user Usage: ynh_system_user_create --username=user_name [--home_dir=home_dir] [--use_shell] [--groups=&quot;group1 group2&quot;] Arguments: --username=: Name of the system user that will be create--home_dir=: Path of the home dir for the user. Usually the final path of the app. If this argument is omitted, the user will be created without home--use_shell: Create a user using the default login shell if present. If this argument is omitted, the user will be created with /usr/sbin/nologin shell--groups: Add the user to system groups. Typically meant to add the user to the ssh.app / sftp.app group (e.g. for borgserver, my_webapp) Details: Create a nextcloud user with no home directory and /usr/sbin/nologin login shell (hence no login capability) : ynh_system_user_create --username=nextcloud Create a discourse user using /var/www/discourse as home directory and the default login shell : ynh_system_user_create --username=discourse --home_dir=/var/www/discourse --use_shell Dude, show me the code!  ynh_system_user_delete Delete a system user Usage: ynh_system_user_delete --username=user_name Arguments: --username=: Name of the system user that will be create Dude, show me the code!   ","version":"Next","tagName":"h3"}],"options":{"languages":["ar","de","en","es","fr","it","ru"],"id":"default"}}