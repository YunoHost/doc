"use strict";(self.webpackChunkyunohost_docs=self.webpackChunkyunohost_docs||[]).push([["338"],{3232:function(e,s,i){i.r(s),i.d(s,{frontMatter:()=>a,toc:()=>l,default:()=>d,metadata:()=>r,assets:()=>u,contentTitle:()=>o});var r=JSON.parse('{"id":"packaging/resources/packaging_apps_git","title":"Utiliser Git pour packager les applications","description":"Git... Notre cher Git bien-aim\xe9, que l\'on peut aussi d\xe9crire comme \\"Goddamn Idiotic Truckload of sh\\\\t\\"  (Un stupide putain gros tas de m\\\\rde), selon Linus.","source":"@site/i18n/fr/docusaurus-plugin-content-docs/current/packaging/80.resources/packaging_apps_git.mdx","sourceDirName":"packaging/80.resources","slug":"/packaging/resources/packaging_apps_git","permalink":"/pr-2672/fr/packaging/resources/packaging_apps_git","draft":false,"unlisted":false,"editUrl":"https://github.com/YunoHost/doc/tree/main/i18n/fr/docusaurus-plugin-content-docs/current/packaging/80.resources/packaging_apps_git.mdx","tags":[],"version":"current","frontMatter":{"title":"Utiliser Git pour packager les applications"},"sidebar":"devpackaging","previous":{"title":"Misc resources","permalink":"/pr-2672/fr/category/misc-resources"},"next":{"title":"Cr\xe9er un environnement de d\xe9veloppement avec VirtualBox","permalink":"/pr-2672/fr/packaging/resources/packaging_apps_virtualbox"}}'),n=i(4848),t=i(4429);let a={title:"Utiliser Git pour packager les applications"},o,u={},l=[{value:"Travailler avec GitHub",id:"travailler-avec-github",level:2},{value:"Branches",id:"branches",level:3},{value:"Modifier un fichier",id:"modifier-un-fichier",level:3},{value:"Validez vos modifications",id:"validez-vos-modifications",level:3},{value:"Forker ou ne pas forker",id:"forker-ou-ne-pas-forker",level:3},{value:"Pull request",id:"pull-request",level:3},{value:"Organisation YunoHost-Apps",id:"organisation-yunohost-apps",level:3},{value:"Travailler avec Git en local",id:"travailler-avec-git-en-local",level:2},{value:"Premier cas : Cr\xe9er un nouveau package",id:"premier-cas--cr\xe9er-un-nouveau-package",level:3},{value:"<code>git clone</code>",id:"git-clone",level:4},{value:"Mon nouveau package, suite",id:"mon-nouveau-package-suite",level:4},{value:"Deuxi\xe8me cas : Travailler localement sur un d\xe9p\xf4t",id:"deuxi\xe8me-cas--travailler-localement-sur-un-d\xe9p\xf4t",level:3},{value:"Branches",id:"branches-1",level:3},{value:"<code>git checkout</code>",id:"git-checkout",level:3},{value:"<code>git pull</code> avant tout",id:"git-pull-avant-tout",level:3},{value:"Il est temps de travailler",id:"il-est-temps-de-travailler",level:3},{value:"<code>git checkout -b</code>",id:"git-checkout--b",level:3},{value:"<code>git commit</code>",id:"git-commit",level:3},{value:"<code>git push</code> vers le d\xe9p\xf4t distant",id:"git-push-vers-le-d\xe9p\xf4t-distant",level:3}];function c(e){let s={a:"a",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:['Git... Notre cher Git bien-aim\xe9, que l\'on peut aussi d\xe9crire comme "Goddamn Idiotic Truckload of sh*t"  (Un stupide putain gros tas de m*rde), selon Linus.',(0,n.jsx)(s.br,{}),"\n","Si vous ne connaissez pas encore Git, soyez s\xfbr que vous serez bient\xf4t d'accord avec cette description."]}),"\n",(0,n.jsxs)(s.p,{children:["YunoHost et toutes nos applications sont sur la forge Git GitHub. Ce qui veut dire que si vous voulez travailler sur une application, t\xf4t ou tard vous allez devoir faire face \xe0 Git.",(0,n.jsx)(s.br,{}),"\n","Alors voyons comment travailler avec Git pour pouvoir contribuer dans le contexte de YunoHost."]}),"\n",(0,n.jsx)(s.h2,{id:"travailler-avec-github",children:"Travailler avec GitHub"}),"\n",(0,n.jsx)(s.p,{children:'Commen\xe7ons par la partie facile, GitHub est livr\xe9 avec une interface web "facile" \xe0 utiliser.'}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.em,{children:"Tout d'abord et malheureusement, il n'y a pas moyen de contourner \xe7a, vous devez avoir un compte sur GitHub."})}),"\n",(0,n.jsx)(s.h3,{id:"branches",children:"Branches"}),"\n",(0,n.jsxs)(s.p,{children:["Ensuite, et c'est probablement l'une des choses les plus importantes, ",(0,n.jsx)(s.strong,{children:"ne travaillez pas directement sur la branche master"}),".",(0,n.jsx)(s.br,{}),"\n","D\xe9sol\xe9, il fallait que ce soit dit !"]}),"\n",(0,n.jsxs)(s.p,{children:["Les branches sont, comme l'explique GitHub, \"",(0,n.jsx)(s.em,{children:"une version parall\xe8le d'un d\xe9p\xf4t. Elle est contenue dans le d\xe9p\xf4t, mais n'affecte pas les autres branches. Elle vous permet de travailler librement sans perturber la version \"live\"."}),'"']}),"\n",(0,n.jsxs)(s.p,{children:["La branche master est la branche qui contient la version de l'application que les utilisateurs installeront et utiliseront effectivement.",(0,n.jsx)(s.br,{}),"\n","La bonne habitude \xe0 prendre est de travailler \xe0 partir de la branche testing, et lorsque tout est r\xe9gl\xe9 et test\xe9, vous pouvez fusionner la branche testing dans master, afin que les utilisateurs puissent profiter de la nouvelle version de votre package."]}),"\n",(0,n.jsxs)(s.p,{children:["Pour voir et modifier la branche actuelle, utilisez ce bouton :",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.img,{src:i(8210).A+"",width:"1024",height:"309"})]}),"\n",(0,n.jsx)(s.h3,{id:"modifier-un-fichier",children:"Modifier un fichier"}),"\n",(0,n.jsx)(s.p,{children:"Maintenant que vous \xeates sur la bonne branche, voyons comment \xe9diter un fichier sur GitHub."}),"\n",(0,n.jsxs)(s.p,{children:["Vous pouvez \xe9diter n'importe quel fichier en utilisant l'ic\xf4ne du petit crayon :",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.img,{src:i(3222).A+"",width:"1023",height:"135"})]}),"\n",(0,n.jsxs)(s.p,{children:["Si vous n'avez pas la permission d'\xe9crire sur le d\xe9p\xf4t, vous verrez (comme sur l'image) que vous allez cr\xe9er un fork (nous verrons plus loin ce qu'est un fork).",(0,n.jsx)(s.br,{}),"\n","Si vous avez la permission d'\xe9crire, vous allez simplement modifier le fichier, sans forker."]}),"\n",(0,n.jsx)(s.h3,{id:"validez-vos-modifications",children:"Validez vos modifications"}),"\n",(0,n.jsxs)(s.p,{children:["Lorsque vous avez fini de modifier le fichier, vous pouvez faire un commit de vos modifications.",(0,n.jsx)(s.br,{}),"\n","Derri\xe8re ce mot, l'id\xe9e est assez simple, vous allez juste enregistrer vos modifications...",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.img,{src:i(9229).A+"",width:"921",height:"345"})]}),"\n",(0,n.jsxs)(s.p,{children:["Le premier champ est le nom de votre commit, une phrase tr\xe8s courte pour expliquer pourquoi vous avez fait cette modification.",(0,n.jsx)(s.br,{}),"\n","Le deuxi\xe8me champ est un champ plus grand pour une explication plus compl\xe8te, si vous en avez besoin."]}),"\n",(0,n.jsxs)(s.p,{children:["Enfin, si vous modifiez un d\xe9p\xf4t sur lequel vous avez la permission d'\xe9crire, vous pouvez soit faire un commit directement sur la branche en cours, soit cr\xe9er une nouvelle branche.",(0,n.jsx)(s.br,{}),"\n","Il est g\xe9n\xe9ralement pr\xe9f\xe9rable de cr\xe9er une nouvelle branche, de cette fa\xe7on vous gardez vos modifications sur une version ",(0,n.jsx)(s.em,{children:"parall\xe8le"})," du d\xe9p\xf4t. Vos modifications seront discut\xe9es dans une pull request (expliqu\xe9e ci-dessous) puis finalement fusionn\xe9es dans la branche d'origine."]}),"\n",(0,n.jsx)(s.h3,{id:"forker-ou-ne-pas-forker",children:"Forker ou ne pas forker"}),"\n",(0,n.jsxs)(s.p,{children:["Un fork est une copie d'un d\xe9p\xf4t sur votre propre compte.",(0,n.jsx)(s.br,{}),"\n","Nous avons d\xe9j\xe0 vu que si vous n'avez pas l'autorisation d'\xe9crire dans un d\xe9p\xf4t, la modification d'un fichier cr\xe9era automatiquement un fork.",(0,n.jsx)(s.br,{}),"\n","Comme le fork est sur votre compte, vous avez toujours la permission d'\xe9crire dessus.",(0,n.jsx)(s.br,{}),"\n","Mais m\xeame si un fork n'est pas le v\xe9ritable d\xe9p\xf4t, mais juste une copie, un fork est toujours li\xe9 \xe0 son parent. Nous verrons plus tard que la cr\xe9ation d'un fork est vraiment utile lors de l'ouverture d'une pull request."]}),"\n",(0,n.jsxs)(s.p,{children:["Lorsque vous cr\xe9ez un nouveau package, il est courant d'utiliser l'",(0,n.jsx)(s.a,{href:"https://github.com/YunoHost/example_ynh",children:"application exemple"})," comme base.",(0,n.jsx)(s.br,{}),"\n","Mais, comme vous ne voulez pas garder ce lien vers l'application d'exemple, vous ne devez pas forker l'application d'exemple. Vous la clonerez plut\xf4t.",(0,n.jsx)(s.br,{}),"\n","Malheureusement, cloner une application est un peu plus compliqu\xe9 sur GitHub. Nous verrons plus tard comment cloner vers un d\xe9p\xf4t local \xe0 la place."]}),"\n",(0,n.jsxs)(s.p,{children:["Nous avons vu comment \xe9diter un fichier, et comment cela peut forker l'application.",(0,n.jsx)(s.br,{}),"\n","Mais, lorsque vous voulez \xe9diter plusieurs fichiers, l'interface GitHub n'est pas vraiment la meilleure solution. Dans une telle situation, vous pr\xe9f\xe9rerez cloner le d\xe9p\xf4t et travailler sur un d\xe9p\xf4t local.",(0,n.jsx)(s.br,{}),"\n","Il se peut que vous deviez tout de m\xeame forker sur votre propre compte pour pouvoir enregistrer vos modifications si vous n'avez pas les autorisations sur le d\xe9p\xf4t distant."]}),"\n",(0,n.jsx)(s.h3,{id:"pull-request",children:"Pull request"}),"\n",(0,n.jsxs)(s.p,{children:["Apr\xe8s avoir effectu\xe9 vos commits, que ce soit sur une branche ou un fork, vous souhaitez proposer vos modifications pour qu'elles soient int\xe9gr\xe9es dans le d\xe9p\xf4t principal, ou dans la branche d'origine.",(0,n.jsx)(s.br,{}),"\n","Pour ce faire, vous allez cr\xe9er une pull request. GitHub vous demande g\xe9n\xe9ralement directement si vous souhaitez le faire.\nSinon, vous trouverez le bouton de cr\xe9ation d'une pull request juste ici :",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.img,{src:i(2225).A+"",width:"1029",height:"94"})]}),"\n",(0,n.jsxs)(s.p,{children:["Lors de la cr\xe9ation d'une pull request \xe0 partir d'un fork, pour faciliter le travail de r\xe9vision du code, ",(0,n.jsx)(s.strong,{children:"ne jamais"})," d\xe9cocher la case ",(0,n.jsx)(s.em,{children:"Allow edits from maintainers"}),". Cette option permet simplement aux mainteneurs du d\xe9p\xf4t d'origine de modifier directement votre travail."]}),"\n",(0,n.jsx)(s.h3,{id:"organisation-yunohost-apps",children:"Organisation YunoHost-Apps"}),"\n",(0,n.jsxs)(s.p,{children:["Conform\xe9ment au ",(0,n.jsx)(s.a,{href:"/packaging/",children:"guide de cr\xe9ation d'applications dans YunoHost"}),", votre application doit \xeatre int\xe9gr\xe9e \xe0 l'organisation YunoHost-Apps, mais si vous n'avez jamais contribu\xe9 \xe0 une application auparavant ou si vous n'avez jamais eu d'application dans cette organisation, vous n'en aurez peut-\xeatre pas l'autorisation."]}),"\n",(0,n.jsx)(s.p,{children:"Tout d'abord, vous devez avoir la permission d'\xe9crire dans l'organisation, pour ce faire, demandez au groupe Apps sur le salon XMPP Apps."}),"\n",(0,n.jsxs)(s.p,{children:["Pour transf\xe9rer votre application sur l'organisation YunoHost-Apps, allez dans votre d\xe9p\xf4t et dans l'onglet ",(0,n.jsx)(s.em,{children:"Settings"}),".",(0,n.jsx)(s.br,{}),"\n","En bas de la page, vous trouverez ",(0,n.jsx)(s.em,{children:"Transfer ownership"}),".",(0,n.jsx)(s.br,{}),"\n","Dans le champ ",(0,n.jsx)(s.em,{children:"New owner\u2019s GitHub username or organization name"}),", tapez ",(0,n.jsx)(s.em,{children:"YunoHost-Apps"}),".",(0,n.jsx)(s.br,{}),"\n","Votre d\xe9p\xf4t sera d\xe9plac\xe9 dans l'organisation, vous n'avez pas besoin de supprimer le d\xe9p\xf4t d'origine."]}),"\n",(0,n.jsx)(s.h2,{id:"travailler-avec-git-en-local",children:"Travailler avec Git en local"}),"\n",(0,n.jsxs)(s.p,{children:["Comme nous l'avons vu, vous pouvez faire beaucoup de choses directement sur GitHub.",(0,n.jsx)(s.br,{}),"\n","Mais lorsque vous devez modifier plusieurs fichiers, ou lorsque vous devez travailler sur votre code de votre c\xf4t\xe9, il est pr\xe9f\xe9rable de travailler directement sur votre ordinateur."]}),"\n",(0,n.jsx)(s.p,{children:"Avant d'aller dans la partie infernale de Git, voyons 2 fa\xe7ons diff\xe9rentes de commencer \xe0 travailler avec Git."}),"\n",(0,n.jsx)(s.h3,{id:"premier-cas--cr\xe9er-un-nouveau-package",children:"Premier cas : Cr\xe9er un nouveau package"}),"\n",(0,n.jsxs)(s.p,{children:["Vous avez d\xe9couvert, choqu\xe9, que la merveilleuse application que vous aimez utiliser tous les jours n'a pas encore son package YunoHost. Et parce que vous \xeates sympa, vous avez d\xe9cid\xe9 de cr\xe9er vous-m\xeame le package, pour que tout le monde puisse appr\xe9cier cette application.",(0,n.jsx)(s.br,{}),"\n","Quelle bonne id\xe9e !"]}),"\n",(0,n.jsxs)(s.p,{children:["Le mieux est de commencer par l'",(0,n.jsx)(s.a,{href:"https://github.com/YunoHost/example_ynh",children:"application d'exemple"}),". Mais comme nous l'avons d\xe9j\xe0 expliqu\xe9, vous ne voulez pas forker, parce que si vous le faites, vous allez garder ce lien vers l'application d'exemple et c'est vraiment ennuyeux.",(0,n.jsx)(s.br,{}),"\n","Donc, vous allez le faire diff\xe9remment. Vous allez cloner !"]}),"\n",(0,n.jsx)(s.h4,{id:"git-clone",children:(0,n.jsx)(s.code,{children:"git clone"})}),"\n",(0,n.jsx)(s.p,{children:"Pour cloner, vous allez faire :"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"git clone https://github.com/YunoHost/example_ynh\n"})}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"git clone"})," t\xe9l\xe9chargera une copie du d\xe9p\xf4t. Vous aurez le d\xe9p\xf4t complet, avec ses branches, ses commits, et tout le reste (dans cet apparent petit r\xe9pertoire ",(0,n.jsx)(s.code,{children:".git"}),")."]}),"\n",(0,n.jsx)(s.p,{children:"git clone est g\xe9n\xe9ralement le point de d\xe9part de tout travail local avec Git."}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.em,{children:"Toutefois, si vous comptez envoyer vos modifications sur le d\xe9p\xf4t distant sur GitHub, assurez-vous d'avoir les droits d'\xe9criture sur ce d\xe9p\xf4t. Sinon, forkez avant et clonez votre fork, pour lequel vous avez la permission."})}),"\n",(0,n.jsx)(s.h4,{id:"mon-nouveau-package-suite",children:"Mon nouveau package, suite"}),"\n",(0,n.jsxs)(s.p,{children:["Dans le contexte d'un nouveau package, vous devrez \xe9galement cr\xe9er un d\xe9p\xf4t sur GitHub pour y mettre votre package.",(0,n.jsx)(s.br,{}),"\n","Ce qui n'est pas plus compliqu\xe9 qu'un gros bouton vert ",(0,n.jsx)(s.em,{children:"New"}),".",(0,n.jsx)(s.br,{}),"\n","Ne vous emb\xeatez pas avec des README, .gitignore ou licence. Cr\xe9ez simplement le d\xe9p\xf4t lui-m\xeame.",(0,n.jsx)(s.br,{}),"\n","vous pouvez maintenant cloner ce nouveau d\xe9p\xf4t avec Git.",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.img,{src:i(3654).A+"",width:"765",height:"668"})]}),"\n",(0,n.jsxs)(s.p,{children:["Vous disposez maintenant de 2 d\xe9p\xf4ts clon\xe9s sur votre ordinateur.",(0,n.jsx)(s.br,{}),"\n","Copiez tous les fichiers de l'application example_ynh, ",(0,n.jsx)(s.strong,{children:"except\xe9 le r\xe9pertoire .git"})," (vous voulez juste les fichiers eux-m\xeames) dans votre nouveau package."]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.em,{children:"Si vous le souhaitez, vous pouvez supprimer l'application example_ynh. Nous n'en avons plus besoin."})}),"\n",(0,n.jsx)(s.p,{children:"Vous \xeates pr\xeat \xe0 travailler sur votre nouveau package !"}),"\n",(0,n.jsx)(s.h3,{id:"deuxi\xe8me-cas--travailler-localement-sur-un-d\xe9p\xf4t",children:"Deuxi\xe8me cas : Travailler localement sur un d\xe9p\xf4t"}),"\n",(0,n.jsxs)(s.p,{children:["Vous disposez d\xe9j\xe0 d'un d\xe9p\xf4t, mais ce que vous voulez, c'est travailler localement, de sorte que vous puissiez modifier plusieurs fichiers.",(0,n.jsx)(s.br,{}),"\n","Il vous suffit de cloner le d\xe9p\xf4t, le r\xe9pertoire .git est le lien vers le d\xe9p\xf4t distant. Rien d'autre \xe0 faire qu'un ",(0,n.jsx)(s.code,{children:"git clone"}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"branches-1",children:"Branches"}),"\n",(0,n.jsx)(s.p,{children:"Vous avez bien votre copie local du d\xe9p\xf4t, mais comme vous avez lu attentivement cette documentation jusque-l\xe0, vous savez que vous devez vous assurer d'\xeatre sur la branche testing avant de commencer \xe0 travailler."}),"\n",(0,n.jsxs)(s.p,{children:["Pour voir les branches, et savoir sur quelle branche vous \xeates r\xe9ellement, alors que vous \xeates dans le r\xe9pertoire de votre d\xe9p\xf4t, tapez ",(0,n.jsx)(s.code,{children:"git branch"}),".",(0,n.jsx)(s.br,{}),"\n",'La branche courante est mise en \xe9vidence et pr\xe9c\xe9d\xe9e d\'un "*".']}),"\n",(0,n.jsx)(s.h3,{id:"git-checkout",children:(0,n.jsx)(s.code,{children:"git checkout"})}),"\n",(0,n.jsxs)(s.p,{children:["S'il appara\xeet que vous n'\xeates pas sur la branche o\xf9 vous vouliez \xeatre, ou que vous \xeates en fait sur master (ce qui est mal !), vous pouvez passer \xe0 une autre branche avec ",(0,n.jsx)(s.code,{children:"git checkout"}),"."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"git checkout testing\n"})}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.em,{children:"Lisez attentivement ce que Git dit quand vous validez une commande, n'oubliez jamais que Git est sournois..."})}),"\n",(0,n.jsxs)(s.h3,{id:"git-pull-avant-tout",children:[(0,n.jsx)(s.code,{children:"git pull"})," avant tout"]}),"\n",(0,n.jsxs)(s.p,{children:["Vous \xeates enfin dans la bonne branche, et pr\xeat \xe0 travailler.",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.strong,{children:"Attendez ! Un vilain pi\xe8ge vous attend..."}),(0,n.jsx)(s.br,{}),"\n","Avant de vous retrouver dans une situation inextricable. Commencez par un ",(0,n.jsx)(s.code,{children:"git pull"})," pour mettre \xe0 jour votre branche avec les derniers changements du d\xe9p\xf4t distant."]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.em,{children:"Parfois, vous rencontrerez une situation impossible o\xf9 Git vous dira que vous ne pouvez pas pull parce que vous avez des changements locaux. Mais vous ne vous souciez pas de ces modifications locales, vous voulez juste obtenir la derni\xe8re version de la branche distante. Mais Git ne se soucie pas de ce que VOUS voulez..."}),(0,n.jsx)(s.br,{}),"\n",(0,n.jsxs)(s.em,{children:["Je dois admettre que ma seule solution est aussi efficace que sale... Un bon vieux ",(0,n.jsx)(s.code,{children:"rm -r"})," du d\xe9p\xf4t et un ",(0,n.jsx)(s.code,{children:"git clone"})]})]}),"\n",(0,n.jsx)(s.h3,{id:"il-est-temps-de-travailler",children:"Il est temps de travailler"}),"\n",(0,n.jsxs)(s.p,{children:["Vous pouvez finalement travailler sur votre code.",(0,n.jsx)(s.br,{}),"\n","Lorsque vous \xeates enfin d'accord avec ce que vous avez fait, il est temps de valider votre travail."]}),"\n",(0,n.jsxs)(s.p,{children:["La premi\xe8re \xe9tape consiste \xe0 informer Git sur le(s) fichier(s) \xe0 valider. Pour ce faire, nous utiliserons ",(0,n.jsx)(s.code,{children:"git add"}),"."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"git add mon_fichier\najouter mon_autre_fichier et_aussi_celui_ci\n"})}),"\n",(0,n.jsx)(s.p,{children:"Si vous souhaitez valider l'ensemble de votre travail, vous pouvez aussi simplement faire"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"git add --all\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Pour v\xe9rifier l'\xe9tat actuel de votre validation, vous pouvez utiliser ",(0,n.jsx)(s.code,{children:"git status"}),". Il vous montrera quels fichiers seront inclus dans votre commit, et quels fichiers sont modifi\xe9s, mais pas encore inclus.",(0,n.jsx)(s.br,{}),"\n",(0,n.jsx)(s.code,{children:"git status -v"})," vous indiquera \xe9galement quelle partie des fichiers est modifi\xe9e. Une bonne fa\xe7on de s'assurer que vous n'avez pas fait d'erreur avant de faire un commit."]}),"\n",(0,n.jsx)(s.h3,{id:"git-checkout--b",children:(0,n.jsx)(s.code,{children:"git checkout -b"})}),"\n",(0,n.jsxs)(s.p,{children:["Avant de faire un commit, ou apr\xe8s, ou avant de commencer \xe0 travailler. Quand vous en avez envie !",(0,n.jsx)(s.br,{}),"\n","Vous devriez envisager d'ajouter votre travail \xe0 une branche s\xe9par\xe9e, de cette fa\xe7on, il sera facile de cr\xe9er une pull request dans la branche testing et de discuter avec les autres packagers de ce que vous sugg\xe9rez de changer."]}),"\n",(0,n.jsxs)(s.p,{children:["Pour cr\xe9er une nouvelle branche et passer \xe0 cette branche, vous pouvez utiliser ",(0,n.jsx)(s.code,{children:"git checkout -b my_new_branch"}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"git-commit",children:(0,n.jsx)(s.code,{children:"git commit"})}),"\n",(0,n.jsxs)(s.p,{children:["Faire un commit, c'est simplement valider son travail dans Git. Comme vous pouvez le faire dans GitHub.",(0,n.jsx)(s.br,{}),"\n","Pour avoir les m\xeames champs que vous aviez sur GitHub, avec le nom du commit, et une explication plus longue. Vous pouvez simplement utiliser ",(0,n.jsx)(s.code,{children:"git commit"}),".",(0,n.jsx)(s.br,{}),"\n","La premi\xe8re ligne, avant les commentaires, est pour le nom du commit.",(0,n.jsx)(s.br,{}),"\n","Apr\xe8s tous les commentaires, vous pouvez ajouter une explication si vous le souhaitez."]}),"\n",(0,n.jsx)(s.p,{children:"Si vous voulez faire un commit avec seulement un nom pour votre commit, vous pouvez utiliser une simple commande :"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:'git commit -m "My commit name"\n'})}),"\n",(0,n.jsxs)(s.h3,{id:"git-push-vers-le-d\xe9p\xf4t-distant",children:[(0,n.jsx)(s.code,{children:"git push"})," vers le d\xe9p\xf4t distant"]}),"\n",(0,n.jsxs)(s.p,{children:["Vos modifications sont valid\xe9es, mais uniquement sur votre clone local du d\xe9p\xf4t. Maintenant, vous devez renvoyer ces modifications sur le d\xe9p\xf4t distant sur GitHub.",(0,n.jsx)(s.br,{}),"\n","Pour ce faire, vous devez savoir quelle est votre branche actuelle. (Si vous ne le savez pas, ",(0,n.jsx)(s.code,{children:"git branch"})," vous donnera cette information).",(0,n.jsx)(s.br,{}),"\n","Ensuite, vous pouvez git push"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"git push -u origin BRANCH_NAME\n"})})]})}function d(e={}){let{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8210:function(e,s,i){i.d(s,{A:()=>r});let r=i.p+"assets/images/github_branch-b1508eb8b536535d5433da9a7fbbefba.png"},9229:function(e,s,i){i.d(s,{A:()=>r});let r=i.p+"assets/images/github_commit-df1ab3a290379ab7c0b3596a08d3e587.png"},3654:function(e,s,i){i.d(s,{A:()=>r});let r=i.p+"assets/images/github_create_new_repo-0e7028ed9e3b2750951b57af3483d0d9.png"},3222:function(e,s,i){i.d(s,{A:()=>r});let r=i.p+"assets/images/github_edit-177b3cf590cf9aa34de0c22bfbef2cf0.png"},2225:function(e,s,i){i.d(s,{A:()=>r});let r=i.p+"assets/images/github_pull_request-0612c9bc0be6213baea3dce4bbf2a0eb.png"},4429:function(e,s,i){i.d(s,{R:()=>a,x:()=>o});var r=i(6540);let n={},t=r.createContext(n);function a(e){let s=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);