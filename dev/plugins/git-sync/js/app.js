/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ 849:
/***/ ((__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("\n;// CONCATENATED MODULE: external \"GitSync\"\nconst external_GitSync_namespaceObject = GitSync;\nvar external_GitSync_default = /*#__PURE__*/__webpack_require__.n(external_GitSync_namespaceObject);\n// EXTERNAL MODULE: external \"jQuery\"\nvar external_jQuery_ = __webpack_require__(609);\nvar external_jQuery_default = /*#__PURE__*/__webpack_require__.n(external_jQuery_);\n// EXTERNAL MODULE: ../../../grav/grav-plugin-admin/themes/grav/node_modules/toastr/toastr.js\nvar toastr = __webpack_require__(860);\nvar toastr_default = /*#__PURE__*/__webpack_require__.n(toastr);\n;// CONCATENATED MODULE: ../../../grav/grav-plugin-admin/themes/grav/app/utils/toastr.js\n\n(toastr_default()).options.positionClass = 'toast-top-right';\n(toastr_default()).options.preventDuplicates = true;\n/* harmony default export */ const utils_toastr = ((toastr_default()));\n;// CONCATENATED MODULE: ../../../grav/grav-plugin-admin/themes/grav/app/utils/offline.js\n\n\nvar offlineElement = external_jQuery_default()('#offline-status');\nexternal_jQuery_default()(window).on('offline', function () {\n  offlineElement.slideDown();\n});\nexternal_jQuery_default()(window).on('online', function () {\n  offlineElement.slideUp();\n});\nexternal_jQuery_default()(document).ready(function () {\n  if (!offline) {\n    offlineElement.slideDown();\n  }\n}); // assume online if can't check\n\n/* harmony default export */ const offline = (typeof __webpack_require__.g.navigator.onLine !== 'undefined' ? __webpack_require__.g.navigator.onLine : true);\n;// CONCATENATED MODULE: external \"GravAdmin\"\nconst external_GravAdmin_namespaceObject = GravAdmin;\n// EXTERNAL MODULE: ../../../grav/grav-plugin-admin/themes/grav/node_modules/mout/string/trim.js\nvar trim = __webpack_require__(284);\nvar trim_default = /*#__PURE__*/__webpack_require__.n(trim);\n;// CONCATENATED MODULE: ../../../grav/grav-plugin-admin/themes/grav/app/utils/response.js\n\n\n\n\n\nvar UNLOADING = false;\n\nvar error = function error(response) {\n  var error = new Error(response.statusText || response || '');\n  error.response = response;\n  return error;\n};\n\nfunction parseStatus(response) {\n  return response;\n  /* Whoops can handle JSON responses so we don't need this for now.\n      if (response.status >= 200 && response.status < 300) {\n          return response;\n      } else {\n          throw error(response);\n      }\n  */\n}\nfunction parseJSON(response) {\n  return response.text().then(function (text) {\n    var parsed = text;\n\n    try {\n      parsed = JSON.parse(text);\n    } catch (error) {\n      var content = document.createElement('div');\n      content.innerHTML = text;\n      var the_error = new Error();\n      the_error.stack = trim_default()(content.innerText);\n      throw the_error;\n    }\n\n    return parsed;\n  });\n}\nfunction userFeedback(response) {\n  if (UNLOADING) {\n    return true;\n  }\n\n  var status = response.status || (response.error ? 'error' : '');\n  var message = response.message || (response.error ? response.error.message : null);\n  var settings = response.toastr || null;\n  var backup;\n\n  switch (status) {\n    case 'unauthenticated':\n      document.location.href = external_GravAdmin_namespaceObject.config.base_url_relative;\n      throw error('Logged out');\n\n    case 'unauthorized':\n      status = 'error';\n      message = message || 'Unauthorized.';\n      break;\n\n    case 'error':\n      status = 'error';\n      message = message || 'Unknown error.';\n      break;\n\n    case 'success':\n      status = 'success';\n      message = message || '';\n      break;\n\n    default:\n      status = 'error';\n      message = message || 'Invalid AJAX response.';\n      break;\n  }\n\n  if (settings) {\n    backup = Object.assign({}, utils_toastr.options);\n    Object.keys(settings).forEach(function (key) {\n      utils_toastr.options[key] = settings[key];\n    });\n  }\n\n  if (message && (offline || !offline && status !== 'error')) {\n    utils_toastr[status === 'success' ? 'success' : 'error'](message);\n  }\n\n  if (settings) {\n    utils_toastr.options = backup;\n  }\n\n  return response;\n}\nfunction userFeedbackError(error) {\n  if (UNLOADING) {\n    return true;\n  }\n\n  var stack = error.stack ? \"<pre><code>\".concat(error.stack, \"</code></pre>\") : '';\n  utils_toastr.error(\"Fetch Failed: <br /> \".concat(error.message, \" \").concat(stack));\n  console.error(\"\".concat(error.message, \" at \").concat(error.stack));\n}\nexternal_jQuery_default()(__webpack_require__.g).on('beforeunload._ajax', function () {\n  UNLOADING = true;\n});\n;// CONCATENATED MODULE: ../../../grav/grav-plugin-admin/themes/grav/app/utils/request.js\n\n\nvar raw;\n\nvar request = function request(url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {\n    return true;\n  };\n\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  if (options.method && options.method === 'post') {\n    var data = new FormData();\n    options.body = Object.assign({\n      'admin-nonce': external_GravAdmin_namespaceObject.config.admin_nonce\n    }, options.body || {});\n    Object.keys(options.body).map(function (key) {\n      return data.append(key, options.body[key]);\n    });\n    options.body = data;\n  }\n\n  options = Object.assign({\n    credentials: 'same-origin',\n    headers: {\n      'Accept': 'application/json'\n    }\n  }, options);\n  return fetch(url, options).then(function (response) {\n    raw = response;\n    return response;\n  }).then(parseStatus).then(parseJSON).then(userFeedback).then(function (response) {\n    return callback(response, raw);\n  })[\"catch\"](userFeedbackError);\n};\n\n/* harmony default export */ const utils_request = (request);\n// EXTERNAL MODULE: ./node_modules/whatwg-fetch/fetch.js\nvar whatwg_fetch_fetch = __webpack_require__(147);\n;// CONCATENATED MODULE: ./app/wizard/index.js\n\n\n\n\n\n\nvar GIT_REGEX = /(?:git|ssh|https?|git@[-\\w.]+):(\\/\\/)?(.*?)(\\.git)(\\/?|\\#[-\\d\\w._]+?)$/;\nvar WIZARD = external_jQuery_default()('[data-remodal-id=\"wizard\"]');\nvar RESET_LOCAL = external_jQuery_default()('[data-remodal-id=\"reset-local\"]');\nvar SERVICES = {\n  'github': 'github.com',\n  'bitbucket': 'bitbucket.org',\n  'gitlab': 'gitlab.com',\n  'allothers': 'allothers.repo'\n};\nvar BRANCHES = {\n  'github': 'main',\n  'bitbucket': 'master',\n  'gitlab': 'master',\n  'allothers': 'master'\n};\nvar TEMPLATES = {\n  REPO_URL: 'https://{placeholder}/getgrav/grav.git'\n};\n\nvar openWizard = function openWizard() {\n  var modal = WIZARD.remodal({\n    closeOnConfirm: false\n  });\n  var previous = WIZARD.find('[data-gitsync-action=\"previous\"]');\n  var next = WIZARD.find('[data-gitsync-action=\"next\"]');\n  var save = WIZARD.find('[data-gitsync-action=\"save\"]');\n  STEP = 0;\n  WIZARD.find(\"form > [class^=step-]:not(.step-\".concat(STEP, \") > .panel\")).hide().removeClass('hidden');\n  WIZARD.find(\"form > [class=\\\"step-\".concat(STEP, \"\\\"] > .panel\")).show();\n  next.removeClass('hidden');\n  previous.addClass('hidden');\n  save.addClass('hidden');\n  var webhook = external_jQuery_default()('[name=\"data[webhook]\"]').val();\n  var webhook_secret = external_jQuery_default()('[name=\"data[webhook_secret]\"]').val();\n  external_jQuery_default()('[name=\"gitsync[repository]\"]').trigger('change');\n  external_jQuery_default()('[name=\"gitsync[webhook]\"]').val(webhook);\n  external_jQuery_default()('[name=\"gitsync[webhook_secret]\"]').val(webhook_secret);\n  external_jQuery_default()('.gitsync-webhook').text(webhook);\n  modal.open();\n};\n\nvar disableButton = function disableButton(next) {\n  next.attr('disabled', 'disabled').addClass('hint--top');\n};\n\nvar enableButton = function enableButton(next) {\n  next.attr('disabled', null).removeClass('hint--top');\n};\n\nvar STEP = 0;\nvar STEPS = 0;\nvar SERVICE = null;\nexternal_jQuery_default()(document).on('closed', WIZARD, function (e) {\n  STEP = 0;\n});\nexternal_jQuery_default()(document).on('click', '[data-gitsync-useraction]', function (event) {\n  event.preventDefault();\n  var target = external_jQuery_default()(event.target).closest('[data-gitsync-useraction]');\n  var action = target.data('gitsyncUseraction');\n  var URI = \"\".concat(external_GravAdmin_namespaceObject.config.current_url, \".json\");\n\n  switch (action) {\n    case 'wizard':\n      openWizard();\n      break;\n\n    case 'sync':\n      var relativeURI = target.data('gitsync-uri');\n      target.find('i').removeClass('fa-cloud fa-git').addClass('fa-circle-o-notch fa-spin');\n      utils_request(relativeURI || URI, {\n        method: 'post',\n        body: {\n          task: 'synchronize'\n        }\n      }, function () {\n        target.find('i').removeClass('fa-circle-o-notch fa-spin').addClass(relativeURI ? 'fa-git' : 'fa-cloud');\n      });\n      break;\n\n    case 'reset':\n      var modal = RESET_LOCAL.remodal({\n        closeOnConfirm: false\n      });\n      modal.open();\n\n      if (!RESET_LOCAL.data('_reset_event_set_')) {\n        RESET_LOCAL.find('[data-gitsync-action=\"reset-local\"]').one('click', function () {\n          modal.close();\n          RESET_LOCAL.data('_reset_event_set_', true);\n          target.find('i').removeClass('fa-history').addClass('fa-circle-o-notch fa-spin');\n          utils_request(URI, {\n            method: 'post',\n            body: {\n              task: 'resetlocal'\n            }\n          }, function () {\n            RESET_LOCAL.data('_reset_event_set_', false);\n            target.find('i').removeClass('fa-circle-o-notch fa-spin').addClass('fa-history');\n          });\n        });\n      }\n\n      break;\n  }\n});\nexternal_jQuery_default()(document).on('click', '[data-gitsync-action]', function (event) {\n  event.preventDefault();\n  var target = external_jQuery_default()(event.target).closest('[data-gitsync-action]');\n  var previous = WIZARD.find('[data-gitsync-action=\"previous\"]');\n  var next = WIZARD.find('[data-gitsync-action=\"next\"]');\n  var save = WIZARD.find('[data-gitsync-action=\"save\"]');\n  var action = target.data('gitsyncAction');\n  var user = external_jQuery_default()('[name=\"gitsync[repo_user]\"]').val();\n  var noUser = external_jQuery_default()('[name=\"gitsync[no_user]\"]').is(':checked');\n  var password = external_jQuery_default()('[name=\"gitsync[repo_password]\"]').val();\n  var repository = external_jQuery_default()('[name=\"gitsync[repo_url]\"]').val();\n  var branch = external_jQuery_default()('[name=\"gitsync[branch]\"]').val();\n  var webhook = external_jQuery_default()('[name=\"gitsync[webhook]\"]').val();\n  var webhook_enabled = external_jQuery_default()('[name=\"gitsync[webhook_enabled]\"]').is(':checked');\n  var webhook_secret = external_jQuery_default()('[name=\"gitsync[webhook_secret]\"]').val();\n\n  if (target.attr('disabled')) {\n    return;\n  }\n\n  var error = [];\n\n  if (!user && !noUser) {\n    error.push('Username is missing.');\n  }\n  /*\n  if (!password) {\n      error.push('Password is missing.');\n  }\n  */\n\n\n  if (!repository) {\n    error.push('Repository is missing.');\n  }\n\n  if (['save', 'test'].includes(action)) {\n    target.find('.fa').removeClass(action === 'test' ? 'fa-plug' : 'fa-check').addClass('fa-spin fa-circle-o-notch');\n\n    if (error.length) {\n      utils_toastr.error(error.join('<br />'));\n      target.find('.fa').removeClass('fa-spin fa-circle-o-notch').addClass(action === 'test' ? 'fa-plug' : 'fa-check');\n      return false;\n    }\n  }\n\n  if (action === 'save') {\n    var folders = external_jQuery_default()('[name=\"gitsync[folders]\"]:checked').map(function (i, item) {\n      return item.value;\n    });\n    external_jQuery_default()('[name=\"data[repository]\"]').val(repository);\n    external_jQuery_default()('[name=\"data[no_user]\"]').val(noUser ? '1' : '0');\n    external_jQuery_default()('[name=\"data[user]\"]').val(user);\n    external_jQuery_default()('[name=\"data[password]\"]').val(password);\n    external_jQuery_default()('[name=\"data[branch]\"]').val(branch);\n    external_jQuery_default()('[name=\"data[remote][branch]\"]').val(branch);\n    external_jQuery_default()('[name=\"data[webhook]\"]').val(webhook);\n    external_jQuery_default()(\"[name=\\\"data[webhook_enabled]\\\"][value=\\\"\".concat(webhook_enabled ? 1 : 0, \"\\\"]\")).prop('checked', true);\n    external_jQuery_default()('[name=\"data[webhook_secret]\"]').val(webhook_secret);\n    var dataFolders = external_jQuery_default()('[name=\"data[folders][]\"]');\n\n    if (dataFolders && dataFolders[0] && dataFolders[0].selectize) {\n      dataFolders[0].selectize.setValue(folders.toArray());\n    }\n\n    external_jQuery_default()('[name=\"task\"][value=\"save\"]').trigger('click');\n    return false;\n  }\n\n  if (action === 'test') {\n    var URI = \"\".concat(external_GravAdmin_namespaceObject.config.current_url, \".json\");\n    var test = __webpack_require__.g.btoa(JSON.stringify({\n      user: noUser ? '' : user,\n      password: password,\n      repository: repository,\n      branch: branch\n    }));\n    utils_request(URI, {\n      method: 'post',\n      body: {\n        test: test,\n        task: 'testConnection'\n      }\n    });\n    target.find('.fa').removeClass('fa-spin fa-circle-o-notch').addClass('fa-plug');\n    return false;\n  }\n\n  WIZARD.find(\".step-\".concat(STEP, \" > .panel\")).slideUp();\n  STEP += action === 'next' ? +1 : -1;\n  WIZARD.find(\".step-\".concat(STEP, \" > .panel\")).slideDown();\n  save.addClass('hidden');\n\n  if (action === 'next') {\n    previous.removeClass('hidden');\n  }\n\n  if (STEP <= 0) {\n    previous.addClass('hidden');\n    enableButton(next);\n  }\n\n  if (STEP > 0) {\n    next.removeClass('hidden');\n  }\n\n  if (STEP === 1) {\n    var selectedRepo = external_jQuery_default()('[name=\"gitsync[repository]\"]:checked');\n\n    if (!selectedRepo.length) {\n      disableButton(next);\n    } else {\n      enableButton(next);\n    }\n  }\n\n  if (STEP === 2) {\n    var repoURL = external_jQuery_default()('[name=\"gitsync[repo_url]\"]').val();\n\n    if (!repoURL.length || !branch) {\n      disableButton(next);\n    } else {\n      enableButton(next);\n    }\n  }\n\n  if (STEP === STEPS) {\n    next.addClass('hidden');\n    previous.removeClass('hidden');\n    save.removeClass('hidden');\n  }\n});\nexternal_jQuery_default()(document).on('input', '[name=\"gitsync[no_user]\"]', function (event) {\n  var target = external_jQuery_default()(event.currentTarget);\n  var user = external_jQuery_default()('[name=\"gitsync[repo_user]\"]');\n\n  if (target.is(':checked')) {\n    user.val('').prop('disabled', 'disabled').attr('placeholder', '<username not required>');\n  } else {\n    user.prop('disabled', null).attr('placeholder', 'Username, not email');\n  }\n});\nexternal_jQuery_default()(document).on('change', '[name=\"gitsync[repository]\"]', function () {\n  enableButton(WIZARD.find('[data-gitsync-action=\"next\"]'));\n});\nexternal_jQuery_default()(document).on('input', '[name=\"gitsync[repo_url]\"]', function (event) {\n  var target = external_jQuery_default()(event.currentTarget);\n  var value = target.val();\n  var isGitURL = GIT_REGEX.test(value);\n  var next = WIZARD.find('[data-gitsync-action=\"next\"]');\n  target.removeClass('invalid');\n\n  if (!isGitURL) {\n    target.addClass('invalid');\n  }\n\n  if (isGitURL && value.length) {\n    enableButton(next);\n  } else {\n    disableButton(next);\n  }\n});\nexternal_jQuery_default()(document).on('keyup', '[data-gitsync-uribase] [name=\"gitsync[webhook]\"]', function (event) {\n  var target = external_jQuery_default()(event.currentTarget);\n  var value = target.val();\n  external_jQuery_default()('.gitsync-webhook').text(value);\n});\nexternal_jQuery_default()(document).on('keyup', '[data-gitsync-uribase] [name=\"gitsync[webhook_secret]\"]', function (event) {\n  external_jQuery_default()('[data-gitsync-uribase] [name=\"gitsync[webhook_enabled]\"]').trigger('change');\n});\nexternal_jQuery_default()(document).on('change', '[data-gitsync-uribase] [name=\"gitsync[webhook_enabled]\"]', function (event) {\n  var target = external_jQuery_default()(event.currentTarget);\n  var checked = target.is(':checked');\n  var secret = external_jQuery_default()('[name=\"gitsync[webhook_secret]\"]').val();\n  target.closest('.webhook-secret-wrapper').find('label:last-child')[checked ? 'removeClass' : 'addClass']('hidden');\n  external_jQuery_default()('.gitsync-webhook-secret').html(!checked || !secret.length ? '<em>leave empty</em>' : \"<code>\".concat(secret, \"</code>\"));\n});\nexternal_jQuery_default()(document).on('change', '[name=\"gitsync[repository]\"]', function (event) {\n  var target = external_jQuery_default()(event.target);\n\n  if (!target.is(':checked')) {\n    return;\n  }\n\n  SERVICE = target.val();\n  Object.keys(SERVICES).forEach(function (service) {\n    WIZARD.find(\".hidden-step-\".concat(service))[service === SERVICE ? 'removeClass' : 'addClass']('hidden');\n\n    if (service === SERVICE) {\n      WIZARD.find('.webhook-secret-wrapper')[service === 'bitbucket' ? 'addClass' : 'removeClass']('hidden');\n      WIZARD.find('input[name=\"gitsync[repo_url]\"][placeholder]').attr('placeholder', TEMPLATES.REPO_URL.replace(/\\{placeholder\\}/, SERVICES[service])).end().find('input[name=\"gitsync[branch]\"]').attr('placeholder', BRANCHES[service]).val(BRANCHES[service]);\n    }\n  });\n});\nexternal_jQuery_default()(document).on('click', '[data-access-tokens-details]', function (event) {\n  event.preventDefault();\n  var button = external_jQuery_default()(event.currentTarget);\n  var panel = button.closest('.access-tokens').find('.access-tokens-details');\n  panel.slideToggle(250, function () {\n    var isVisible = panel.is(':visible');\n    var icon = button.find('.fa');\n    icon.removeClass('fa-chevron-down fa-chevron-up').addClass(\"fa-chevron-\".concat(isVisible ? 'up' : 'down'));\n  });\n});\n\nvar showNotices = function showNotices(element) {\n  var target = external_jQuery_default()(element);\n  var selection = target.val().replace(/\\//g, '-');\n  var column = target.closest('.columns').find('.column:last');\n  column.find('[class*=\"description-\"]').addClass('hidden');\n  column.find(\".description-\".concat(selection)).removeClass('hidden').hide().fadeIn({\n    duration: 250\n  });\n};\n\nexternal_jQuery_default()(document).on('input', '[data-remodal-id=\"wizard\"] .step-4 input[type=\"checkbox\"]', function (event) {\n  var target = external_jQuery_default()(event.currentTarget);\n\n  if (!target.is(':checked')) {\n    return;\n  }\n\n  showNotices(target);\n});\nexternal_jQuery_default()(document).on('mouseenter', '[data-remodal-id=\"wizard\"] .step-4 .info-desc', function (event) {\n  var target = external_jQuery_default()(event.currentTarget).siblings('input[type=\"checkbox\"]');\n  showNotices(target);\n});\nexternal_jQuery_default()(document).on('mouseleave', '[data-remodal-id=\"wizard\"] .step-4 label', function (event) {\n  var target = external_jQuery_default()(event.currentTarget);\n  var container = target.closest('.columns');\n  var column = container.find('.column:last-child');\n  column.find('[class*=\"description-\"]').addClass('hidden');\n});\nexternal_jQuery_default()(document).on('mouseleave', '[data-remodal-id=\"wizard\"] .columns .column:first-child', function (event) {\n  var target = external_jQuery_default()(event.currentTarget);\n  var column = target.siblings('.column');\n  column.find('[class*=\"description-\"]').addClass('hidden');\n});\nexternal_jQuery_default()(document).ready(function () {\n  STEPS = WIZARD.find('[class^=\"step-\"]').length - 1;\n  WIZARD.wrapInner('<form></form>');\n  RESET_LOCAL.wrapInner('<form></form>');\n\n  if (WIZARD.length && ((external_GitSync_default()).first_time || !(external_GitSync_default()).git_installed)) {\n    openWizard();\n  }\n});\n/* harmony default export */ const wizard = ((/* unused pure expression or super */ null && (Settings)));\n;// CONCATENATED MODULE: ./app/main.js\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///849\n");

/***/ }),

/***/ 609:
/***/ ((module) => {

module.exports = jQuery;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd define */
/******/ 	(() => {
/******/ 		__webpack_require__.amdD = function () {
/******/ 			throw new Error('define cannot be used indirect');
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					result = fn();
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			143: 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			for(moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) var result = runtime(__webpack_require__);
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunktrilby_grav_plugin_gitsync"] = self["webpackChunktrilby_grav_plugin_gitsync"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, [736], () => (__webpack_require__(849)))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;